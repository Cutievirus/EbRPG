{"version":3,"sources":["0_pixi_mod.js","1_options.js","1_utility.js","2_main.js","a_mixin_event.js","cache.js","class_0_ui.js","class_battler.js","class_keyboard.js","class_sprite.js","class_ui_scene.js","class_window.js","scene_home.js","tilemap.js"],"names":["PIXI","DisplayObject","prototype","enabled","enable","this","visible","disable","update","delta","zIndex","Container","children","sort","a","b","child","Object","defineProperty","[object Object]","obj","Filament","Scene","parent","scene","addChild","Texture","crop","x","y","w","h","rect","arguments","length","Rectangle","baseTexture","Sprite","texture","Enum","values","value","SCALE_MODE","settings","width","height","tileSize","cellSize","scaleMode","HYBRID","maintainAspectRatio","uiRes","language","configure","options","assign","loadSettings","async","fetch","gameFile","json","defineProperties","pixiScaleMode","get","NORMAL","SCALE_MODES","LINEAR","NEAREST","truncateNumber","n","truncs","Math","floor","LARGE_NUMBER_ABBREVIATIONS","sleep","ms","Promise","resolve","setTimeout","minmax","min","max","val","round","places","func","factor","pow","ceil","arrayAdd","array","index","indexOf","splice","arrayRemove","mixin_object","target","mixin","implement","call","Function","_mixins","push","bind","instance","clazz","untag","s","v","Array","string","i","html","args","div","document","createElement","innerHTML","NodeList","childNodes","node","append","Element","match","element","id","reg","exec","classList","add","setAttribute","mount","mountElement","handler","construct","isConstructor","f","Boolean","Proxy","err","CoordMap","dimensions","dfault","defaultArgs","data","yz","_getValue","_getSubDimension","set","subdimension","unset","keys","has","pixiCanvas","querySelector","parentElement","ui_container","getElementById","pixi","Application","view","backgroundColor","start","pixiContext","getContext","hybridCanvas","hybridContext","appendChild","style","opacity","body","setProperty","window","addEventListener","resize","ticker","scenes","elapsedMS","updateUI","render","drawImage","roundScale","scaleX","offsetWidth","scaleY","offsetHeight","scale","ratio1","renderer","imageSmoothingEnabled","MixinEvents","events","eventname","create","event","eventlist","getEventList","callback","remove","EventInterface","removeEvent","Cache","_cache","key","path","gameAsset","resource","requestJSON","image","requestImage","TileSet","requestAsset","url","reject","AssetLoader","addRequest","cache","loaders","Loader","super","_requests","load","loader","resources","request","error","AssetRequest","UI","ui","anchor","ObservablePoint","_onAnchorUpdate","setAccessor","position","v1","v2","destroy","parentNode","removeChild","name","String","getAttribute","getPropertyValue","attributes","properties","worldVisible","mountUI","Battler","stats","lethality","resilience","haste","spirit","luck","keyboard","getKey","keygroup","keygroups","fireEvent","keyname","keyEventHandler","Key","addEventHandler","keydownHandler","keyupHandler","isDown","KeyGroup","keynames","addKey","EMPTY","loadTexture","activeScene","home","oldScene","game","enter","leave","stage","windows","Window","ui_width","ui_height","minwidth","minheight","maxwidth","maxheight","_hasFrame","_interactive","movable","resizable","closable","edgeSnap","content","handle","closeButton","dragging","finishDrag","contentObserver","MutationObserver","resizing","observe","attributeFilter","interactive","hasFrame","bounds","left","worldTransform","tx","top","ty","getBoundsUI","windex","setProperties","--width","--height","--x","--y","--z","--alpha","worldAlpha","setAttributes","data-frame","data-interactive","data-movable","data-resizable","data-closable","movementX","movementY","win","updateDrag","updateResize","alpha","MapCellTexture","RenderTexture","tilemap","BaseRenderTexture","MapCellLayer","tileset","stamp","getStamp","MapCell","baseLayer","fringeLayer","loaded","lastTileset","actors","stack","tile","loadTile","tileData","tilesetId","ts","tileX","tileY","requestTileset","tileId","getTile","layer","drawTile","row","undefined","note","passage","opaque","terrain","TileMap","actorLayer","cells"],"mappings":"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","file":"engine.js","sourcesContent":["PIXI.DisplayObject.prototype.enabled=true;\nPIXI.DisplayObject.prototype.enable=function(){\n\tthis.enabled=true;\n\tthis.visible=true;\n};\nPIXI.DisplayObject.prototype.disable=function(){\n\tthis.enabled=false;\n\tthis.visible=false;\n};\nPIXI.DisplayObject.prototype.update=function(delta){};\n\nPIXI.DisplayObject.prototype.zIndex=0;\nPIXI.Container.prototype.update=function(delta){\n\tthis.children.sort((a,b)=>a.zIndex-b.zIndex);\n\tfor(const child of this.children){\n\t\tchild.update(delta);\n\t}\n};\n\nObject.defineProperty(PIXI.DisplayObject.prototype,'scene',{\n\tget(){\n\t\tlet obj=this;\n\t\twhile (!(obj instanceof Filament.Scene) && obj.parent){\n\t\t\tobj=obj.parent;\n\t\t}\n\t\treturn (obj instanceof Filament.Scene)?obj:null;\n\t},\n\tset(scene){\n\t\tif(this.scene===scene){ return; }\n\t\tscene.addChild(this);\n\t}\n});\n\nPIXI.Texture.prototype.crop=function(x,y,w,h){\n\tconst rect = arguments.length===1?x:new PIXI.Rectangle(x,y,w,h);\n\treturn new PIXI.Texture(this.baseTexture,rect);\n}\n\nPIXI.Sprite.prototype.crop=function(){\n\tthis.texture = this.texture.crop(...arguments);\n}","Filament.Enum = class Enum{\n\tconstructor(...values){\n\t\tfor (const value of values){\n\t\t\tthis[value]=value;\n\t\t}\n\t}\n};\n\nFilament.SCALE_MODE = new Filament.Enum(\n\t\"NORMAL\",\"NEAREST\",\"HYBRID\"\n);\n\nFilament.settings = {\n\twidth: 320,\n\theight: 240,\n\ttileSize: 16,\n\tcellSize: 24,\n\tscaleMode: Filament.SCALE_MODE.HYBRID,\n\tmaintainAspectRatio: true,\n\tuiRes:1,\n\tlanguage:'en',\n};\n\nFilament.configure=options=>{\n\tObject.assign(Filament.settings,options);\n};\n\nFilament.loadSettings=async function(){\n\tconst settings = await (await fetch(Filament.gameFile('settings.json'))).json();\n\tFilament.configure(settings);\n};\n\nObject.defineProperties(Filament,{\n\tpixiScaleMode:{\n\t\tget:()=>Filament.settings.scaleMode===Filament.SCALE_MODE.NORMAL ? PIXI.SCALE_MODES.LINEAR : PIXI.SCALE_MODES.NEAREST\n\t}\n});","Filament.truncateNumber=n=>{\n\tif(n<=99999){ return n+''; }\n\tlet truncs = 0;\n\twhile (n>9999 && truncs<5){\n\t\tn/=1000;\n\t\t++truncs;\n\t}\n\treturn Math.floor(n)+Filament.LARGE_NUMBER_ABBREVIATIONS[truncs];\n};\nFilament.LARGE_NUMBER_ABBREVIATIONS=[\n\t'','K','M','B','T','Q'\n];\nFilament.sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms));\n\nFilament.minmax=(min,max,val)=>Math.max(min,Math.min(max,val));\n\nFilament.round=(value,places=0,func='round')=>{\n\tconst factor = Math.pow(10,places);\n\treturn Math[func](value*factor)/factor\n}\nFilament.floor=(value,places)=>Filament.round(value,places,'floor');\nFilament.ceil=(value,places)=>Filament.round(value,places,'ceil');\n\nFilament.arrayAdd=(array,obj,index=array.length)=>{\n\tif(array.indexOf(obj)>=0){ return true; }\n\tarray.splice(index,0,obj);\n\treturn false;\n}\n\nFilament.arrayRemove=(array,obj)=>{\n\tconst index=array.indexOf(obj);\n\tif(index>=0){\n\t\tarray.splice(index,1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nFilament.mixin_object=(target,mixin)=>{\n\tObject.assign(target,mixin);\n\tif(typeof mixin.implement === 'function'){ mixin.implement.call(target); }\n}\n\nFilament.mixin=(target,mixin)=>{\n\tif (!(target instanceof Function)){ return Filament.mixin_object(target,mixin); }\n\tif(!target._mixins){ target._mixins=[] }\n\ttarget._mixins.push(mixin);\n\tObject.assign(target.prototype,mixin);\n\ttarget.prototype.implement=Filament.implement.bind(this);\n}\nFilament.implement=function(instance,clazz){\n\tif (!instance || !clazz._mixins){ return; }\n\tfor (const mixin of clazz._mixins){\n\t\tif(typeof mixin.implement === 'function'){ mixin.implement.call(instance); }\n\t}\n}\n\nFilament.untag=(s,...v)=>{\n\tif(!(s instanceof Array)){ return s; }\n\tlet string = '';\n\tfor (const i in s){ string+=s[i]+(v[i]||''); }\n\treturn string;\n}\n\nFilament.html=(...args)=>{\n\tconst string = untag(...args);\n\tconst div = document.createElement('div');\n\tdiv.innerHTML=string;\n\treturn new Filament.NodeList(...div.childNodes);\n}\n\nFilament.NodeList=class extends Array{\n\tmount(target){\n\t\tfor (const node of this){\n\t\t\ttarget.append(node);\n\t\t}\n\t\treturn this;\n\t}\n\telements(){\n\t\tlet array = [];\n\t\tfor (const node of this){\n\t\t\tif(node instanceof Element){ array.push(node); }\n\t\t}\n\t\treturn array;\n\t}\n}\n\nFilament.createElement=(string,child)=>{\n\tlet match = string.match(/^[^\\s.#[\\]]+/);\n\tif(!match){throw `Couldn't find tagname in string ${string}`;}\n\tconst element = document.createElement(match[0]);\n\tmatch=string.match(/#([^\\s.#[\\]]+)/);\n\tif(match){ element.id=match[1]; }\n\tlet reg=/\\.([^\\s.#[\\]]+)/g;\n\twhile(match=reg.exec(string)){\n\t\telement.classList.add(match[1]);\n\t}\n\treg=/\\[([^\\s.#[\\]=]+)=([^\\s.#[\\]=]+)\\]/g;\n\twhile(match=reg.exec(string)){\n\t\telement.setAttribute(match[1],match[2]);\n\t}\n\tif(child){ element.append(child); }\n\telement.mount=Filament.mountElement;\n\treturn element;\n}\n\nFilament.mountElement=function(target){\n\tif(!(this instanceof Element)){ return; }\n\ttarget.append(this);\n\treturn this;\n};\n\n{\n\tconst handler = {construct(){return handler;}};\n\tFilament.isConstructor=f=>{\n\t\ttry{\n\t\t\treturn Boolean(new (new Proxy(f,handler)));\n\t\t}catch(err){\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nFilament.CoordMap = class{\n\tconstructor(dimensions=2,dfault=null,...defaultArgs){\n\t\tthis.dimensions=dimensions;\n\t\tthis.dfault=dfault;\n\t\tthis.defaultArgs=defaultArgs;\n\t\tthis.data={};\n\t}\n\tget(x,...yz){\n\t\tif(this.dimensions<=1){\n\t\t\treturn this._getValue(x);\n\t\t}\n\t\treturn this._getSubDimension(x).get(...yz);\n\t}\n\t_getValue(x){\n\t\tif(x in this.data){\n\t\t\treturn this.data[x];\n\t\t}\n\t\tif(typeof this.dfault==='function'){\n\t\t\tif(Filament.isConstructor(this.dfault)){\n\t\t\t\treturn new this.dfault(...this.defaultArgs);\n\t\t\t}else{\n\t\t\t\treturn this.dfault(...this.defaultArgs);\n\t\t\t}\n\t\t}else{\n\t\t\treturn this.dfault;\n\t\t}\n\t}\n\t_getSubDimension(x){\n\t\tif( !(this.data[x] instanceof Filament.CoordMap) ){\n\t\t\tthis.data[x]=new Filament.CoordMap(this.dimensions-1,this.dfault,...this.defaultArgs);\n\t\t}\n\t\treturn this.data[x];\n\t}\n\tset(x,...yz){\n\t\tif(this.dimensions<=1){\n\t\t\tthis.data[x]=yz[0];\n\t\t\treturn;\n\t\t}\n\t\tthis._getSubDimension(x).set(...yz);\n\t}\n\tunset(x,...yz){\n\t\tif(this.dimensions<=1){\n\t\t\tdelete this.data[x];\n\t\t\treturn;\n\t\t}\n\t\tconst subdimension = this._getSubDimension(x);\n\t\tsubdimension.unset(...yz);\n\t\tif(Object.keys(subdimension.data).length===0){\n\t\t\tdelete this.data[x];\n\t\t}\n\t}\n\thas(x,...yz){\n\t\tif(this.dimensions<=1){\n\t\t\treturn x in this.data;\n\t\t}\n\t\tif( !(x in this.data) ){ return false;}\n\t\treturn this._getSubDimension(x).has(...yz);\n\t}\n}\n","Filament.pixiCanvas = document.querySelector(\"#screen-game canvas\");\nFilament.parent = Filament.pixiCanvas.parentElement;\nFilament.ui_container = document.getElementById(\"ui-container\");\nFilament.pixi = new PIXI.Application({\n\tview: Filament.pixiCanvas,\n\twidth: Filament.settings.width,\n\theight: Filament.settings.height,\n\tbackgroundColor:0x000088\n});\n\nFilament.start=async function(){\n\tawait Filament.loadSettings();\n\tFilament.pixiContext = Filament.pixiCanvas.getContext(\"2d\");\n\tif( Filament.settings.scaleMode === Filament.SCALE_MODE.HYBRID ){\n\t\tFilament.hybridCanvas = document.createElement('canvas');\n\t\tFilament.hybridContext = Filament.hybridCanvas.getContext(\"2d\");\n\t\tFilament.hybridCanvas.id=\"hybrid-canvas\";\n\t\tFilament.pixiCanvas.parentElement.appendChild(Filament.hybridCanvas);\n\t\tFilament.pixiCanvas.style.opacity=0;\n\t}\n\tdocument.body.style.setProperty('--uiRes',Filament.settings.uiRes);\n\tdocument.body.style.setProperty('--screen-width',Filament.settings.width);\n\tdocument.body.style.setProperty('--screen-height',Filament.settings.height);\n\n\tFilament.ui_container.style.width = Filament.settings.width*Filament.settings.uiRes+\"px\";\n\tFilament.ui_container.style.height = Filament.settings.height*Filament.settings.uiRes+\"px\";\n\n\twindow.addEventListener('resize',Filament.resize);\n\tFilament.resize();\n\tFilament.ticker = Filament.pixi.ticker.add(Filament.update,Filament);\n\n\tfor (const scene of Object.values(Filament.scenes)){\n\t\tscene.start();\n\t}\n};\n\nFilament.update=()=>{\n\tconst delta = Filament.ticker.elapsedMS/1000;\n\n\tif(Filament.scene){\n\t\tFilament.scene.update(delta);\n\t\tFilament.scene.updateUI(delta);\n\t}\n\n\tif(Filament.hybridCanvas){\n\t\tFilament.pixi.render();\n\t\tFilament.hybridContext.drawImage(\n\t\t\tFilament.pixiCanvas,\n\t\t\t0,0, Filament.settings.width, Filament.settings.height,\n\t\t\t0,0, Filament.hybridCanvas.width, Filament.hybridCanvas.height\n\t\t);\n\t}\n};\n\nFilament.roundScale=n=>Math.round(n)||1;\n\nFilament.resize=()=>{\n\tlet scaleX = Filament.parent.offsetWidth / Filament.settings.width;\n\tlet scaleY = Filament.parent.offsetHeight / Filament.settings.height;\n\tlet scale = Math.min(scaleX,scaleY);\n\tif(Filament.settings.maintainAspectRatio){\n\t\tscaleX = scaleY = scale;\n\t}else{\n\t\tlet ratio1 = Filament.parent.offsetWidth/Filament.parent.offsetHeight;\n\t\tlet ratio2 = Filament.settings.width/Filament.settings.height;\n\t\tif(ratio1>ratio2){//wide\n\t\t\tFilament.pixi.renderer.resize(\n\t\t\t\tFilament.settings.height*ratio1,\n\t\t\t\tFilament.settings.height\n\t\t\t);\n\t\t}else{ //tall\n\t\t\tFilament.pixi.renderer.resize(\n\t\t\t\tFilament.settings.width,\n\t\t\t\tFilament.settings.width/ratio1\n\t\t\t);\n\t\t}\n\t\t\n\t}\n\tFilament.scaleX=scaleX;\n\tFilament.scaleY=scaleY;\n\tFilament.scale=scale;\n\t\n\tFilament.pixiCanvas.style.width = Filament.settings.width*scaleX+\"px\";\n\tFilament.pixiCanvas.style.height = Filament.settings.height*scaleY+\"px\";\n\tif(Filament.hybridCanvas){\n\t\tFilament.hybridCanvas.width = Filament.settings.width*Filament.roundScale(scaleX);\n\t\tFilament.hybridCanvas.height = Filament.settings.height*Filament.roundScale(scaleY);\n\t\tFilament.hybridCanvas.style.width = Filament.pixiCanvas.style.width;\n\t\tFilament.hybridCanvas.style.height = Filament.pixiCanvas.style.height;\n\t\tFilament.hybridContext.imageSmoothingEnabled=false;\n\t}\n\tFilament.ui_container.style.setProperty('--scale',\n\t\tscale/Filament.settings.uiRes);\n\tFilament.ui_container.style.setProperty('--left',\n\t\tFilament.parent.offsetWidth/2 - Filament.ui_container.offsetWidth/2);\n\tFilament.ui_container.style.setProperty('--top',\n\t\tFilament.parent.offsetHeight/2 - Filament.ui_container.offsetHeight/2);\n};","Filament.MixinEvents={\n\timplement(){\n\t\tthis.events={};\n\t},\n\tgetEventList(eventname,create){\n\t\tif(!(eventname in this.events) && create){\n\t\t\tthis.events[eventname]=[];\n\t\t}\n\t\treturn this.events[eventname];\n\t},\n\tfireEvent(eventname,event={}){\n\t\tconst eventlist=this.getEventList(eventname,false);\n\t\tif(!eventlist){ return; }\n\t\tfor (const callback in eventlist){\n\t\t\tevent.remove=Filament.EventInterface.removeEvent.bind(this,eventname,callback);\n\t\t\tif(typeof callback === 'function'){ callback(event); }\n\t\t}\n\t},\n\taddEvent(eventname,callback){\n\t\treturn Filament.arrayAdd(this.getEventList(eventname,true),callback);\n\t},\n\tremoveEvent(eventname,callback){\n\t\tconst eventlist = this.getEventList(eventname,false);\n\t\tif(!eventlist){ return false; }\n\t\treturn Filament.arrayRemove(this.events[eventname],callback);\n\t}\n}","Filament.Cache=class{\n\tconstructor(){\n\t\tthis._cache={};\n\t}\n\n\tasync requestImage(key,path='assets/images'){\n\t\treturn await this.gameAsset(key,path,(resource)=>{\n\t\t\tresource.texture.baseTexture.scaleMode=Filament.pixiScaleMode;\n\t\t\treturn resource.texture;\n\t\t});\n\t}\n\tasync requestAudio(key){\n\t\t\n\t}\n\tasync requestJSON(key,path='data'){\n\t\treturn await this.gameAsset(key,path,(resource)=>{\n\t\t\treturn resource.data;\n\t\t})\n\t}\n\tasync requestTileset(id){\n\t\tconst data = await requestJSON(`tilesets/${id}.json`);\n\t\tconst image = await requestImage(data.image,'assets/tilesets');\n\t\treturn new Filament.TileSet(image,data);\n\t}\n\tasync gameAsset(key,path,callback){\n\t\tpath=Filament.path(path,key);\n\t\treturn await this.requestAsset(path,Filament.gameFile(path),callback);\n\t}\n\trequestAsset(key,url,callback){\n\t\treturn new Promise((resolve,reject)=>{\n\t\t\tif(!this._cache[key]){\n\t\t\t\tthis._cache[key]=new Filament.AssetLoader(key,url,this);\n\t\t\t}\n\t\t\tif(this._cache[key] instanceof Filament.AssetLoader){\n\t\t\t\tthis._cache[key].addRequest(resolve,reject,callback);\n\t\t\t}else{\n\t\t\t\tresolve(callback(this._cache[key]));\n\t\t\t}\n\t\t});\n\t}\n}\nFilament.cache=new Filament.Cache();\n\nFilament.AssetLoader=class extends PIXI.loaders.Loader{\n\tconstructor(key,url,cache){\n\t\tsuper();\n\t\tthis.add(key,url);\n\t\tthis._requests=[];\n\t\tthis.load((loader,resources)=>{\n\t\t\tconst resource=resources[key];\n\t\t\tfor (const request of this._requests){\n\t\t\t\tif(resource.error){\n\t\t\t\t\trequest.reject(resource.error);\n\t\t\t\t}else{\n\t\t\t\t\trequest.resolve(request.callback(resource));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(resource.error){\n\t\t\t\tdelete cache._cache[key];\n\t\t\t}else{\n\t\t\t\tcache._cache[key]=resource;\n\t\t\t}\n\t\t});\n\t}\n\taddRequest(resolve,reject,callback){\n\t\tthis._requests.push(new Filament.AssetRequest(resolve,reject,callback));\n\t}\n}\n\nFilament.AssetRequest=class{\n\tconstructor(resolve,reject,callback){\n\t\tthis.resolve=resolve;\n\t\tthis.reject=reject;\n\t\tthis.callback=callback;\n\t}\n}","Filament.UI = class extends PIXI.Container{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.ui = document.createElement('div');\n\t\tthis.anchor = new PIXI.ObservablePoint(this._onAnchorUpdate, this);\n\t\tthis.setAccessor('id');\n\t\tthis.setAccessor('className');\n\t\tthis.classList=this.ui.classList;\n\t\tthis.style=this.ui.style;\n\t\tthis.style.position=\"absolute\";\n\t}\n\tmount(parent){\n\t\tparent.addChild(this);\n\t\treturn this;\n\t}\n\tmountUI(parent){\n\t\t(parent instanceof Filament.UI ? parent.ui : parent).append(this.ui);\n\t\treturn this;\n\t}\n\tsetAccessor(v1,v2=v1){\n\t\tObject.defineProperty(this,v1,{\n\t\t\tget(){return this.ui[v2];},\n\t\t\tset(v){this.ui[v2]=v;}\n\t\t});\n\t}\n\tenable(){\n\t\tsuper.enable();\n\t\tthis.setAttribute('data-enabled',true);\n\t}\n\tdisable(){\n\t\tsuper.disable();\n\t\tthis.setAttribute('data-enabled',false);\n\t}\n\tdestroy(){\n\t\tsuper.destroy();\n\t\tthis.ui.parentNode.removeChild(this.ui);\n\t}\n\tsetAttribute(name,value){\n\t\tvalue=String(value);\n\t\tif(this.ui.getAttribute(name)!==value){\n\t\t\tthis.ui.setAttribute(name,value);\n\t\t}\n\t}\n\tsetProperty(name,value){\n\t\tvalue=String(value);\n\t\tif(this.ui.style.getPropertyValue(name)!==value){\n\t\t\tthis.ui.style.setProperty(name,value);\n\t\t}\n\t}\n\tsetAttributes(attributes){\n\t\tfor (const key in attributes){ this.setAttribute(key,attributes[key]); }\n\t}\n\tsetProperties(properties){\n\t\tfor (const key in properties){ this.setProperty(key,properties[key]); }\n\t}\n\tupdateUI(delta){\n\t\tthis.setAttribute(\"data-visible\",this.worldVisible);\n\t\tif(!this.ui.parentNode && this.scene && this.scene!==this){ this.mountUI(this.scene); }\n\t}\n\t_onAnchorUpdate(){\n\t\t//this.ui.style.transform = \"translate(\"+-this.anchor.x*100+\"%,\"+-this.anchor.y*100+\"%)\";\n\t}\n}","/* NOTES\nLethality (attack power)\nResilience (hp and def)\nHaste (SP)\nSpirit (MP)\n\nhidden stats:\nLuck\n\n\nEquipment types:\nWeapon\nArmor\nAccessory\n*/\n\nFilament.Battler = class{\n\tconstructor(){\n\t\tthis.stats={\n\t\t\tlethality:0,\n\t\t\tresilience:0,\n\t\t\thaste:0,\n\t\t\tspirit:0,\n\t\t\tluck:0,\n\t\t};\n\t}\n};","Filament.keyboard={\n\tkeys:{},\n\tkeyEventHandler(eventname,event){\n\t\tconst key = this.getKey(event.key,false);\n\t\tif(typeof key[eventname] === 'function')key[eventname]();\n\t\tfor (const keygroup of key.keygroups){\n\t\t\tkeygroup.fireEvent(eventname,event);\n\t\t}\n\t},\n\taddEventHandler(keyname){\n\t\tthis[`${keyname}Handler`]=this.keyEventHandler.bind(this,keyname);\n\t},\n\tgetKey(keyname,create){\n\t\tif(!(keyname in this.keys) && create){\n\t\t\tthis.keys[keyname]=new Filament.Key(keyname);\n\t\t}\n\t\treturn this.keys[keyname];\n\t}\n};\nFilament.keyboard.addEventHandler('keydown');\nFilament.keyboard.addEventHandler('keyup');\n\nFilament.parent.addEventListener('keydown',Filament.keyboard.keydownHandler);\nFilament.parent.addEventListener('keyup',Filament.keyboard.keyupHandler);\n\nFilament.Key = class{\n\tconstructor(name){\n\t\tthis.name=name;\n\t\tthis.isDown=false;\n\t\tthis.keygroups=[];\n\t}\n\tkeydown(){\n\t\tthis.isDown=true;\n\t}\n\tkeyup(){\n\t\tthis.isDown=false;\n\t}\n}\n\nFilament.KeyGroup = class{\n\tconstructor(name,keynames=[]){\n\t\tthis.name=name;\n\t\tthis.keys=[];\n\t\tfor (const keyname of keynames){\n\t\t\tthis.addKey(keyname);\n\t\t}\n\t\t//Filament.mixin(this,Filament.EventMixin);\n\t\tthis.implement(Filament.KeyGroup);\n\t}\n\taddKey(keyname){\n\t\tconst key = Filament.keyboard.getKey(keyname,true);\n\t\tFilament.arrayAdd(key.keygroups,this);\n\t\tFilament.arrayAdd(this.keys,key);\n\t}\n\tremoveKey(keyname){\n\t\tconst key = Filament.keyboard.getKey(keyname,false);\n\t\tif(!key){ return; }\n\t\tFilament.arrayRemove(key.keygroups,this);\n\t\tFilament.arrayRemove(this.keys,key);\n\t}\n\tget isDown(){\n\t\tfor (const key in this.keys){\n\t\t\tif(key.isDown){ return true; }\n\t\t}\n\t\treturn false;\n\t}\n}\nFilament.mixin(Filament.KeyGroup, Filament.MixinEvents);","Filament.Sprite = class extends PIXI.Sprite{\n\tconstructor(key){\n\t\tsuper(PIXI.Texture.EMPTY);\n\t\tthis.loadTexture(key);\n\t}\n\tasync loadTexture(key){\n\t\tthis.texture=await Filament.cache.requestImage(key);\n\t}\n\tmount(parent){\n\t\tparent.addChild(this);\n\t\treturn this;\n\t}\n}","Filament.scenes={};\nFilament.activeScene=\"home\";\nObject.defineProperty(Filament,\"scene\",{\n\tget:()=>Filament.scenes[Filament.activeScene]||Filament.scenes.home,\n\tset(value){\n\t\tconst oldScene=Filament.activeScene;\n\t\tif(value in Filament.scenes){\n\t\t\tFilament.activeScene=value;\n\t\t}else{\n\t\t\tfor (const key in Filament.scenes){\n\t\t\t\tif(value===game.scenes[key]){\n\t\t\t\t\tFilament.activeScene=key;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(Filament.activeScene===oldScene){ return; }\n\t\tfor (const scene of Filament.scenes){\n\t\t\tif(Filament.activeScene===scene.name){\n\t\t\t\tscene.enable();\n\t\t\t\tscene.enter();\n\t\t\t}else if (scene.enabled){\n\t\t\t\tscene.disable();\n\t\t\t\tscene.leave();\n\t\t\t}\n\t\t}\n\t}\n})\n\nFilament.ui_container = document.getElementById(\"ui-container\");\n\nFilament.Scene = class extends Filament.UI{\n\tconstructor(name){\n\t\tsuper();\n\t\tthis.mountUI(Filament.ui_container);\n\t\tthis.mount(Filament.pixi.stage);\n\t\tFilament.scenes[name] = this;\n\t\tthis.id=\"scene-\"+name;\n\t\tthis.classList.add(\"scene\");\n\t\tthis.name=name;\n\t\tthis.windows=[];\n\t}\n\tupdateUI(delta){\n\t\tsuper.updateUI(delta);\n\t\tfor (let i=this.windows.length-1; i>=0; --i){\n\t\t\tthis.windows[i].updateUI(delta);\n\t\t}\n\t}\n\tstart(){}\n\tenter(){}\n\tleave(){}\n}","Filament.Window = class extends Filament.UI{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.classList.add('window');\n\t\tthis.ui_width=20;\n\t\tthis.ui_height=20;\n\t\tthis.minwidth=20;\n\t\tthis.minheight=20;\n\t\tthis.maxwidth=Filament.settings.width;\n\t\tthis.maxheight=Filament.settings.height;\n\t\tthis._hasFrame=false;\n\t\tthis._interactive=false;\n\t\tthis.movable=false;\n\t\tthis.resizable=false;\n\t\tthis.closable=false;\n\t\tthis.edgeSnap=true;\n\t\tthis.content=Filament.createElement('div.content').mount(this.ui);\n\t\tthis.handle=Filament.createElement('div.handle').mount(this.ui);\n\t\tthis.closeButton=Filament.createElement('div.closeButton','×').mount(this.ui);\n\t\tthis.closeButton.addEventListener('click',event=>{\n\t\t\tthis.destroy();\n\t\t});\n\t\tthis.handle.addEventListener('mousedown',event=>{\n\t\t\tFilament.arrayRemove(this.scene.windows,this);\n\t\t\tFilament.arrayAdd(this.scene.windows,this);\n\t\t\tthis.dragging=true;\n\t\t});\n\t\tthis.handle.addEventListener('mouseup',event=>{\n\t\t\tthis.dragging=false;\n\t\t\tthis.finishDrag(event);\n\t\t});\n\t\tthis.contentObserver=new MutationObserver(()=>{\n\t\t\tif(this.resizable){\n\t\t\t\tif(this.content.style.width||this.content.style.height){\n\t\t\t\t\tthis.content.style.width='';\n\t\t\t\t\tthis.content.style.height='';\n\t\t\t\t\tthis.resizing=true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.contentObserver.observe(this.content,{attributes:true,attributeFilter:['style']});\n\t}\n\tmount(parent){\n\t\tsuper.mount(parent);\n\t\tif(parent.scene)this.mountUI(this.scene);\n\t\treturn this;\n\t}\n\tmountUI(scene){\n\t\tif(this.scene) Filament.arrayRemove(this.scene.windows,this);\n\t\tsuper.mountUI(scene);\n\t\tFilament.arrayAdd(scene.windows,this);\n\t\treturn this;\n\t}\n\tdestroy(){\n\t\tif(this.scene) Filament.arrayRemove(this.scene.windows,this);\n\t\tsuper.destroy(...arguments);\n\t}\n\tget width(){return this.ui_width;}\n\tset width(v){this.ui_width=v;}\n\tget height(){return this.ui_height;}\n\tset height(v){this.ui_height=v;}\n\tget interactive(){return this._interactive||this.movable||this.resizable||this.closable;}\n\tset interactive(v){this._interactive=v;}\n\tget hasFrame(){return this._hasFrame||this.movable||this.resizable||this.closable;}\n\tset hasFrame(v){this._hasFrame=v;}\n\tgetBoundsUI(){\n\t\tlet bounds = {};\n\t\tbounds.width = Filament.round(this.width,2);\n\t\tbounds.height = Filament.round(this.height,2);\n\t\tbounds.left=Filament.round(this.worldTransform.tx-this.anchor.x*bounds.width,2);\n\t\tbounds.top=Filament.round(this.worldTransform.ty-this.anchor.y*bounds.height,2);\n\t\tif(this.edgeSnap){\n\t\t\tbounds.left=Filament.minmax(0,Filament.settings.width-bounds.width,bounds.left);\n\t\t\tbounds.top=Filament.minmax(0,Filament.settings.height-bounds.height,bounds.top);\n\t\t}\n\t\treturn bounds;\n\t}\n\tupdateUI(delta){\n\t\tsuper.updateUI(delta);\n\t\tif(this.resizable){\n\t\t\tthis.width=Filament.minmax(this.minwidth,this.maxwidth,this.width);\n\t\t\tthis.height=Filament.minmax(this.minheight,this.maxheight,this.height);\n\t\t}\n\t\tlet bounds = this.getBoundsUI(true);\n\t\tconst windex = this.scene.windows.indexOf(this);\n\t\tthis.setProperties({\n\t\t\t\"--width\"\t:\tbounds.width,\n\t\t\t\"--height\"\t:\tbounds.height,\n\t\t\t\"--x\"\t\t:\tbounds.left,\n\t\t\t\"--y\"\t\t:\tbounds.top,\n\t\t\t\"--z\"\t\t:\tthis.zIndex+windex/1000,\n\t\t\t\"--alpha\"\t:\tthis.worldAlpha,\n\t\t});\n\t\tthis.setAttributes({\n\t\t\t\"data-frame\"\t\t:\tthis.hasFrame,\n\t\t\t\"data-interactive\"\t:\tthis.interactive,\n\t\t\t\"data-movable\"\t\t:\tthis.movable,\n\t\t\t\"data-resizable\"\t:\tthis.resizable,\n\t\t\t\"data-closable\"\t\t:\tthis.closable,\n\t\t});\n\t}\n\tupdateDrag(event){\n\t\tthis.x+=event.movementX/Filament.scale;\n\t\tthis.y+=event.movementY/Filament.scale;\n\t}\n\tfinishDrag(event){\n\t\tif(this.edgeSnap){\n\t\t\tthis.x=Filament.minmax(0,Filament.settings.width-this.width,this.x);\n\t\t\tthis.y=Filament.minmax(0,Filament.settings.height-this.height,this.y);\n\t\t}\n\t}\n\tupdateResize(event){\n\t\tthis.width=Math.min(Filament.settings.width-this.x, this.width+event.movementX/Filament.scale);\n\t\tthis.height=Math.min(Filament.settings.height-this.y, this.height+event.movementY/Filament.scale);\n\t\tthis.resizing=false;\n\t}\n}\n\nwindow.addEventListener('mousemove',event=>{\n\tif(!Filament.scene){ return; }\n\tfor (const win of Filament.scene.windows){\n\t\tif (win.dragging){ win.updateDrag(event); }\n\t\tif (win.resizing){ win.updateResize(event); }\n\t}\n});\nwindow.addEventListener('mouseup',event=>{\n\tif(!Filament.scene){ return; }\n\tfor (const win of Filament.scene.windows){\n\t\twin.dragging=false;\n\t\twin.finishDrag();\n\t}\n});","new Filament.Scene('home');\n\nFilament.scenes.home.start=function(){\n\tthis.window = new Filament.Window().mount(this);\n\tthis.window.width=100;\n\tthis.window.height=50;\n\tthis.window.x=50;\n\tthis.window.y=25;\n\tthis.window.resizable=true;\n\tthis.window.movable=true;\n\tthis.window.closable=true;\n\tthis.window.content.append(\"Hello World\");\n\tnew Filament.Sprite('ebby.png').mount(this).alpha=0.6;\n\tnew Filament.Sprite('ebby.png').mount(this).x=20;\n}\n\nFilament.scenes.home.update=function(){\n\t\n}","\nFilament.MapCellTexture = class extends PIXI.RenderTexture{\n\tconstructor(tilemap){\n\t\tsuper(new PIXI.BaseRenderTexture({\n\t\t\twidth: Filament.settings.tileSize*tilemap.cellSize,\n\t\t\theight: Filament.settings.tileSize*tilemap.cellSize,\n\t\t\tscaleMode: Filament.pixiScaleMode,\n\t\t}));\n\t\tthis.tilemap=tilemap;\n\t}\n};\n\nFilament.MapCellLayer = class extends PIXI.Sprite{\n\tconstructor(tilemap){\n\t\tsuper(new Filament.MapCellTexture(tilemap));\n\t}\n\tdestroy(){\n\t\tsuper.destroy(...arguments);\n\t\tthis.texture.destroy();\n\t}\n\tdrawTile(tileset,tx,ty,x,y){\n\t\tconst stamp = tileset.getStamp(tx,ty);\n\t\tstamp.position.set(x,y);\n\t\tFilament.pixi.renderer.render(stamp,this.texture);\n\t}\n}\n\n/**\n * An object representing an indivitual cell in the tilemap.\n * contains a reference to MapCellLayer objects for the base and fringe layers as well as\n * a list of all entities in the actorLayer associated with this cell.\n */\nFilament.MapCell = class{\n\tconstructor(tilemap){\n\t\tthis.tilemap=tilemap;\n\t\tthis.baseLayer=new Filament.MapCellLayer();\n\t\tthis.fringeLayer=new Filament.MapCellLayer();\n\t\ttilemap.baseLayer.addChild(this.baseLayer);\n\t\ttilemap.fringeLayer.addChild(this.fringeLayer);\n\t\tthis.loaded=false;\n\t\tthis.lastTileset=0;\n\t\tthis.texture = new MapCellTexture(this.tilemap);\n\t}\n\tasync load(){\n\t\t// load cell terrain and json\n\t\tthis.data=[];\n\t\tthis.actors=[];\n\n\t\t// loop through each tile stack in the data\n\t\tfor(let i=0;i<data.length;++i){\n\t\t\tconst stack = data[i];\n\t\t\tconst x=i%this.tilemap.cellSize;\n\t\t\tconst y=Math.floor(i/Math.tilemap.cellSize);\n\t\t\tif(stack instanceof Array){\n\t\t\t\tfor(const tile of stack){ await this.loadTile(tile,x,y); }\n\t\t\t}else{\n\t\t\t\tawait this.loadTile(stack,x,y);\n\t\t\t}\n\t\t}\n\t\tthis.loaded=true;\n\t}\n\tasync loadTile(tileData,x,y){\n\t\tconst tilesetId='ts' in tileData ? tileData.ts : this.lastTileset;\n\t\tif(tilesetId !== this.lastTileset){ this.lastTileset = tilesetId; }\n\t\tconst tileX=tileData.x;\n\t\tconst tileY=tileData.y;\n\t\tconst tileset=Filament.cache.requestTileset(tileId);\n\t\t// get tile layer data so we know how to draw it.\n\t\tconst layerType = tileset.getTile(tileX,tileY).layer;\n\t\tswitch(layerType){\n\t\tcase 0://base\n\t\t\tthis.baseLayer.drawTile(tileset,tileX,tileY,x,y);\n\t\t\tbreak;\n\t\tcase 1://actor\n\t\t\tbreak;\n\t\tcase 2://fringe\n\t\t\tbreak;\n\t\tcase 3://overpass\n\t\t\tbreak;\n\t\tdefault:\n\t\t}\n\t}\n\tunload(){\n\t\tthis.baseLayer.destroy();\n\t\tthis.fringeLayer.destroy();\n\t}\n}\n\nFilament.TileSet = class{\n\tconstructor(image,data){\n\t\tthis.image=image;\n\t\tthis.data=data;\n\t\tthis.stamp = new PIXI.Sprite(image);\n\t}\n\tgetStamp(x,y){\n\t\tconst ts=this.data.tileSize;\n\t\tthis.stamp.crop(x*ts,y*ts,ts,ts);\n\t\treturn this.stamp;\n\t}\n\tgetTile(x,y){\n\t\tconst row = this.data.data[y];\n\t\tif(!row){ return null; }\n\t\tlet tile = row[x];\n\t\tif(tile==undefined){ return null; }\n\t\tif( typeof tile==='number' ){\n\t\t\ttile={data:tile,note:''};\n\t\t}else if( tile.passage ){ return tile; }\n\t\ttile.passage = tile.data & 0b1111;\n\t\ttile.opaque = (tile.data>>>4) & 0b1;\n\t\ttile.layer = (tile.data>>>5) & 0b111;\n\t\ttile.terrain = tile.data>>>8;\n\t\trow[x]=tile;\n\t}\n}\n\n/**\n * The TileMap Class.\n * Each tilemap has multiple elevation layers.\n */\nFilament.TileMap = class extends PIXI.Container{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.baseLayer = new PIXI.Container();\n\t\tthis.actorLayer = new PIXI.Container();\n\t\tthis.fringeLayer = new PIXI.Container();\n\t\tthis.cells = new Filament.CoordMap(2);\n\t\t// TODO: read map settings from JSON.\n\t\tthis.settings={\n\t\t\tname:'',\n\t\t\tcellSize:null,\n\t\t};\n\t}\n\tget cellSize(){\n\t\treturn this.settings.cellSize?this.settings.cellSize:Filament.settings.cellSize;\n\t}\n}\n\n/*\nBetter idea for elevation.\nEverything is handled in one layer with tile stacks as usual.\n\nAn tile can be opaque or transparent.\nOpaque tiles erase underlying tiles when placed.\nTransparent tiles stack on top of underlying tiles.\n\nThere are four \"layering\" options for each tile.\nBase is rendered under player.\nActor is rendered same layer as player.\nFringe is rendered above player.\nOverpass is special. It's in the actor layer, but is rendered above or below the player depending on their elevation.\noverpass elevation is one plus the number of overpass tiles underlying in the stack.\nWhen player can step onto overpass tile, their elevation is set to same as the overpass they're walking on.\nWhen player can't step onto the overpass tile, they instead step under it.\n\n*/"]}