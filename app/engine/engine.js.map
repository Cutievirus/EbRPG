{"version":3,"sources":["0_pixi_mod.js","1_options.js","1_utility.js","2_main.js","4_mixin_event.js","4_mixin_util.js","5_input_keyboard.js","5_input_mouse.js","cache.js","class_0_ui.js","class_battler.js","class_sprite.js","class_ui_scene.js","class_window.js","scene_home.js","scene_map.js","tilemap.js"],"names":["PIXI","DisplayObject","prototype","enabled","enable","this","visible","disable","update","delta","zIndex","Container","children","sort","a","b","child","Object","defineProperty","[object Object]","obj","Filament","Scene","parent","scene","addChild","Texture","crop","x","y","w","h","rect","arguments","length","Rectangle","baseTexture","Sprite","texture","BLEND_MODES","addBlendMode","name","value","blendModes","pixi","renderer","state","push","Enum","values","SCALE_MODE","settings","slug","width","height","tileSize","cellSize","scaleMode","HYBRID","_maintainAspectRatio","maintainAspectRatio","Infinity","_uiRes","uiRes","scale","language","configure","options","assign","loadSettings","async","fetch","gameFile","json","determineScale","body","document","style","setProperty","defineProperties","pixiScaleMode","get","NORMAL","SCALE_MODES","LINEAR","NEAREST","truncateNumber","n","truncs","Math","floor","LARGE_NUMBER_ABBREVIATIONS","sleep","ms","Promise","resolve","setTimeout","minmax","min","max","val","round","places","func","factor","pow","ceil","roundFactor","floorFactor","ceilFactor","arrayAdd","array","index","indexOf","splice","arrayRemove","arrayShuffle","i","j","random","t","modulo","m","target","mixins","mixin","field","mixin_object","implement","call","Function","_mixins","bind","instance","clazz","untag","s","v","Array","string","html","args","div","createElement","innerHTML","NodeList","childNodes","node","append","Element","match","element","id","reg","exec","classList","add","setAttribute","mount","mountElement","handler","construct","isConstructor","f","Boolean","Proxy","err","CoordMap","dimensions","dfault","defaultArgs","data","root","yz","coords","_get","_getValue","_getSubDimension","set","subdimension","unset","keys","has","log","message","console","error","warn","pixiCanvas","querySelector","parentElement","ui_container","getElementById","Application","view","backgroundColor","origin","Point","start","pixiContext","getContext","hybridCanvas","hybridContext","appendChild","opacity","window","addEventListener","resize","ticker","events","fireEvent","scenes","elapsedMS","updateUI","render","drawImage","roundScale","electron","_resize","resizing","ratio","offsetWidth","offsetHeight","default_ratio","imageSmoothingEnabled","alignScene","scaleX","scaleY","position","MixinEvents","eventname","create","event","eventlist","getEventList","entry","remove","removeEvent","context","callback","MixinEventHandler","listener","eventHandler","MixinUtil","key","keyboard","getKey","code","keygroup","keygroups","keyname","Key","addEventHandler","isDown","KeyGroup","keynames","addKey","mouse","canvasBounds","getBoundingClientRect","canvasX","clientX","canvasY","clientY","worldX","worldY","addEvent","Cache","_cache","path","gameAsset","resource","loadFile","image","requestJSON","requestImage","tileset","TileSet","requestAsset","url","reject","AssetLoader","addRequest","cache","loaders","Loader","super","_requests","load","loader","resources","request","AssetRequest","UI","ui","anchor","ObservablePoint","_onAnchorUpdate","uiAccessor","v1","v2","destroy","parentNode","removeChild","String","getAttribute","getPropertyValue","attributes","properties","worldVisible","mountUI","Battler","stats","lethality","resilience","haste","spirit","luck","EMPTY","loadTexture","activeScene","home","oldScene","enter","leave","stage","windows","Window","ui_width","ui_height","minwidth","minheight","maxwidth","maxheight","_hasFrame","_interactive","movable","resizable","closable","edgeSnap","content","handle","closeButton","teletype","dragging","finishDrag","contentObserver","MutationObserver","observe","attributeFilter","interactive","hasFrame","gpos","toGlobal","bounds","left","top","getBoundsUI","windex","setProperties","--width","--height","--x","--y","--z","--alpha","worldAlpha","setAttributes","data-frame","data-interactive","data-movable","data-resizable","data-closable","movementX","movementY","toLocal","text","win","updateDrag","updateResize","alpha","map","TileMap","baseLayer","actorLayer","fringeLayer","cells","MapCell","editor","clone","TileSelection","selection","selector","TileSelector","createTileEraser","tileEraser","Graphics","beginFill","ts","drawRect","endFill","blendMode","ERASE","getEraser","WebGLRenderingContext","ONE_MINUS_SRC_ALPHA","stamp","tsX","tsY","row","tile","undefined","passage","opaque","layer","terrain","Tile","stack1","stack2","equals","requestTileset","tileData","getTile","box","ox","oy","boxAccessor","p","tilemap","rightclicked","dragTool","mousemove","mousedown","mouseup","calcBrushSize","useTool","dragSelection","button","PLACEMENT_MODE","RECT","tool_RECT","CLEARRECT","tool_CLEARRECT","CLONE","tool_CLONE","rightTool","leftTool","tool","getTool","PEN","tool_PEN","tool_ERASE","FILL","tool_FILL","startDrag","tiles","getSelectedTiles","setTile","eraseTile","tx","ty","cell","ctX","ctY","stack","firststack","getCellTile","from","visited","fillCount","checkAdjacent","getTileStack","includes","equalStacks","col","neighbors","neighbor","c","tileBox","e","tilesetId","newtile","clearTile","loadTileStack","empty","cellX","cellY","MapCellLayer","lastTileset","loaded","loadPromises","grid","MapCellGrid","success","promise","waitForLoad","actors","finishLoading","loadTile","drawTile","MapCellTexture","getStamp","eraser","RenderTexture","BaseRenderTexture"],"mappings":"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","file":"engine.js","sourcesContent":["PIXI.DisplayObject.prototype.enabled=true;\r\nPIXI.DisplayObject.prototype.enable=function(){\r\n\tthis.enabled=true;\r\n\tthis.visible=true;\r\n};\r\nPIXI.DisplayObject.prototype.disable=function(){\r\n\tthis.enabled=false;\r\n\tthis.visible=false;\r\n};\r\nPIXI.DisplayObject.prototype.update=function(delta){};\r\n\r\nPIXI.DisplayObject.prototype.zIndex=0;\r\nPIXI.Container.prototype.update=function(delta){\r\n\tthis.children.sort((a,b)=>a.zIndex-b.zIndex);\r\n\tfor(const child of this.children){\r\n\t\tchild.update(delta);\r\n\t}\r\n};\r\n\r\nObject.defineProperty(PIXI.DisplayObject.prototype,'scene',{\r\n\tget(){\r\n\t\tlet obj=this;\r\n\t\twhile (!(obj instanceof Filament.Scene) && obj.parent){\r\n\t\t\tobj=obj.parent;\r\n\t\t}\r\n\t\treturn (obj instanceof Filament.Scene)?obj:null;\r\n\t},\r\n\tset(scene){\r\n\t\tif(this.scene===scene){ return; }\r\n\t\tscene.addChild(this);\r\n\t}\r\n});\r\n\r\nPIXI.Texture.prototype.crop=function(x,y,w,h){\r\n\tconst rect = arguments.length===1?x:new PIXI.Rectangle(x,y,w,h);\r\n\treturn new PIXI.Texture(this.baseTexture,rect);\r\n}\r\n\r\nPIXI.Sprite.prototype.crop=function(){\r\n\tthis.texture = this.texture.crop(...arguments);\r\n}\r\n\r\nFilament.BLEND_MODES={};\r\nFilament.addBlendMode=function(name,value){\r\n\tconst blendModes=Filament.pixi.renderer.state.blendModes;\r\n\tFilament.BLEND_MODES[name]=blendModes.length;\r\n\tblendModes.push(value);\r\n}","Filament.Enum = class Enum{\r\n\tconstructor(...values){\r\n\t\tfor (const value of values){\r\n\t\t\tthis[value]=value;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nFilament.SCALE_MODE = new Filament.Enum(\r\n\t\"NORMAL\",\"NEAREST\",\"HYBRID\"\r\n);\r\n\r\nFilament.settings = {\r\n\tslug: 'filament',\r\n\twidth: 320,\r\n\theight: 240,\r\n\ttileSize: 16,\r\n\tcellSize: 24,\r\n\tscaleMode: Filament.SCALE_MODE.HYBRID,\r\n\t_maintainAspectRatio: 1,\r\n\tget maintainAspectRatio(){ return this._maintainAspectRatio<1?Infinity:this._maintainAspectRatio; },\r\n\tset maintainAspectRatio(value){ this._maintainAspectRatio=value<1?Infinity:value; },\r\n\t_uiRes:0,\r\n\tget uiRes(){ return this._uiRes>0?this._uiRes:Filament.scale; },\r\n\tset uiRes(value){ this._uiRes=value; },\r\n\tlanguage:'en',\r\n};\r\n\r\nFilament.configure=options=>{\r\n\tObject.assign(Filament.settings,options);\r\n};\r\n\r\nFilament.loadSettings=async function(){\r\n\tconst settings = await (await fetch(Filament.gameFile('settings.json'))).json();\r\n\tFilament.configure(settings);\r\n\tFilament.determineScale();\r\n\r\n\tconst body = document.body.style;\r\n\tbody.setProperty('--uiRes',Filament.settings.uiRes);\r\n\tbody.setProperty('--screen-width',Filament.settings.width);\r\n\tbody.setProperty('--screen-height',Filament.settings.height);\r\n\tbody.setProperty('--tileSize',Filament.settings.tileSize);\r\n};\r\n\r\nObject.defineProperties(Filament,{\r\n\tpixiScaleMode:{\r\n\t\tget:()=>Filament.settings.scaleMode===Filament.SCALE_MODE.NORMAL ? PIXI.SCALE_MODES.LINEAR : PIXI.SCALE_MODES.NEAREST\r\n\t}\r\n});","Filament.truncateNumber=n=>{\r\n\tif(n<=99999){ return n+''; }\r\n\tlet truncs = 0;\r\n\twhile (n>9999 && truncs<5){\r\n\t\tn/=1000;\r\n\t\t++truncs;\r\n\t}\r\n\treturn Math.floor(n)+Filament.LARGE_NUMBER_ABBREVIATIONS[truncs];\r\n};\r\nFilament.LARGE_NUMBER_ABBREVIATIONS=[\r\n\t'','K','M','B','T','Q'\r\n];\r\nFilament.sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms));\r\n\r\nFilament.minmax=(min,max,val)=>Math.max(min,Math.min(max,val));\r\n\r\nFilament.round=(value,places=0,func='round')=>{\r\n\tconst factor = Math.pow(10,places);\r\n\treturn Math[func](value*factor)/factor\r\n}\r\nFilament.floor=(value,places)=>Filament.round(value,places,'floor');\r\nFilament.ceil=(value,places)=>Filament.round(value,places,'ceil');\r\n\r\nFilament.roundFactor=(value,factor=1,func='round')=>Math[func](value/factor)*factor;\r\nFilament.floorFactor=(value,factor)=>Filament.roundFactor(value,factor,'floor');\r\nFilament.ceilFactor=(value,factor)=>Filament.roundFactor(value,factor,'ceil');\r\n\r\nFilament.arrayAdd=(array,obj,index=array.length)=>{\r\n\tif(array.indexOf(obj)>=0){ return false; }\r\n\tarray.splice(index,0,obj);\r\n\treturn true;\r\n}\r\n\r\nFilament.arrayRemove=(array,obj)=>{\r\n\tconst index=array.indexOf(obj);\r\n\tif(index>=0){\r\n\t\tarray.splice(index,1);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nFilament.arrayShuffle=a=>{\r\n\tfor (let i=a.length-1; i>0; --i){\r\n\t\tconst j = Math.floor(Math.random()*(i+1));\r\n\t\tconst t=a[i];\r\n\t\ta[i] = a[j];\r\n\t\ta[j] = t;\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nFilament.modulo=(n,m)=>(n%m+m)%m;\r\n\r\n/**\r\n * Like Object.assign, except doesn't overwrite fields\r\n * that already exist.\r\n */ \r\nFilament.assign=(target,...mixins)=>{\r\n\tfor (const mixin of mixins) for (const field in mixin){\r\n\t\tif(!(field in target)){\r\n\t\t\ttarget[field] = mixin[field];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilament.mixin_object=(target,mixin)=>{\r\n\tFilament.assign(target,mixin);\r\n\tif(typeof mixin.implement === 'function'){ mixin.implement.call(target); }\r\n}\r\n\r\nFilament.mixin=(target,mixin)=>{\r\n\tif (!(target instanceof Function)){ return Filament.mixin_object(target,mixin); }\r\n\tif(!target._mixins){ target._mixins=[] }\r\n\ttarget._mixins.push(mixin);\r\n\tFilament.assign(target.prototype,mixin);\r\n\ttarget.prototype.implement=Filament.implement.bind(this);\r\n}\r\nFilament.implement=function(instance,clazz){\r\n\tif (!instance || !clazz._mixins){ return; }\r\n\tfor (const mixin of clazz._mixins){\r\n\t\tif(typeof mixin.implement === 'function'){ mixin.implement.call(instance); }\r\n\t}\r\n}\r\n\r\nFilament.untag=(s,...v)=>{\r\n\tif(!(s instanceof Array)){ return s; }\r\n\tlet string = '';\r\n\tfor (const i in s){ string+=s[i]+(v[i]||''); }\r\n\treturn string;\r\n}\r\n\r\nFilament.html=(...args)=>{\r\n\tconst string = Filament.untag(...args);\r\n\tconst div = document.createElement('div');\r\n\tdiv.innerHTML=string;\r\n\treturn new Filament.NodeList(...div.childNodes);\r\n}\r\n\r\nFilament.NodeList=class extends Array{\r\n\tmount(target){\r\n\t\tfor (const node of this){\r\n\t\t\ttarget.append(node);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\telements(){\r\n\t\tlet array = [];\r\n\t\tfor (const node of this){\r\n\t\t\tif(node instanceof Element){ array.push(node); }\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n}\r\n\r\nFilament.createElement=(string,child)=>{\r\n\tlet match = string.match(/^[^\\s.#[\\]]+/);\r\n\tif(!match){throw `Couldn't find tagname in string ${string}`;}\r\n\tconst element = document.createElement(match[0]);\r\n\tmatch=string.match(/#([^\\s.#[\\]]+)/);\r\n\tif(match){ element.id=match[1]; }\r\n\tlet reg=/\\.([^\\s.#[\\]]+)/g;\r\n\twhile(match=reg.exec(string)){\r\n\t\telement.classList.add(match[1]);\r\n\t}\r\n\treg=/\\[([^\\s.#[\\]=]+)=([^\\s.#[\\]=]+)\\]/g;\r\n\twhile(match=reg.exec(string)){\r\n\t\telement.setAttribute(match[1],match[2]);\r\n\t}\r\n\tif(child){ element.append(child); }\r\n\telement.mount=Filament.mountElement;\r\n\treturn element;\r\n}\r\n\r\nFilament.mountElement=function(target){\r\n\tif(!(this instanceof Element)){ return; }\r\n\ttarget.append(this);\r\n\treturn this;\r\n};\r\n\r\n{\r\n\tconst handler = {construct(){return handler;}};\r\n\tFilament.isConstructor=f=>{\r\n\t\ttry{\r\n\t\t\treturn Boolean(new (new Proxy(f,handler)));\r\n\t\t}catch(err){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilament.CoordMap = class{\r\n\tconstructor(dimensions=2,dfault=null,...defaultArgs){\r\n\t\tthis.dimensions=dimensions;\r\n\t\tthis.dfault=dfault;\r\n\t\tthis.defaultArgs=defaultArgs;\r\n\t\tthis.data={};\r\n\t\tthis.root=this;\r\n\t}\r\n\tget(x,...yz){\r\n\t\tthis.coords=[x,...yz];\r\n\t\treturn this._get(x,...yz);\r\n\t}\r\n\t_get(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\treturn this._getValue(x);\r\n\t\t}\r\n\t\treturn this._getSubDimension(x).get(...yz);\r\n\t}\r\n\t_getValue(x){\r\n\t\tif(x in this.data){\r\n\t\t\treturn this.data[x];\r\n\t\t}\r\n\t\tif(typeof this.dfault==='function'){\r\n\t\t\tlet value;\r\n\t\t\tif(Filament.isConstructor(this.dfault)){\r\n\t\t\t\tvalue = new this.dfault(...this.defaultArgs,...this.root.coords);\r\n\t\t\t}else{\r\n\t\t\t\tvalue = this.dfault(...this.defaultArgs,...this.root.coords);\r\n\t\t\t}\r\n\t\t\treturn this.data[x]=value;\r\n\t\t}else{\r\n\t\t\treturn this.dfault;\r\n\t\t}\r\n\t}\r\n\t_getSubDimension(x){\r\n\t\tif( !(this.data[x] instanceof Filament.CoordMap) ){\r\n\t\t\tthis.data[x]=new Filament.CoordMap(this.dimensions-1,this.dfault,...this.defaultArgs);\r\n\t\t\tthis.data[x].root=this.root;\r\n\t\t}\r\n\t\treturn this.data[x];\r\n\t}\r\n\tset(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\tthis.data[x]=yz[0];\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._getSubDimension(x).set(...yz);\r\n\t}\r\n\tunset(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\tdelete this.data[x];\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst subdimension = this._getSubDimension(x);\r\n\t\tsubdimension.unset(...yz);\r\n\t\tif(Object.keys(subdimension.data).length===0){\r\n\t\t\tdelete this.data[x];\r\n\t\t}\r\n\t}\r\n\thas(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\treturn x in this.data;\r\n\t\t}\r\n\t\tif( !(x in this.data) ){ return false;}\r\n\t\treturn this._getSubDimension(x).has(...yz);\r\n\t}\r\n}\r\n\r\n\r\nFilament.log=(message)=>{\r\n\tconsole.log(message);\r\n};\r\nObject.assign(Filament.log,{\r\n\terror(message){\r\n\t\tconsole.error(message);\r\n\t},\r\n\twarn(message){\r\n\t\tconsole.warn(message);\r\n\t}\r\n});","Filament.pixiCanvas = document.querySelector(\"#screen-game canvas\");\r\nFilament.parent = Filament.pixiCanvas.parentElement;\r\nFilament.ui_container = document.getElementById(\"ui-container\");\r\nFilament.pixi = new PIXI.Application({\r\n\tview: Filament.pixiCanvas,\r\n\twidth: Filament.settings.width,\r\n\theight: Filament.settings.height,\r\n\tbackgroundColor:0x000088,\r\n});\r\nFilament.origin=new PIXI.Point(0,0);\r\n\r\nFilament.start=async function(){\r\n\tawait Filament.loadSettings();\r\n\tFilament.pixiContext = Filament.pixiCanvas.getContext(\"2d\");\r\n\tif( Filament.settings.scaleMode === Filament.SCALE_MODE.HYBRID ){\r\n\t\tFilament.hybridCanvas = document.createElement('canvas');\r\n\t\tFilament.hybridContext = Filament.hybridCanvas.getContext(\"2d\");\r\n\t\tFilament.hybridCanvas.id=\"hybrid-canvas\";\r\n\t\tFilament.pixiCanvas.parentElement.appendChild(Filament.hybridCanvas);\r\n\t\tFilament.pixiCanvas.style.opacity=0;\r\n\t}\r\n\r\n\tFilament.ui_container.style.setProperty('--width', Filament.settings.width*Filament.settings.uiRes);\r\n\tFilament.ui_container.style.setProperty('--height', Filament.settings.height*Filament.settings.uiRes);\r\n\r\n\twindow.addEventListener('resize',Filament.resize);\r\n\tFilament.resize();\r\n\tFilament.ticker = Filament.pixi.ticker.add(Filament.update,Filament);\r\n\r\n\tFilament.events.fireEvent('start');\r\n\r\n\tfor (const scene of Object.values(Filament.scenes)){\r\n\t\tscene.start();\r\n\t}\r\n};\r\n\r\nFilament.update=()=>{\r\n\tconst delta = Filament.ticker.elapsedMS/1000;\r\n\r\n\tif(Filament.scene){\r\n\t\tFilament.scene.update(delta);\r\n\t\tFilament.scene.updateUI(delta);\r\n\t}\r\n\r\n\tif(Filament.hybridCanvas){\r\n\t\tFilament.pixi.render();\r\n\t\tFilament.hybridContext.drawImage(\r\n\t\t\tFilament.pixiCanvas,\r\n\t\t\t0,0, Filament.pixiCanvas.width, Filament.pixiCanvas.height,\r\n\t\t\t0,0, Filament.hybridCanvas.width, Filament.hybridCanvas.height\r\n\t\t);\r\n\t}\r\n};\r\n\r\nFilament.roundScale=n=>Math.round(n)||1;\r\n\r\nFilament.resize=async()=>{\r\n\tif(Filament.electron){\r\n\t\tFilament._resize();\r\n\t\tif(Filament.resizing){ return; }\r\n\t\tFilament.resizing=true;\r\n\t\tfor(let i=0;i<10;++i){\r\n\t\t\tFilament._resize();\r\n\t\t\tawait Filament.sleep(10);\r\n\t\t}\r\n\t\tFilament.resizing=false;\r\n\t}else{\r\n\t\tFilament._resize();\r\n\t}\r\n}\r\nFilament._resize=()=>{\r\n\r\n\tlet ratio = Filament.parent.offsetWidth/Filament.parent.offsetHeight;\r\n\tlet default_ratio = Filament.settings.width/Filament.settings.height;\r\n\tratio=Filament.minmax(default_ratio/Filament.settings.maintainAspectRatio,default_ratio*Filament.settings.maintainAspectRatio,ratio)\r\n\tif(ratio>default_ratio){//wide\r\n\t\tFilament.pixi.renderer.resize(\r\n\t\t\tFilament.settings.height*ratio,\r\n\t\t\tFilament.settings.height\r\n\t\t);\r\n\t}else{ //tall\r\n\t\tFilament.pixi.renderer.resize(\r\n\t\t\tFilament.settings.width,\r\n\t\t\tFilament.settings.width/ratio\r\n\t\t);\r\n\t}\r\n\r\n\tlet scale = Filament.determineScale();\r\n\tdocument.body.style.setProperty('--uiRes',Filament.settings.uiRes);\r\n\r\n\tFilament.pixiCanvas.style.width = Filament.pixiCanvas.width*scale+\"px\";\r\n\tFilament.pixiCanvas.style.height = Filament.pixiCanvas.height*scale+\"px\";\r\n\tif(Filament.hybridCanvas){\r\n\t\tFilament.hybridCanvas.width = Filament.settings.width*Filament.roundScale(scale);\r\n\t\tFilament.hybridCanvas.height = Filament.settings.height*Filament.roundScale(scale);\r\n\t\tFilament.hybridCanvas.style.width = Filament.pixiCanvas.style.width;\r\n\t\tFilament.hybridCanvas.style.height = Filament.pixiCanvas.style.height;\r\n\t\tFilament.hybridContext.imageSmoothingEnabled=false;\r\n\t}\r\n\r\n\tFilament.ui_container.style.setProperty('--scale', scale/Filament.settings.uiRes);\r\n\tFilament.ui_container.style.setProperty('--left', Filament.parent.offsetWidth/2 - Filament.ui_container.offsetWidth/2);\r\n\tFilament.ui_container.style.setProperty('--top', Filament.parent.offsetHeight/2 - Filament.ui_container.offsetHeight/2);\r\n\tFilament.ui_container.style.setProperty('--width', Filament.pixiCanvas.width*Filament.settings.uiRes);\r\n\tFilament.ui_container.style.setProperty('--height', Filament.pixiCanvas.height*Filament.settings.uiRes);\r\n\r\n\tFilament.alignScene();\r\n\r\n\tFilament.events.fireEvent('resize');\r\n};\r\n\r\nFilament.determineScale=()=>{\r\n\tlet scaleX = Filament.parent.offsetWidth / Filament.pixiCanvas.width;\r\n\tlet scaleY = Filament.parent.offsetHeight / Filament.pixiCanvas.height;\r\n\tlet scale = Math.min(scaleX,scaleY);\r\n\tFilament.scale=scale;\r\n\tdocument.body.style.setProperty('--scale',scale);\r\n\treturn scale;\r\n};\r\n\r\nFilament.alignScene=()=>{\r\n\tFilament.scene.position.set(\r\n\t\tMath.round((Filament.pixiCanvas.width-Filament.settings.width)/2),\r\n\t\tMath.round((Filament.pixiCanvas.height-Filament.settings.height)/2)\r\n\t);\r\n}","Filament.MixinEvents={\r\n\timplement(){\r\n\t\tthis.events={};\r\n\t},\r\n\tgetEventList(eventname,create){\r\n\t\tif(!(eventname in this.events) && create){\r\n\t\t\tthis.events[eventname]=[];\r\n\t\t}\r\n\t\treturn this.events[eventname];\r\n\t},\r\n\tfireEvent(eventname,event={}){\r\n\t\tconst eventlist=this.getEventList(eventname,false);\r\n\t\tif(!eventlist){ return; }\r\n\t\tfor (const entry of eventlist){\r\n\t\t\tevent.remove=Filament.MixinEvents.removeEvent.bind(this,eventname,entry);\r\n\t\t\tif(entry.context instanceof PIXI.DisplayObject){\r\n\t\t\t\tconst scene = entry.context.scene;\r\n\t\t\t\tif(!scene){\r\n\t\t\t\t\tevent.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}else if(scene !== Filament.scene){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(typeof entry.callback === 'function'){ entry.callback.call(entry.context,event); }\r\n\t\t}\r\n\t},\r\n\taddEvent(eventname,callback,context){\r\n\t\tconst entry = {callback:callback,context:context}\r\n\t\tFilament.arrayAdd(this.getEventList(eventname,true),entry);\r\n\t\treturn entry;\r\n\t},\r\n\tremoveEvent(eventname,entry){\r\n\t\tconst eventlist = this.getEventList(eventname,false);\r\n\t\tif(!eventlist){ return false; }\r\n\t\treturn Filament.arrayRemove(eventlist,entry);\r\n\t}\r\n}\r\n\r\nFilament.MixinEventHandler={\r\n\teventHandler(eventname,event){\r\n\t\tif(typeof this.fireEvent==='function'){\r\n\t\t\tthis.fireEvent(eventname,event);\r\n\t\t}\r\n\t},\r\n\taddEventHandler(eventname,listener=Filament.parent){\r\n\t\tconst handler = `${eventname}Handler`;\r\n\t\tthis[handler]=this.eventHandler.bind(this,eventname);\r\n\t\tif(listener instanceof Object && 'addEventListener' in listener){\r\n\t\t\tlistener.addEventListener(eventname,this[handler]);\r\n\t\t}\r\n\t},\r\n}\r\n\r\nFilament.events={};\r\nFilament.mixin_object(Filament.events,Filament.MixinEvents);","Filament.MixinUtil={\r\n\tmount(parent){\r\n\t\tparent.addChild(this);\r\n\t\treturn this;\r\n    },\r\n    assign(key,value){\r\n        if(typeof arguments[0]===\"object\"){\r\n            Object.assign(this,arguments[0]);\r\n        }else{\r\n            this[key]=value;\r\n        }\r\n        return this;\r\n    }\r\n}\r\nFilament.mixin(PIXI.DisplayObject, Filament.MixinUtil);","Filament.keyboard={\r\n\tkeys:{},\r\n\teventHandler(eventname,event){\r\n\t\tconst key = this.getKey(event.code,false);\r\n\t\tif(!key){ return; }\r\n\t\tif(typeof key[eventname] === 'function')key[eventname]();\r\n\t\tfor (const keygroup of key.keygroups){\r\n\t\t\tkeygroup.fireEvent(eventname,event);\r\n\t\t}\r\n\t},\r\n\tgetKey(keyname,create){\r\n\t\tif(!(keyname in this.keys) && create){\r\n\t\t\tthis.keys[keyname]=new Filament.Key(keyname);\r\n\t\t}\r\n\t\treturn this.keys[keyname];\r\n\t}\r\n};\r\nFilament.mixin_object(Filament.keyboard,Filament.MixinEventHandler);\r\nFilament.keyboard.addEventHandler('keydown');\r\nFilament.keyboard.addEventHandler('keyup');\r\n\r\nFilament.Key = class{\r\n\tconstructor(name){\r\n\t\tthis.name=name;\r\n\t\tthis.isDown=false;\r\n\t\tthis.keygroups=[];\r\n\t}\r\n\tkeydown(){\r\n\t\tthis.isDown=true;\r\n\t}\r\n\tkeyup(){\r\n\t\tthis.isDown=false;\r\n\t}\r\n}\r\n\r\nFilament.keys={};\r\nFilament.KeyGroup = class{\r\n\tconstructor(name,keynames=[]){\r\n\t\tthis.name=name;\r\n\t\tFilament.keys[name]=this;\r\n\t\tthis.keys=[];\r\n\t\tfor (const keyname of keynames){\r\n\t\t\tthis.addKey(keyname);\r\n\t\t}\r\n\t\t//Filament.mixin(this,Filament.EventMixin);\r\n\t\tthis.implement(this,Filament.KeyGroup);\r\n\t}\r\n\taddKey(keyname){\r\n\t\tconst key = Filament.keyboard.getKey(keyname,true);\r\n\t\tFilament.arrayAdd(key.keygroups,this);\r\n\t\tFilament.arrayAdd(this.keys,key);\r\n\t}\r\n\tremoveKey(keyname){\r\n\t\tconst key = Filament.keyboard.getKey(keyname,false);\r\n\t\tif(!key){ return; }\r\n\t\tFilament.arrayRemove(key.keygroups,this);\r\n\t\tFilament.arrayRemove(this.keys,key);\r\n\t}\r\n\tget isDown(){\r\n\t\tfor (const key in this.keys){\r\n\t\t\tif(key.isDown){ return true; }\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nFilament.mixin(Filament.KeyGroup, Filament.MixinEvents);\r\n\r\nnew Filament.KeyGroup('CONFIRM',['Enter','Space']);\r\nnew Filament.KeyGroup('CANCEL',['Escape']);\r\nnew Filament.KeyGroup('UP',['ArrowUp','KeyW']);\r\nnew Filament.KeyGroup('LEFT',['ArrowLeft','KeyA']);\r\nnew Filament.KeyGroup('DOWN',['ArrowDown','KeyS']);\r\nnew Filament.KeyGroup('RIGHT',['ArrowRight','KeyD']);","Filament.mouse={\r\n\teventHandler(eventname,event){\r\n\t\tconst canvasBounds = Filament.pixiCanvas.getBoundingClientRect();\r\n\t\tevent.canvasX=(event.clientX-canvasBounds.x)/Filament.scale;\r\n\t\tevent.canvasY=(event.clientY-canvasBounds.y)/Filament.scale;\r\n\t\tevent.worldX=event.canvasX-Filament.scene.position.x;\r\n\t\tevent.worldY=event.canvasY-Filament.scene.position.y;\r\n\t\tthis.fireEvent(eventname,event);\r\n\t},\r\n}\r\nFilament.mixin_object(Filament.mouse,Filament.MixinEvents);\r\nFilament.mixin_object(Filament.mouse,Filament.MixinEventHandler);\r\n\r\nFilament.mouse.addEventHandler('click');\r\nFilament.mouse.addEventHandler('dblclick');\r\nFilament.mouse.addEventHandler('mousedown');\r\nFilament.mouse.addEventHandler('mouseup',window);\r\nFilament.mouse.addEventHandler('mousemove');\r\n\r\nFilament.mouse.addEvent('mousedown',event=>{\r\n\tFilament.mouse.isDown=true;\r\n});\r\n\r\nFilament.mouse.addEvent('mouseup',event=>{\r\n\tFilament.mouse.isDown=false;\r\n})","Filament.Cache=class{\r\n\tconstructor(){\r\n\t\tthis._cache={};\r\n\t}\r\n\r\n\tasync requestImage(key,path='assets/images'){\r\n\t\treturn await this.gameAsset(key,path,(resource)=>{\r\n\t\t\tresource.texture.baseTexture.scaleMode=Filament.pixiScaleMode;\r\n\t\t\treturn resource.texture;\r\n\t\t});\r\n\t}\r\n\tasync requestAudio(key){\r\n\t\t\r\n\t}\r\n\tasync requestJSON(key,path='data'){\r\n\t\treturn await this.gameAsset(key,path,(resource)=>{\r\n\t\t\treturn resource.data;\r\n\t\t})\r\n\t}\r\n\tasync requestCompressedJSON(key,path='data'){\r\n\t\treturn await Filament.loadFile(Filament.path(path,key));\r\n\t}\r\n\tasync requestTileset(id){\r\n\t\tif (`tileset${id}` in this._cache){\r\n\t\t\treturn this._cache[`tileset${id}`];\r\n\t\t}\r\n\t\tvar data,image;\r\n\t\ttry{\r\n\t\t\tdata = await this.requestJSON(`tilesets/${id}.json`);\r\n\t\t}catch(err){\r\n\t\t\tdata = await this.requestJSON(\"tilesets/default.json\");\r\n\t\t\tFilament.log.error(`Failed to load tileset data ${id}.`);\r\n\t\t}\r\n\t\ttry{\r\n\t\t\timage = await this.requestImage(data.image,'assets/tilesets');\r\n\t\t}catch(err){\r\n\t\t\timage = await this.requestImage(\"default.png\",'assets/tilesets');\r\n\t\t\tFilament.log.error(`Failed to load tileset image ${data.image}.`);\r\n\t\t}\r\n\t\tconst tileset = new Filament.TileSet(image,data);\r\n\t\tthis._cache[`tileset${id}`]=tileset;\r\n\t\treturn tileset;\r\n\t}\r\n\tasync gameAsset(key,path,callback){\r\n\t\tpath=Filament.path(path,key);\r\n\t\treturn await this.requestAsset(path,Filament.gameFile(path),callback);\r\n\t}\r\n\trequestAsset(key,url,callback){\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\tif(!this._cache[key]){\r\n\t\t\t\tthis._cache[key]=new Filament.AssetLoader(key,url,this);\r\n\t\t\t}\r\n\t\t\tif(this._cache[key] instanceof Filament.AssetLoader){\r\n\t\t\t\tthis._cache[key].addRequest(resolve,reject,callback);\r\n\t\t\t}else{\r\n\t\t\t\tresolve(callback(this._cache[key]));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nFilament.cache=new Filament.Cache();\r\n\r\nFilament.AssetLoader=class extends PIXI.loaders.Loader{\r\n\tconstructor(key,url,cache){\r\n\t\tsuper();\r\n\t\tthis.add(key,url);\r\n\t\tthis._requests=[];\r\n\t\tthis.load((loader,resources)=>{\r\n\t\t\tconst resource=resources[key];\r\n\t\t\tfor (const request of this._requests){\r\n\t\t\t\tif(resource.error){\r\n\t\t\t\t\trequest.reject(resource.error);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trequest.resolve(request.callback(resource));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(resource.error){\r\n\t\t\t\tdelete cache._cache[key];\r\n\t\t\t}else{\r\n\t\t\t\tcache._cache[key]=resource;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\taddRequest(resolve,reject,callback){\r\n\t\tthis._requests.push(new Filament.AssetRequest(resolve,reject,callback));\r\n\t}\r\n}\r\n\r\nFilament.AssetRequest=class{\r\n\tconstructor(resolve,reject,callback){\r\n\t\tthis.resolve=resolve;\r\n\t\tthis.reject=reject;\r\n\t\tthis.callback=callback;\r\n\t}\r\n}","Filament.UI = class extends PIXI.Container{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.ui = document.createElement('div');\r\n\t\tthis.anchor = new PIXI.ObservablePoint(this._onAnchorUpdate, this);\r\n\t\tthis.uiAccessor('id');\r\n\t\tthis.uiAccessor('className');\r\n\t\tthis.classList=this.ui.classList;\r\n\t\tthis.style=this.ui.style;\r\n\t\tthis.style.position=\"absolute\";\r\n\t}\r\n\tmount(parent){\r\n\t\tparent.addChild(this);\r\n\t\treturn this;\r\n\t}\r\n\tmountUI(parent){\r\n\t\t(parent instanceof Filament.UI ? parent.ui : parent).append(this.ui);\r\n\t\treturn this;\r\n\t}\r\n\tuiAccessor(v1,v2=v1){\r\n\t\tObject.defineProperty(this,v1,{\r\n\t\t\tget(){return this.ui[v2];},\r\n\t\t\tset(v){this.ui[v2]=v;}\r\n\t\t});\r\n\t}\r\n\tenable(){\r\n\t\tsuper.enable();\r\n\t\tthis.setAttribute('data-enabled',true);\r\n\t}\r\n\tdisable(){\r\n\t\tsuper.disable();\r\n\t\tthis.setAttribute('data-enabled',false);\r\n\t}\r\n\tdestroy(){\r\n\t\tsuper.destroy();\r\n\t\tthis.ui.parentNode.removeChild(this.ui);\r\n\t}\r\n\tsetAttribute(name,value){\r\n\t\tvalue=String(value);\r\n\t\tif(this.ui.getAttribute(name)!==value){\r\n\t\t\tthis.ui.setAttribute(name,value);\r\n\t\t}\r\n\t}\r\n\tsetProperty(name,value){\r\n\t\tvalue=String(value);\r\n\t\tif(this.ui.style.getPropertyValue(name)!==value){\r\n\t\t\tthis.ui.style.setProperty(name,value);\r\n\t\t}\r\n\t}\r\n\tsetAttributes(attributes){\r\n\t\tfor (const key in attributes){ this.setAttribute(key,attributes[key]); }\r\n\t}\r\n\tsetProperties(properties){\r\n\t\tfor (const key in properties){ this.setProperty(key,properties[key]); }\r\n\t}\r\n\tupdateUI(delta){\r\n\t\tthis.setAttribute(\"data-visible\",this.worldVisible);\r\n\t\tif(!this.ui.parentNode && this.scene && this.scene!==this){ this.mountUI(this.scene); }\r\n\t}\r\n\t_onAnchorUpdate(){\r\n\t\t//this.ui.style.transform = \"translate(\"+-this.anchor.x*100+\"%,\"+-this.anchor.y*100+\"%)\";\r\n\t}\r\n}","/* NOTES\r\nLethality (attack power)\r\nResilience (hp and def)\r\nHaste (SP)\r\nSpirit (MP)\r\n\r\nhidden stats:\r\nLuck\r\n\r\n\r\nEquipment types:\r\nWeapon\r\nArmor\r\nAccessory\r\n*/\r\n\r\nFilament.Battler = class{\r\n\tconstructor(){\r\n\t\tthis.stats={\r\n\t\t\tlethality:0,\r\n\t\t\tresilience:0,\r\n\t\t\thaste:0,\r\n\t\t\tspirit:0,\r\n\t\t\tluck:0,\r\n\t\t};\r\n\t}\r\n};","Filament.Sprite = class extends PIXI.Sprite{\r\n\tconstructor(key){\r\n\t\tsuper(PIXI.Texture.EMPTY);\r\n\t\tthis.loadTexture(key);\r\n\t}\r\n\tasync loadTexture(key){\r\n\t\tthis.texture=await Filament.cache.requestImage(key);\r\n\t}\r\n}","Filament.scenes={};\r\nFilament.activeScene=\"home\";\r\nObject.defineProperty(Filament,\"scene\",{\r\n\tget:()=>Filament.scenes[Filament.activeScene]||Filament.scenes.home,\r\n\tset(value){\r\n\t\tconst oldScene=Filament.activeScene;\r\n\t\tif(value in Filament.scenes){\r\n\t\t\tFilament.activeScene=value;\r\n\t\t}else{\r\n\t\t\tfor (const key in Filament.scenes){\r\n\t\t\t\tif(value===Filament.scenes[key]){\r\n\t\t\t\t\tFilament.activeScene=key;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(Filament.activeScene===oldScene){ return; }\r\n\t\tfor (const key in Filament.scenes){\r\n\t\t\tconst scene = Filament.scenes[key];\r\n\t\t\tif(Filament.activeScene===scene.name){\r\n\t\t\t\tscene.enable();\r\n\t\t\t\tscene.enter();\r\n\t\t\t}else if (scene.enabled){\r\n\t\t\t\tscene.disable();\r\n\t\t\t\tscene.leave();\r\n\t\t\t}\r\n\t\t}\r\n\t\tFilament.alignScene();\r\n\t}\r\n})\r\n\r\nFilament.ui_container = document.getElementById(\"ui-container\");\r\n\r\nFilament.Scene = class extends Filament.UI{\r\n\tconstructor(name){\r\n\t\tsuper();\r\n\t\tthis.mountUI(Filament.ui_container);\r\n\t\tthis.mount(Filament.pixi.stage);\r\n\t\tFilament.scenes[name] = this;\r\n\t\tthis.id=\"scene-\"+name;\r\n\t\tthis.classList.add(\"scene\");\r\n\t\tthis.name=name;\r\n\t\tthis.windows=[];\r\n\t\tthis.setAttribute('data-visible',false);\r\n\t}\r\n\tenable(){\r\n\t\tsuper.enable();\r\n\t\tthis.setAttribute('data-visible',true);\r\n\t}\r\n\tdisable(){\r\n\t\tsuper.disable();\r\n\t\tthis.setAttribute('data-visible',false);\r\n\t}\r\n\tupdateUI(delta){\r\n\t\tsuper.updateUI(delta);\r\n\t\tfor (let i=this.windows.length-1; i>=0; --i){\r\n\t\t\tthis.windows[i].updateUI(delta);\r\n\t\t}\r\n\t}\r\n\tstart(){}\r\n\tenter(){}\r\n\tleave(){}\r\n}","Filament.Window = class extends Filament.UI{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.classList.add('window');\r\n\t\tthis.ui_width=20;\r\n\t\tthis.ui_height=20;\r\n\t\tthis.minwidth=20;\r\n\t\tthis.minheight=20;\r\n\t\tthis.maxwidth=Filament.settings.width;\r\n\t\tthis.maxheight=Filament.settings.height;\r\n\t\tthis._hasFrame=false;\r\n\t\tthis._interactive=false;\r\n\t\tthis.movable=false;\r\n\t\tthis.resizable=false;\r\n\t\tthis.closable=false;\r\n\t\tthis.edgeSnap=true;\r\n\t\tthis.content=Filament.createElement('div.content').mount(this.ui);\r\n\t\tthis.handle=Filament.createElement('div.handle').mount(this.ui);\r\n\t\tthis.closeButton=Filament.createElement('div.closeButton','×').mount(this.ui);\r\n\t\tthis.closeButton.addEventListener('click',event=>{\r\n\t\t\tthis.destroy();\r\n\t\t});\r\n\t\tthis.teletype=0;\r\n\t\tthis.handle.addEventListener('mousedown',event=>{\r\n\t\t\tFilament.arrayRemove(this.scene.windows,this);\r\n\t\t\tFilament.arrayAdd(this.scene.windows,this);\r\n\t\t\tthis.dragging=true;\r\n\t\t});\r\n\t\tthis.handle.addEventListener('mouseup',event=>{\r\n\t\t\tthis.dragging=false;\r\n\t\t\tthis.finishDrag(event);\r\n\t\t});\r\n\t\tthis.contentObserver=new MutationObserver(()=>{\r\n\t\t\tif(this.resizable){\r\n\t\t\t\tif(this.content.style.width||this.content.style.height){\r\n\t\t\t\t\tthis.content.style.width='';\r\n\t\t\t\t\tthis.content.style.height='';\r\n\t\t\t\t\tthis.resizing=true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.contentObserver.observe(this.content,{attributes:true,attributeFilter:['style']});\r\n\t}\r\n\tmount(parent){\r\n\t\tsuper.mount(parent);\r\n\t\tif(parent.scene)this.mountUI(this.scene);\r\n\t\treturn this;\r\n\t}\r\n\tmountUI(scene){\r\n\t\tif(this.scene) Filament.arrayRemove(this.scene.windows,this);\r\n\t\tsuper.mountUI(scene);\r\n\t\tFilament.arrayAdd(scene.windows,this);\r\n\t\treturn this;\r\n\t}\r\n\tdestroy(){\r\n\t\tif(this.scene) Filament.arrayRemove(this.scene.windows,this);\r\n\t\tsuper.destroy(...arguments);\r\n\t}\r\n\tget width(){return this.ui_width;}\r\n\tset width(v){this.ui_width=v;}\r\n\tget height(){return this.ui_height;}\r\n\tset height(v){this.ui_height=v;}\r\n\tget interactive(){return this._interactive||this.movable||this.resizable||this.closable;}\r\n\tset interactive(v){this._interactive=v;}\r\n\tget hasFrame(){return this._hasFrame||this.movable||this.resizable||this.closable;}\r\n\tset hasFrame(v){this._hasFrame=v;}\r\n\tgetBoundsUI(){\r\n\t\tconst gpos = this.toGlobal(Filament.origin);\r\n\t\tconst bounds = {};\r\n\t\tbounds.width = Filament.round(this.width,2);\r\n\t\tbounds.height = Filament.round(this.height,2);\r\n\t\tbounds.left=Filament.round(gpos.x-this.anchor.x*bounds.width,2);\r\n\t\tbounds.top=Filament.round(gpos.y-this.anchor.y*bounds.height,2);\r\n\t\tif(this.edgeSnap){\r\n\t\t\tbounds.left=Filament.minmax(0,Filament.pixiCanvas.width-bounds.width,bounds.left);\r\n\t\t\tbounds.top=Filament.minmax(0,Filament.pixiCanvas.height-bounds.height,bounds.top);\r\n\t\t}\r\n\t\treturn bounds;\r\n\t}\r\n\tupdateUI(delta){\r\n\t\tsuper.updateUI(delta);\r\n\t\tif(this.resizable){\r\n\t\t\tthis.width=Filament.minmax(this.minwidth,this.maxwidth,this.width);\r\n\t\t\tthis.height=Filament.minmax(this.minheight,this.maxheight,this.height);\r\n\t\t}\r\n\t\tlet bounds = this.getBoundsUI(true);\r\n\t\tconst windex = this.scene.windows.indexOf(this);\r\n\t\tthis.setProperties({\r\n\t\t\t\"--width\"\t:\tbounds.width,\r\n\t\t\t\"--height\"\t:\tbounds.height,\r\n\t\t\t\"--x\"\t\t:\tbounds.left,\r\n\t\t\t\"--y\"\t\t:\tbounds.top,\r\n\t\t\t\"--z\"\t\t:\tthis.zIndex*1000+windex,\r\n\t\t\t\"--alpha\"\t:\tthis.worldAlpha,\r\n\t\t});\r\n\t\tthis.setAttributes({\r\n\t\t\t\"data-frame\"\t\t:\tthis.hasFrame,\r\n\t\t\t\"data-interactive\"\t:\tthis.interactive,\r\n\t\t\t\"data-movable\"\t\t:\tthis.movable,\r\n\t\t\t\"data-resizable\"\t:\tthis.resizable,\r\n\t\t\t\"data-closable\"\t\t:\tthis.closable,\r\n\t\t});\r\n\t}\r\n\tupdateDrag(event){\r\n\t\tthis.x+=event.movementX/Filament.scale;\r\n\t\tthis.y+=event.movementY/Filament.scale;\r\n\t}\r\n\tfinishDrag(event){\r\n\t\tif(this.edgeSnap){\r\n\t\t\tconst origin = this.parent.toLocal(Filament.origin);\r\n\t\t\tthis.x=Filament.minmax(origin.x+this.width*this.anchor.x,origin.x+Filament.pixiCanvas.width-this.width*(1-this.anchor.x),this.x);\r\n\t\t\tthis.y=Filament.minmax(origin.y+this.height*this.anchor.y,origin.y+Filament.pixiCanvas.height-this.height*(1-this.anchor.y),this.y);\r\n\t\t}\r\n\t}\r\n\tupdateResize(event){\r\n\t\tthis.width=Math.min(Filament.settings.width-this.x, this.width+event.movementX/Filament.scale);\r\n\t\tthis.height=Math.min(Filament.settings.height-this.y, this.height+event.movementY/Filament.scale);\r\n\t\tthis.resizing=false;\r\n\t}\r\n\r\n\tget text(){ return this.content.innerHTML; }\r\n\tset text(value){\r\n\r\n\t}\r\n}\r\n\r\nwindow.addEventListener('mousemove',event=>{\r\n\tif(!Filament.scene){ return; }\r\n\tfor (const win of Filament.scene.windows){\r\n\t\tif (win.dragging){ win.updateDrag(event); }\r\n\t\tif (win.resizing){ win.updateResize(event); }\r\n\t}\r\n});\r\nwindow.addEventListener('mouseup',event=>{\r\n\tif(!Filament.scene){ return; }\r\n\tfor (const win of Filament.scene.windows){\r\n\t\twin.dragging=false;\r\n\t\twin.finishDrag();\r\n\t}\r\n});","new Filament.Scene('home');\r\n\r\nFilament.scenes.home.start=function(){\r\n\tthis.window = new Filament.Window().mount(this);\r\n\tthis.window.width=100;\r\n\tthis.window.height=50;\r\n\tthis.window.x=50;\r\n\tthis.window.y=75;\r\n\tthis.window.resizable=true;\r\n\tthis.window.movable=true;\r\n\tthis.window.closable=true;\r\n\tthis.window.content.innerHTML=`Welcome to Filament!<br>\r\n\t<a href=\"javascript:void(Filament.scene='map');\">Map</a>`;\r\n\tnew Filament.Sprite('ebby.png').mount(this).assign({alpha:0.6});\r\n\tnew Filament.Sprite('ebby.png').mount(this).assign({x:20});\r\n}\r\n\r\nFilament.scenes.home.update=function(){\r\n\t\r\n}","new Filament.Scene('map');\r\n\r\nFilament.scenes.map.start=function(){\r\n\tFilament.map = new Filament.TileMap().mount(this);\r\n}\r\n\r\nFilament.scenes.map.update=function(delta){\r\n\tFilament.Scene.prototype.update.call(this,delta);\r\n}","\r\n/**\r\n * The TileMap Class.\r\n * Each tilemap has multiple elevation layers.\r\n */\r\nFilament.TileMap = class extends PIXI.Container{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.baseLayer = new PIXI.Container().mount(this);\r\n\t\tthis.actorLayer = new PIXI.Container().mount(this);\r\n\t\tthis.fringeLayer = new PIXI.Container().mount(this);\r\n\t\tthis.cells = new Filament.CoordMap(2,Filament.MapCell,this);\r\n\t\t// TODO: read map settings from JSON.\r\n\t\tif(Filament.editor.enabled){\r\n\t\t\tthis.clone = new Filament.TileSelection().mount(this);\r\n\t\t\tthis.selection = new Filament.TileSelection().mount(this);\r\n\t\t\tthis.selector = new Filament.TileSelector(this).mount(this);\r\n\t\t}\r\n\t\tthis.settings={\r\n\t\t\tname:'',\r\n\t\t\tcellSize:null,\r\n\t\t};\r\n\t}\r\n\r\n\tget cellSize(){\r\n\t\treturn this.settings.cellSize?this.settings.cellSize:Filament.settings.cellSize;\r\n\t}\r\n\tmount(){\r\n\t\tsuper.mount(...arguments);\r\n\t\tconst scene = this.scene;\r\n\t\tthis.clone.mountUI(scene);\r\n\t\tthis.selection.mountUI(scene);\r\n\t\tthis.selector.mountUI(scene);\r\n\t}\r\n}\r\nFilament.createTileEraser=function(){\r\n\tFilament.tileEraser = new PIXI.Graphics();\r\n\tFilament.tileEraser.beginFill(0);\r\n\tconst ts = Filament.settings.tileSize;\r\n\tFilament.tileEraser.drawRect(0,0,ts,ts);\r\n\tFilament.tileEraser.endFill();\r\n\tFilament.tileEraser.blendMode=Filament.BLEND_MODES.ERASE;\r\n}\r\nFilament.getEraser=function(x,y){\r\n\tconst ts = Filament.settings.tileSize;\r\n\tFilament.tileEraser.position.set(x*ts,y*ts);\r\n\treturn Filament.tileEraser;\r\n}\r\nFilament.events.addEvent('start',()=>{\r\n\tFilament.addBlendMode(\"ERASE\",[0, WebGLRenderingContext.ONE_MINUS_SRC_ALPHA]);\r\n\tFilament.createTileEraser();\r\n});\r\n\r\nFilament.TileSet = class{\r\n\tconstructor(image,data){\r\n\t\tthis.image=image;\r\n\t\tthis.data=data;\r\n\t\tthis.stamp = new PIXI.Sprite(image);\r\n\t}\r\n\tgetStamp(tsX,tsY,x,y){\r\n\t\tconst ts=this.data.tileSize;\r\n\t\tthis.stamp.crop(tsX*ts,tsY*ts,ts,ts);\r\n\t\tthis.stamp.position.set(x*ts,y*ts);\r\n\t\treturn this.stamp;\r\n\t}\r\n\tgetTile(x,y){\r\n\t\tlet row = this.data.data[y];\r\n\t\tif(!row){ row=this.data.data[y]=[]; }\r\n\t\tlet tile = row[x];\r\n\t\tif(tile==undefined){ tile={data:0} }\r\n\t\tif( typeof tile==='number' ){\r\n\t\t\ttile={data:tile};\r\n\t\t}else if( tile.passage ){ return tile; }\r\n\t\ttile.passage = tile.data & 0b1111;\r\n\t\ttile.opaque = (tile.data>>>4) & 0b1;\r\n\t\ttile.layer = (tile.data>>>5) & 0b111;\r\n\t\ttile.terrain = tile.data>>>8;\r\n\t\trow[x]=tile;\r\n\t\treturn tile;\r\n\t}\r\n}\r\n\r\nFilament.Tile = class{\r\n\tconstructor(ts,x,y){\r\n\t\tif(typeof ts === 'object'){\r\n\t\t\tx=ts.x;\r\n\t\t\ty=ts.y;\r\n\t\t\tts=ts.ts;\r\n\t\t}\r\n\t\tthis.ts=ts;\r\n\t\tthis.x=x;\r\n\t\tthis.y=y;\r\n\t}\r\n\tequals(tile){\r\n\t\treturn this.ts===tile.ts && this.x===tile.x && this.y === tile.y;\r\n\t}\r\n\tstatic equalStacks(stack1, stack2){\r\n\t\tif(stack1.length !== stack2.length){ return false; }\r\n\t\tfor (let i=0; i<stack1.length; ++i){\r\n\t\t\tif( !Filament.Tile.prototype.equals.call(stack1[i],stack2[i]) ){ return false; }\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tasync loadTileset(){\r\n\t\tif(this.tileset){ return; }\r\n\t\tthis.tileset = await Filament.cache.requestTileset(this.ts);\r\n\t\tthis.tileData = tileset.getTile(this.x, this.y);\r\n\t}\r\n}\r\n\r\nFilament.TileSelection = class extends Filament.Window{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.classList.add('tileSelection');\r\n\t\tthis.minwidth=0; this.minheight=0;\r\n\t\tthis.width=Filament.settings.tileSize;\r\n\t\tthis.height=Filament.settings.tileSize;\r\n\t\tthis.edgeSnap=false;\r\n\t\tthis.zIndex=0;\r\n\t\tthis.box={ox:0,oy:0};\r\n\t\tObject.defineProperties(this.box,{\r\n\t\t\tx:this.boxAccessor('x'),\r\n\t\t\ty:this.boxAccessor('y'),\r\n\t\t\twidth:this.boxAccessor('width'),\r\n\t\t\theight:this.boxAccessor('height'),\r\n\t\t});\r\n\t\t\r\n\t}\r\n\tboxAccessor(p){\r\n\t\tconst ts = Filament.settings.tileSize;\r\n\t\treturn {\r\n\t\t\tget:()=>this[p]/ts,\r\n\t\t\tset:v=>this[p]=v*ts,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nFilament.TileSelector = class extends Filament.TileSelection{\r\n\tconstructor(tilemap){\r\n\t\tsuper();\r\n\t\tthis.tilemap=tilemap;\r\n\t\tthis.classList.add('tileSelector');\r\n\t\tthis.rightclicked=false;\r\n\t\tthis.dragTool=null;\r\n\t\tFilament.mouse.addEvent('mousemove',this.mousemove,this);\r\n\t\tFilament.mouse.addEvent('mousedown',this.mousedown,this);\r\n\t\tFilament.mouse.addEvent('mouseup',this.mouseup,this);\r\n\t}\r\n\tupdate(delta){\r\n\t\tsuper.update(delta);\r\n\t\tthis.calcBrushSize();\r\n\t\tthis.tilemap.selection.visible = !!this.dragTool;\r\n\t\tthis.tilemap.clone.visible = Filament.editor.clone;\r\n\t}\r\n\tmousemove(event){\r\n\t\tthis.box.x=Math.floor(event.worldX/Filament.settings.tileSize);\r\n\t\tthis.box.y=Math.floor(event.worldY/Filament.settings.tileSize);\r\n\t\t//this.x=this.tileX*Filament.settings.tileSize;\r\n\t\t//this.y=this.tileY*Filament.settings.tileSize;\r\n\t\tif(Filament.mouse.isDown){\r\n\t\t\tthis.useTool();\r\n\t\t}\r\n\t\tif(this.dragTool){\r\n\t\t\tthis.dragSelection(this.tilemap.selection.box,this.box.x,this.box.y);\r\n\t\t}\r\n\t}\r\n\tdragSelection(s,x,y){\r\n\t\ts.x=s.ox; s.y=s.oy;\r\n\t\ts.width = x - s.ox;\r\n\t\tif(s.width<0){ s.x = s.ox + s.width; s.width*=-1; }\r\n\t\ts.height = y - s.oy;\r\n\t\tif(s.height<0){ s.y = s.oy + s.height; s.height*=-1; }\r\n\t\ts.width+=1; s.height+=1;\r\n\t}\r\n\tmousedown(event){\r\n\t\tthis.dragTool=null;\r\n\t\tthis.rightclicked=event.button>0;\r\n\t\tthis.useTool();\r\n\t}\r\n\tmouseup(event){\r\n\t\tif(this.dragTool){\r\n\t\t\tswitch(this.dragTool){\r\n\t\t\t\tcase Filament.PLACEMENT_MODE.RECT: this.tool_RECT(); break;\r\n\t\t\t\tcase Filament.PLACEMENT_MODE.CLEARRECT: this.tool_CLEARRECT(); break;\r\n\t\t\t\tcase Filament.PLACEMENT_MODE.CLONE: this.tool_CLONE(); break;\r\n\t\t\t}\r\n\t\t\tthis.dragTool=null;\r\n\t\t}\r\n\t\tif(event.button>0){ this.rightclicked=false; }\r\n\t}\r\n\tgetTool(){\r\n\t\treturn this.rightclicked?Filament.editor.rightTool:Filament.editor.leftTool;\r\n\t}\r\n\tuseTool(){\r\n\t\tconst tool = this.getTool();\r\n\t\tswitch(tool){\r\n\t\t\tcase Filament.PLACEMENT_MODE.PEN:\r\n\t\t\t\treturn this.tool_PEN();\r\n\t\t\tcase Filament.PLACEMENT_MODE.ERASE:\r\n\t\t\t\treturn this.tool_ERASE();\r\n\t\t\tcase Filament.PLACEMENT_MODE.FILL:\r\n\t\t\t\treturn this.tool_FILL();\r\n\t\t\tcase Filament.PLACEMENT_MODE.RECT:\r\n\t\t\tcase Filament.PLACEMENT_MODE.CLEARRECT:\r\n\t\t\tcase Filament.PLACEMENT_MODE.CLONE:\r\n\t\t\t\treturn this.startDrag(tool);\r\n\t\t}\r\n\t}\r\n\tstartDrag(tool){\r\n\t\tif(this.dragTool){ return; }\r\n\t\tthis.dragTool=tool;\r\n\t\tthis.tilemap.selection.box.ox=this.box.x;\r\n\t\tthis.tilemap.selection.box.oy=this.box.y;\r\n\t\tthis.dragSelection(this.tilemap.selection.box,this.box.x,this.box.y);\r\n\t}\r\n\tasync tool_PEN(){\r\n\t\tconst tiles = await this.getSelectedTiles();\r\n\t\tfor(let x=0; x<tiles.length; ++x){\r\n\t\t\tfor (let y=0; y<tiles[x].length; ++y){\r\n\t\t\t\tconst tile = tiles[x][y];\r\n\t\t\t\tawait this.setTile(tile,this.box.x+x,this.box.y+y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tasync tool_ERASE(){\r\n\t\tawait this.eraseTile(this.box.x,this.box.y);\r\n\t}\r\n\tasync tool_FILL(){\r\n\t\tconst tx = this.box.x;\r\n\t\tconst ty = this.box.y;\r\n\t\tconst tiles = await this.getSelectedTiles();\r\n\t\tlet {cell,x:ctX,y:ctY,stack:firststack} = await this.getCellTile(tx,ty);\r\n\t\tfirststack = Array.from(firststack);\r\n\t\tconst visited = [];\r\n\t\tlet fillCount = 0;\r\n\t\tconst checkAdjacent=async(x,y)=>{\r\n\t\t\tif( x<0 || x>= this.tilemap.cellSize || y<0 || y>= this.tilemap.cellSize ){ return; }\r\n\t\t\tconst stack = await cell.getTileStack(x,y);\r\n\t\t\tif(visited.includes(stack)){ return; }\r\n\t\t\tif(Filament.Tile.equalStacks(stack,firststack)){\r\n\t\t\t\tvisited.push(stack);\r\n\t\t\t\tconst col = tiles[Filament.modulo(x-ctX,tiles.length)];\r\n\t\t\t\tconst tile = col[Filament.modulo(y-ctY,col.length)];\r\n\t\t\t\tthis.setTile(tile,tx+x-ctX,ty+y-ctY);\r\n\t\t\t\t++fillCount;\r\n\t\t\t\tif(fillCount%10===0){ await Filament.sleep(0); }\r\n\t\t\t\tconst neighbors = [\r\n\t\t\t\t\t[x+1,y],\r\n\t\t\t\t\t[x,y+1],\r\n\t\t\t\t\t[x-1,y],\r\n\t\t\t\t\t[x,y-1],\r\n\t\t\t\t].sort((a,b)=> (Math.pow(a[0]-ctX,2)+Math.pow(a[1]-ctY,2)) - (Math.pow(b[0]-ctX,2)+Math.pow(b[1]-ctY,2)) );\r\n\t\t\t\tfor (const neighbor of neighbors){\r\n\t\t\t\t\tawait checkAdjacent(...neighbor);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tawait checkAdjacent(ctX,ctY);\r\n\t}\r\n\tasync tool_RECT(){\r\n\t\tconst tiles = await this.getSelectedTiles();\r\n\t\tconst s = this.tilemap.selection.box;\r\n\t\tfor (let x=s.x; x<s.x+s.width; ++x){\r\n\t\t\tfor (let y=s.y; y<s.y+s.height; ++y){\r\n\t\t\t\tconst col = tiles[Filament.modulo(x-s.x,tiles.length)];\r\n\t\t\t\tconst tile = col[Filament.modulo(y-s.y,col.length)];\r\n\t\t\t\tawait this.setTile(tile,x,y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tasync tool_CLEARRECT(){\r\n\t\tconst s = this.tilemap.selection.box;\r\n\t\tfor (let x=s.x; x<s.x+s.width; ++x){\r\n\t\t\tfor (let y=s.y; y<s.y+s.height; ++y){\r\n\t\t\t\tawait this.eraseTile(x,y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\ttool_CLONE(){\r\n\t\tconst c = this.tilemap.clone.box;\r\n\t\tconst s = this.tilemap.selection.box;\r\n\t\tc.x = s.x; c.y = s.y;\r\n\t\tc.width= s.width; c.height = s.height;\r\n\t\tFilament.editor.clone=true;\r\n\t}\r\n\tcalcBrushSize(){\r\n\t\tif(this.getTool()!==Filament.PLACEMENT_MODE.PEN){ \r\n\t\t\tthis.box.width=this.box.height=1;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(Filament.editor.clone){\r\n\t\t\tthis.box.width=this.tilemap.clone.box.width;\r\n\t\t\tthis.box.height=this.tilemap.clone.box.height;\r\n\t\t}else{\r\n\t\t\tthis.box.width=Filament.editor.tileBox.width;\r\n\t\t\tthis.box.height=Filament.editor.tileBox.height;\r\n\t\t}\r\n\t}\r\n\tasync getSelectedTiles(){\r\n\t\tconst tiles = [];\r\n\t\tif(Filament.editor.clone){\r\n\t\t\tconst c = this.tilemap.clone.box;\r\n\t\t\tfor (let x=c.x; x<c.x+c.width; ++x){\r\n\t\t\t\tconst col = [];\r\n\t\t\t\ttiles.push(col);\r\n\t\t\t\tfor (let y=c.y; y<c.y+c.height; ++y){\r\n\t\t\t\t\tconst {stack} = await this.getCellTile(x,y);\r\n\t\t\t\t\tcol.push(Array.from(stack));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn tiles;\r\n\t\t}\r\n\t\tconst e = Filament.editor.tileBox;\r\n\t\tfor (let x=e.x; x<e.x+e.width; ++x){\r\n\t\t\tconst col = [];\r\n\t\t\ttiles.push(col);\r\n\t\t\tfor (let y=e.y; y<e.y+e.height; ++y){\r\n\t\t\t\tcol.push(new Filament.Tile(Filament.editor.tilesetId,x,y));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tiles;\r\n\t}\r\n\tasync setTile(newtile,x,y){\r\n\t\tconst {cell,x:ctX,y:ctY,stack} = await this.getCellTile(x,y);\r\n\t\tif (newtile instanceof Filament.Tile) for (let i=0; i<stack.length; ++i){\r\n\t\t\tconst tile = stack[i];\r\n\t\t\tif(!tile){ continue; }\r\n\t\t\tif(newtile.equals(tile)){\r\n\t\t\t\tif(i===stack.length-1){ return; }\r\n\t\t\t\tFilament.arrayRemove(stack,tile);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\t//stack[0]=newtile;\r\n\t\tif(newtile instanceof Array){\r\n\t\t\tstack.length=0;\r\n\t\t\tstack.push(...newtile);\r\n\t\t}else{\r\n\t\t\tFilament.arrayAdd(stack,newtile);\r\n\t\t}\r\n\t\tcell.clearTile(ctX,ctY);\r\n\t\tawait cell.loadTileStack(ctX,ctY,stack);\r\n\t\tif(cell.empty){ cell.empty=false; }\r\n\t}\r\n\tasync eraseTile(x,y){\r\n\t\tconst {cell,x:ctX,y:ctY,stack} = await this.getCellTile(x,y);\r\n\t\tcell.clearTile(ctX,ctY);\r\n\t\tstack.length=0;\r\n\t}\r\n\tasync getCellTile(x,y){\r\n\t\tconst cellX=Math.floor(x/this.tilemap.cellSize);\r\n\t\tconst cellY=Math.floor(y/this.tilemap.cellSize);\r\n\t\tconst cell = this.tilemap.cells.get(cellX,cellY);\r\n\t\tconst ctX=Filament.modulo(x,this.tilemap.cellSize);\r\n\t\tconst ctY=Filament.modulo(y,this.tilemap.cellSize);\r\n\t\tconst stack = await cell.getTileStack(ctX,ctY);\r\n\t\treturn {cell:cell,x:ctX,y:ctY,stack:stack};\r\n\t}\r\n}\r\nFilament.PLACEMENT_MODE = new Filament.Enum(\r\n\t\"PEN\",\"ERASE\",\"FILL\",\"RECT\",\"CLEARRECT\",\"CLONE\"\r\n);\r\nObject.assign(Filament.editor,{\r\n\tleftTool: Filament.PLACEMENT_MODE.PEN,\r\n\trightTool: Filament.PLACEMENT_MODE.ERASE,\r\n\ttilesetId:0,\r\n\ttileBox:{x:0,y:0,width:1,height:1,ox:0,oy:0},\r\n\tclone:false,\r\n});\r\n\r\n/**\r\n * An object representing an indivitual cell in the tilemap.\r\n * contains a reference to MapCellLayer objects for the base and fringe layers as well as\r\n * a list of all entities in the actorLayer associated with this cell.\r\n */\r\nFilament.MapCell = class{\r\n\tconstructor(tilemap,x,y){\r\n\t\tthis.x=x; this.y=y;\r\n\t\tthis.tilemap=tilemap;\r\n\t\tthis.baseLayer=new Filament.MapCellLayer(tilemap,x,y);\r\n\t\tthis.fringeLayer=new Filament.MapCellLayer(tilemap,x,y);\r\n\t\ttilemap.baseLayer.addChild(this.baseLayer);\r\n\t\ttilemap.fringeLayer.addChild(this.fringeLayer);\r\n\t\tthis.lastTileset=0;\r\n\t\tthis.loaded=false;\r\n\t\tthis.loadPromises=[];\r\n\t\tthis.load();\r\n\t\tif(Filament.editor.enabled){\r\n\t\t\tthis.grid=new Filament.MapCellGrid(tilemap.cellSize).mount(this.fringeLayer);\r\n\t\t}\r\n\t}\r\n\twaitForLoad(){\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\tif(this.loaded){ return void resolve(); }\r\n\t\t\tthis.loadPromises.push({resolve:resolve,reject:reject});\r\n\t\t});\r\n\t}\r\n\tfinishLoading(success=true){\r\n\t\tthis.loaded=true;\r\n\t\tfor( const promise of this.loadPromises ){\r\n\t\t\tsuccess?promise.resolve():promise.reject();\r\n\t\t}\r\n\t}\r\n\tasync getTileStack(x,y){\r\n\t\tawait this.waitForLoad();\r\n\t\tconst i = x+y*this.tilemap.cellSize;\r\n\t\tif(this.data[i]==undefined){\r\n\t\t\tthis.data[i]=[];\r\n\t\t}else if(!(this.data[i] instanceof Array)){\r\n\t\t\tthis.data[i]=[this.data[i]];\r\n\t\t}\r\n\t\treturn this.data[i];\r\n\t}\r\n\tasync load(){\r\n\t\t// load cell terrain and json\r\n\t\tthis.empty=true;\r\n\t\tthis.data=[];\r\n\t\tthis.actors=[];\r\n\r\n\t\tawait this.finishLoading(true);\r\n\t\t// data has been loaded. tiles still need to be drawn.\r\n\r\n\t\t// loop through each tile stack in the data\r\n\t\tfor(let y=0;y<this.tilemap.cellSize;++y)\r\n\t\tfor(let x=0;x<this.tilemap.cellSize;++x){\r\n\t\t\tawait this.loadTileStack(x,y);\r\n\t\t}\r\n\t}\r\n\tasync loadTileStack(x,y,stack){\r\n\t\tif(!stack){\r\n\t\t\tstack = await this.getTileStack(x,y);\r\n\t\t}\r\n\t\tfor(const tile of stack){\r\n\t\t\tawait this.loadTile(tile,x,y);\r\n\t\t}\r\n\t}\r\n\tasync loadTile(tileData,x,y){\r\n\t\tif(!tileData){ return; }\r\n\t\tconst tilesetId='ts' in tileData ? tileData.ts : this.lastTileset;\r\n\t\tif(tilesetId !== this.lastTileset){ this.lastTileset = tilesetId; }\r\n\t\tconst tsX=tileData.x;\r\n\t\tconst tsY=tileData.y;\r\n\t\tconst tileset=await Filament.cache.requestTileset(tilesetId);\r\n\t\t// get tile layer data so we know how to draw it.\r\n\t\t//const tsData = tileset.getTile(tsX,tsY);\r\n\t\tconst layerType = tileset.getTile(tsX,tsY).layer;\r\n\t\tswitch(layerType){\r\n\t\tcase 0://base\r\n\t\t\tthis.baseLayer.drawTile(tileset,tsX,tsY,x,y);\r\n\t\t\tbreak;\r\n\t\tcase 1://actor\r\n\t\t\tbreak;\r\n\t\tcase 2://fringe\r\n\t\t\tbreak;\r\n\t\tcase 3://overpass\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t}\r\n\t}\r\n\tclearTile(x,y){\r\n\t\tthis.baseLayer.clearTile(x,y);\r\n\t\tthis.fringeLayer.clearTile(x,y);\r\n\t}\r\n\tunload(){\r\n\t\tthis.baseLayer.destroy();\r\n\t\tthis.fringeLayer.destroy();\r\n\t}\r\n\tasync saveToFile(){\r\n\r\n\t}\r\n\tasync loadToFile(){\r\n\r\n\t}\r\n}\r\n\r\nFilament.MapCellGrid = class extends Filament.Window{\r\n\tconstructor(cellSize){\r\n\t\tsuper();\r\n\t\tthis.classList.add('mapCell-grid');\r\n\t\tthis.width=Filament.settings.tileSize*cellSize;\r\n\t\tthis.height=Filament.settings.tileSize*cellSize;\r\n\t\tthis.edgeSnap=false;\r\n\t\tthis.zIndex=-1;\r\n\t}\r\n}\r\n\r\nFilament.MapCellLayer = class extends PIXI.Sprite{\r\n\tconstructor(tilemap,x,y){\r\n\t\tsuper(new Filament.MapCellTexture(tilemap));\r\n\t\tthis.tilemap=tilemap;\r\n\t\tthis.x=x*Filament.settings.tileSize*this.tilemap.cellSize;\r\n\t\tthis.y=y*Filament.settings.tileSize*this.tilemap.cellSize;\r\n\t}\r\n\tdestroy(){\r\n\t\tsuper.destroy(...arguments);\r\n\t\tthis.texture.destroy();\r\n\t}\r\n\tdrawTile(tileset,tx,ty,x,y){\r\n\t\tconst stamp = tileset.getStamp(tx,ty,x,y);\r\n\t\tFilament.pixi.renderer.render(stamp,this.texture,false);\r\n\t}\r\n\tclearTile(x,y){\r\n\t\tconst eraser = Filament.getEraser(x,y);\r\n\t\tFilament.pixi.renderer.render(eraser,this.texture,false);\r\n\t}\r\n}\r\n\r\nFilament.MapCellTexture = class extends PIXI.RenderTexture{\r\n\tconstructor(tilemap){\r\n\t\tsuper(new PIXI.BaseRenderTexture(\r\n\t\t\tFilament.settings.tileSize*tilemap.cellSize,\r\n\t\t\tFilament.settings.tileSize*tilemap.cellSize,\r\n\t\t\tFilament.pixiScaleMode,\r\n\t\t));\r\n\t\tthis.tilemap=tilemap;\r\n\t}\r\n};\r\n\r\n\r\n\r\n/*\r\nBetter idea for elevation.\r\nEverything is handled in one layer with tile stacks as usual.\r\n\r\nAn tile can be opaque or transparent.\r\nOpaque tiles erase underlying tiles when placed.\r\nTransparent tiles stack on top of underlying tiles.\r\n\r\nThere are four \"layering\" options for each tile.\r\nBase is rendered under player.\r\nActor is rendered same layer as player.\r\nFringe is rendered above player.\r\nOverpass is special. It's in the actor layer, but is rendered above or below the player depending on their elevation.\r\noverpass elevation is one plus the number of overpass tiles underlying in the stack.\r\nWhen player can step onto overpass tile, their elevation is set to same as the overpass they're walking on.\r\nWhen player can't step onto the overpass tile, they instead step under it.\r\n\r\n*/\r\n\r\n"]}