{"version":3,"sources":["0_pixi_mod.js","1_options.js","1_utility.js","2_main.js","4_mixin_event.js","4_mixin_util.js","5_input_keyboard.js","5_input_mouse.js","cache.js","class_0_ui.js","class_battler.js","class_sprite.js","class_ui_scene.js","class_window.js","scene_home.js","scene_map.js","tilemap.js"],"names":["PIXI","DisplayObject","prototype","enabled","enable","this","visible","disable","update","delta","zIndex","Container","children","sort","a","b","child","Object","defineProperty","[object Object]","obj","Filament","Scene","parent","scene","addChild","Texture","crop","x","y","w","h","rect","arguments","length","Rectangle","baseTexture","Sprite","texture","BLEND_MODES","addBlendMode","name","value","blendModes","pixi","renderer","state","push","Enum","values","SCALE_MODE","settings","width","height","tileSize","cellSize","scaleMode","HYBRID","maintainAspectRatio","uiRes","language","configure","options","assign","loadSettings","async","fetch","gameFile","json","body","document","style","setProperty","defineProperties","pixiScaleMode","get","NORMAL","SCALE_MODES","LINEAR","NEAREST","truncateNumber","n","truncs","Math","floor","LARGE_NUMBER_ABBREVIATIONS","sleep","ms","Promise","resolve","setTimeout","minmax","min","max","val","round","places","func","factor","pow","ceil","roundFactor","floorFactor","ceilFactor","arrayAdd","array","index","indexOf","splice","arrayRemove","target","mixins","mixin","field","mixin_object","implement","call","Function","_mixins","bind","instance","clazz","untag","s","v","Array","string","i","html","args","div","createElement","innerHTML","NodeList","childNodes","node","append","Element","match","element","id","reg","exec","classList","add","setAttribute","mount","mountElement","handler","construct","isConstructor","f","Boolean","Proxy","err","CoordMap","dimensions","dfault","defaultArgs","data","yz","_getValue","_getSubDimension","set","subdimension","unset","keys","has","pixiCanvas","querySelector","parentElement","ui_container","getElementById","Application","view","backgroundColor","start","pixiContext","getContext","hybridCanvas","hybridContext","appendChild","opacity","window","addEventListener","electron","resize","resizing","ticker","events","fireEvent","scenes","elapsedMS","updateUI","render","drawImage","roundScale","scaleX","offsetWidth","scaleY","offsetHeight","scale","ratio1","imageSmoothingEnabled","MixinEvents","eventname","create","event","eventlist","getEventList","entry","remove","removeEvent","context","callback","MixinEventHandler","listener","eventHandler","MixinUtil","key","keyboard","getKey","code","keygroup","keygroups","keyname","Key","addEventHandler","isDown","KeyGroup","keynames","addKey","mouse","canvasBounds","getBoundingClientRect","canvasX","clientX","canvasY","clientY","worldX","worldY","addEvent","Cache","_cache","path","gameAsset","resource","requestJSON","image","requestImage","TileSet","requestAsset","url","reject","AssetLoader","addRequest","cache","loaders","Loader","super","_requests","load","loader","resources","request","error","AssetRequest","UI","ui","anchor","ObservablePoint","_onAnchorUpdate","setAccessor","position","v1","v2","destroy","parentNode","removeChild","String","getAttribute","getPropertyValue","attributes","properties","worldVisible","mountUI","Battler","stats","lethality","resilience","haste","spirit","luck","EMPTY","loadTexture","activeScene","home","oldScene","enter","leave","stage","windows","Window","ui_width","ui_height","minwidth","minheight","maxwidth","maxheight","_hasFrame","_interactive","movable","resizable","closable","edgeSnap","content","handle","closeButton","teletype","dragging","finishDrag","contentObserver","MutationObserver","observe","attributeFilter","interactive","hasFrame","bounds","left","worldTransform","tx","top","ty","getBoundsUI","windex","setProperties","--width","--height","--x","--y","--z","--alpha","worldAlpha","setAttributes","data-frame","data-interactive","data-movable","data-resizable","data-closable","movementX","movementY","text","win","updateDrag","updateResize","alpha","map","TileMap","baseLayer","actorLayer","fringeLayer","cells","MapCell","selector","TileSelector","createTileEraser","tileEraser","Graphics","beginFill","ts","drawRect","endFill","blendMode","ERASE","getEraser","WebGLRenderingContext","ONE_MINUS_SRC_ALPHA","stamp","tsX","tsY","row","tile","undefined","passage","opaque","layer","terrain","tilemap","tileX","tileY","rightclicked","mousemove","mousedown","placeTile","button","cellX","cellY","cell","ctX","ctY","stack","getTileStack","clearTile","loadTileStack","PLACEMENT_MODE","MapCellLayer","loaded","lastTileset","actors","loadTile","tileData","tilesetId","tileset","requestTileset","getTile","drawTile","MapCellTexture","getStamp","eraser","RenderTexture","BaseRenderTexture"],"mappings":"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","file":"engine.js","sourcesContent":["PIXI.DisplayObject.prototype.enabled=true;\r\nPIXI.DisplayObject.prototype.enable=function(){\r\n\tthis.enabled=true;\r\n\tthis.visible=true;\r\n};\r\nPIXI.DisplayObject.prototype.disable=function(){\r\n\tthis.enabled=false;\r\n\tthis.visible=false;\r\n};\r\nPIXI.DisplayObject.prototype.update=function(delta){};\r\n\r\nPIXI.DisplayObject.prototype.zIndex=0;\r\nPIXI.Container.prototype.update=function(delta){\r\n\tthis.children.sort((a,b)=>a.zIndex-b.zIndex);\r\n\tfor(const child of this.children){\r\n\t\tchild.update(delta);\r\n\t}\r\n};\r\n\r\nObject.defineProperty(PIXI.DisplayObject.prototype,'scene',{\r\n\tget(){\r\n\t\tlet obj=this;\r\n\t\twhile (!(obj instanceof Filament.Scene) && obj.parent){\r\n\t\t\tobj=obj.parent;\r\n\t\t}\r\n\t\treturn (obj instanceof Filament.Scene)?obj:null;\r\n\t},\r\n\tset(scene){\r\n\t\tif(this.scene===scene){ return; }\r\n\t\tscene.addChild(this);\r\n\t}\r\n});\r\n\r\nPIXI.Texture.prototype.crop=function(x,y,w,h){\r\n\tconst rect = arguments.length===1?x:new PIXI.Rectangle(x,y,w,h);\r\n\treturn new PIXI.Texture(this.baseTexture,rect);\r\n}\r\n\r\nPIXI.Sprite.prototype.crop=function(){\r\n\tthis.texture = this.texture.crop(...arguments);\r\n}\r\n\r\nFilament.BLEND_MODES={};\r\nFilament.addBlendMode=function(name,value){\r\n\tconst blendModes=Filament.pixi.renderer.state.blendModes;\r\n\tFilament.BLEND_MODES[name]=blendModes.length;\r\n\tblendModes.push(value);\r\n}","Filament.Enum = class Enum{\r\n\tconstructor(...values){\r\n\t\tfor (const value of values){\r\n\t\t\tthis[value]=value;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nFilament.SCALE_MODE = new Filament.Enum(\r\n\t\"NORMAL\",\"NEAREST\",\"HYBRID\"\r\n);\r\n\r\nFilament.settings = {\r\n\twidth: 320,\r\n\theight: 240,\r\n\ttileSize: 16,\r\n\tcellSize: 24,\r\n\tscaleMode: Filament.SCALE_MODE.HYBRID,\r\n\tmaintainAspectRatio: true,\r\n\tuiRes:1,\r\n\tlanguage:'en',\r\n};\r\n\r\nFilament.configure=options=>{\r\n\tObject.assign(Filament.settings,options);\r\n};\r\n\r\nFilament.loadSettings=async function(){\r\n\tconst settings = await (await fetch(Filament.gameFile('settings.json'))).json();\r\n\tFilament.configure(settings);\r\n\r\n\tconst body = document.body.style;\r\n\tbody.setProperty('--uiRes',Filament.settings.uiRes);\r\n\tbody.setProperty('--screen-width',Filament.settings.width);\r\n\tbody.setProperty('--screen-height',Filament.settings.height);\r\n\tbody.setProperty('--tileSize',Filament.settings.tileSize);\r\n};\r\n\r\nObject.defineProperties(Filament,{\r\n\tpixiScaleMode:{\r\n\t\tget:()=>Filament.settings.scaleMode===Filament.SCALE_MODE.NORMAL ? PIXI.SCALE_MODES.LINEAR : PIXI.SCALE_MODES.NEAREST\r\n\t}\r\n});","Filament.truncateNumber=n=>{\r\n\tif(n<=99999){ return n+''; }\r\n\tlet truncs = 0;\r\n\twhile (n>9999 && truncs<5){\r\n\t\tn/=1000;\r\n\t\t++truncs;\r\n\t}\r\n\treturn Math.floor(n)+Filament.LARGE_NUMBER_ABBREVIATIONS[truncs];\r\n};\r\nFilament.LARGE_NUMBER_ABBREVIATIONS=[\r\n\t'','K','M','B','T','Q'\r\n];\r\nFilament.sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms));\r\n\r\nFilament.minmax=(min,max,val)=>Math.max(min,Math.min(max,val));\r\n\r\nFilament.round=(value,places=0,func='round')=>{\r\n\tconst factor = Math.pow(10,places);\r\n\treturn Math[func](value*factor)/factor\r\n}\r\nFilament.floor=(value,places)=>Filament.round(value,places,'floor');\r\nFilament.ceil=(value,places)=>Filament.round(value,places,'ceil');\r\n\r\nFilament.roundFactor=(value,factor=1,func='round')=>Math[func](value/factor)*factor;\r\nFilament.floorFactor=(value,factor)=>Filament.roundFactor(value,factor,'floor');\r\nFilament.ceilFactor=(value,factor)=>Filament.roundFactor(value,factor,'ceil');\r\n\r\nFilament.arrayAdd=(array,obj,index=array.length)=>{\r\n\tif(array.indexOf(obj)>=0){ return false; }\r\n\tarray.splice(index,0,obj);\r\n\treturn true;\r\n}\r\n\r\nFilament.arrayRemove=(array,obj)=>{\r\n\tconst index=array.indexOf(obj);\r\n\tif(index>=0){\r\n\t\tarray.splice(index,1);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Like Object.assign, except doesn't overwrite fields\r\n * that already exist.\r\n */ \r\nFilament.assign=(target,...mixins)=>{\r\n\tfor (const mixin of mixins) for (const field in mixin){\r\n\t\tif(!(field in target)){\r\n\t\t\ttarget[field] = mixin[field];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilament.mixin_object=(target,mixin)=>{\r\n\tFilament.assign(target,mixin);\r\n\tif(typeof mixin.implement === 'function'){ mixin.implement.call(target); }\r\n}\r\n\r\nFilament.mixin=(target,mixin)=>{\r\n\tif (!(target instanceof Function)){ return Filament.mixin_object(target,mixin); }\r\n\tif(!target._mixins){ target._mixins=[] }\r\n\ttarget._mixins.push(mixin);\r\n\tFilament.assign(target.prototype,mixin);\r\n\ttarget.prototype.implement=Filament.implement.bind(this);\r\n}\r\nFilament.implement=function(instance,clazz){\r\n\tif (!instance || !clazz._mixins){ return; }\r\n\tfor (const mixin of clazz._mixins){\r\n\t\tif(typeof mixin.implement === 'function'){ mixin.implement.call(instance); }\r\n\t}\r\n}\r\n\r\nFilament.untag=(s,...v)=>{\r\n\tif(!(s instanceof Array)){ return s; }\r\n\tlet string = '';\r\n\tfor (const i in s){ string+=s[i]+(v[i]||''); }\r\n\treturn string;\r\n}\r\n\r\nFilament.html=(...args)=>{\r\n\tconst string = Filament.untag(...args);\r\n\tconst div = document.createElement('div');\r\n\tdiv.innerHTML=string;\r\n\treturn new Filament.NodeList(...div.childNodes);\r\n}\r\n\r\nFilament.NodeList=class extends Array{\r\n\tmount(target){\r\n\t\tfor (const node of this){\r\n\t\t\ttarget.append(node);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\telements(){\r\n\t\tlet array = [];\r\n\t\tfor (const node of this){\r\n\t\t\tif(node instanceof Element){ array.push(node); }\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n}\r\n\r\nFilament.createElement=(string,child)=>{\r\n\tlet match = string.match(/^[^\\s.#[\\]]+/);\r\n\tif(!match){throw `Couldn't find tagname in string ${string}`;}\r\n\tconst element = document.createElement(match[0]);\r\n\tmatch=string.match(/#([^\\s.#[\\]]+)/);\r\n\tif(match){ element.id=match[1]; }\r\n\tlet reg=/\\.([^\\s.#[\\]]+)/g;\r\n\twhile(match=reg.exec(string)){\r\n\t\telement.classList.add(match[1]);\r\n\t}\r\n\treg=/\\[([^\\s.#[\\]=]+)=([^\\s.#[\\]=]+)\\]/g;\r\n\twhile(match=reg.exec(string)){\r\n\t\telement.setAttribute(match[1],match[2]);\r\n\t}\r\n\tif(child){ element.append(child); }\r\n\telement.mount=Filament.mountElement;\r\n\treturn element;\r\n}\r\n\r\nFilament.mountElement=function(target){\r\n\tif(!(this instanceof Element)){ return; }\r\n\ttarget.append(this);\r\n\treturn this;\r\n};\r\n\r\n{\r\n\tconst handler = {construct(){return handler;}};\r\n\tFilament.isConstructor=f=>{\r\n\t\ttry{\r\n\t\t\treturn Boolean(new (new Proxy(f,handler)));\r\n\t\t}catch(err){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilament.CoordMap = class{\r\n\tconstructor(dimensions=2,dfault=null,...defaultArgs){\r\n\t\tthis.dimensions=dimensions;\r\n\t\tthis.dfault=dfault;\r\n\t\tthis.defaultArgs=defaultArgs;\r\n\t\tthis.data={};\r\n\t}\r\n\tget(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\treturn this._getValue(x);\r\n\t\t}\r\n\t\treturn this._getSubDimension(x).get(...yz);\r\n\t}\r\n\t_getValue(x){\r\n\t\tif(x in this.data){\r\n\t\t\treturn this.data[x];\r\n\t\t}\r\n\t\tif(typeof this.dfault==='function'){\r\n\t\t\tlet value;\r\n\t\t\tif(Filament.isConstructor(this.dfault)){\r\n\t\t\t\tvalue = new this.dfault(...this.defaultArgs);\r\n\t\t\t}else{\r\n\t\t\t\tvalue = this.dfault(...this.defaultArgs);\r\n\t\t\t}\r\n\t\t\treturn this.data[x]=value;\r\n\t\t}else{\r\n\t\t\treturn this.dfault;\r\n\t\t}\r\n\t}\r\n\t_getSubDimension(x){\r\n\t\tif( !(this.data[x] instanceof Filament.CoordMap) ){\r\n\t\t\tthis.data[x]=new Filament.CoordMap(this.dimensions-1,this.dfault,...this.defaultArgs);\r\n\t\t}\r\n\t\treturn this.data[x];\r\n\t}\r\n\tset(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\tthis.data[x]=yz[0];\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._getSubDimension(x).set(...yz);\r\n\t}\r\n\tunset(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\tdelete this.data[x];\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst subdimension = this._getSubDimension(x);\r\n\t\tsubdimension.unset(...yz);\r\n\t\tif(Object.keys(subdimension.data).length===0){\r\n\t\t\tdelete this.data[x];\r\n\t\t}\r\n\t}\r\n\thas(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\treturn x in this.data;\r\n\t\t}\r\n\t\tif( !(x in this.data) ){ return false;}\r\n\t\treturn this._getSubDimension(x).has(...yz);\r\n\t}\r\n}\r\n","Filament.pixiCanvas = document.querySelector(\"#screen-game canvas\");\r\nFilament.parent = Filament.pixiCanvas.parentElement;\r\nFilament.ui_container = document.getElementById(\"ui-container\");\r\nFilament.pixi = new PIXI.Application({\r\n\tview: Filament.pixiCanvas,\r\n\twidth: Filament.settings.width,\r\n\theight: Filament.settings.height,\r\n\tbackgroundColor:0x000088,\r\n});\r\n\r\nFilament.start=async function(){\r\n\tawait Filament.loadSettings();\r\n\tFilament.pixiContext = Filament.pixiCanvas.getContext(\"2d\");\r\n\tif( Filament.settings.scaleMode === Filament.SCALE_MODE.HYBRID ){\r\n\t\tFilament.hybridCanvas = document.createElement('canvas');\r\n\t\tFilament.hybridContext = Filament.hybridCanvas.getContext(\"2d\");\r\n\t\tFilament.hybridCanvas.id=\"hybrid-canvas\";\r\n\t\tFilament.pixiCanvas.parentElement.appendChild(Filament.hybridCanvas);\r\n\t\tFilament.pixiCanvas.style.opacity=0;\r\n\t}\r\n\r\n\tFilament.ui_container.style.width = Filament.settings.width*Filament.settings.uiRes+\"px\";\r\n\tFilament.ui_container.style.height = Filament.settings.height*Filament.settings.uiRes+\"px\";\r\n\r\n\twindow.addEventListener('resize',Filament.electron?async()=>{\r\n\t\tFilament.resize();\r\n\t\tif(!Filament.resizing){\r\n\t\t\tFilament.resizing=true;\r\n\t\t\tfor(let i=0;i<10;++i){\r\n\t\t\t\tFilament.resize();\r\n\t\t\t\tawait Filament.sleep(0);\r\n\t\t\t}\r\n\t\t\tFilament.resizing=false;\r\n\t\t}\r\n\t}:Filament.resize);\r\n\tFilament.resize();\r\n\tFilament.ticker = Filament.pixi.ticker.add(Filament.update,Filament);\r\n\r\n\tFilament.events.fireEvent('start');\r\n\r\n\tfor (const scene of Object.values(Filament.scenes)){\r\n\t\tscene.start();\r\n\t}\r\n};\r\n\r\nFilament.update=()=>{\r\n\tconst delta = Filament.ticker.elapsedMS/1000;\r\n\r\n\tif(Filament.scene){\r\n\t\tFilament.scene.update(delta);\r\n\t\tFilament.scene.updateUI(delta);\r\n\t}\r\n\r\n\tif(Filament.hybridCanvas){\r\n\t\tFilament.pixi.render();\r\n\t\tFilament.hybridContext.drawImage(\r\n\t\t\tFilament.pixiCanvas,\r\n\t\t\t0,0, Filament.settings.width, Filament.settings.height,\r\n\t\t\t0,0, Filament.hybridCanvas.width, Filament.hybridCanvas.height\r\n\t\t);\r\n\t}\r\n};\r\n\r\nFilament.roundScale=n=>Math.round(n)||1;\r\n\r\nFilament.resize=()=>{\r\n\tlet scaleX = Filament.parent.offsetWidth / Filament.settings.width;\r\n\tlet scaleY = Filament.parent.offsetHeight / Filament.settings.height;\r\n\tlet scale = Math.min(scaleX,scaleY);\r\n\tif(Filament.settings.maintainAspectRatio){\r\n\t\tscaleX = scaleY = scale;\r\n\t}else{\r\n\t\tlet ratio1 = Filament.parent.offsetWidth/Filament.parent.offsetHeight;\r\n\t\tlet ratio2 = Filament.settings.width/Filament.settings.height;\r\n\t\tif(ratio1>ratio2){//wide\r\n\t\t\tFilament.pixi.renderer.resize(\r\n\t\t\t\tFilament.settings.height*ratio1,\r\n\t\t\t\tFilament.settings.height\r\n\t\t\t);\r\n\t\t}else{ //tall\r\n\t\t\tFilament.pixi.renderer.resize(\r\n\t\t\t\tFilament.settings.width,\r\n\t\t\t\tFilament.settings.width/ratio1\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tFilament.scaleX=scaleX;\r\n\tFilament.scaleY=scaleY;\r\n\tFilament.scale=scale;\r\n\tdocument.body.style.setProperty('--scale',scale);\r\n\r\n\tFilament.pixiCanvas.style.width = Filament.settings.width*scaleX+\"px\";\r\n\tFilament.pixiCanvas.style.height = Filament.settings.height*scaleY+\"px\";\r\n\tif(Filament.hybridCanvas){\r\n\t\tFilament.hybridCanvas.width = Filament.settings.width*Filament.roundScale(scaleX);\r\n\t\tFilament.hybridCanvas.height = Filament.settings.height*Filament.roundScale(scaleY);\r\n\t\tFilament.hybridCanvas.style.width = Filament.pixiCanvas.style.width;\r\n\t\tFilament.hybridCanvas.style.height = Filament.pixiCanvas.style.height;\r\n\t\tFilament.hybridContext.imageSmoothingEnabled=false;\r\n\t}\r\n\tFilament.ui_container.style.setProperty('--scale',\r\n\t\tscale/Filament.settings.uiRes);\r\n\tFilament.ui_container.style.setProperty('--left',\r\n\t\tFilament.parent.offsetWidth/2 - Filament.ui_container.offsetWidth/2);\r\n\tFilament.ui_container.style.setProperty('--top',\r\n\t\tFilament.parent.offsetHeight/2 - Filament.ui_container.offsetHeight/2);\r\n\r\n\tFilament.events.fireEvent('resize');\r\n};","Filament.MixinEvents={\r\n\timplement(){\r\n\t\tthis.events={};\r\n\t},\r\n\tgetEventList(eventname,create){\r\n\t\tif(!(eventname in this.events) && create){\r\n\t\t\tthis.events[eventname]=[];\r\n\t\t}\r\n\t\treturn this.events[eventname];\r\n\t},\r\n\tfireEvent(eventname,event={}){\r\n\t\tconst eventlist=this.getEventList(eventname,false);\r\n\t\tif(!eventlist){ return; }\r\n\t\tfor (const entry of eventlist){\r\n\t\t\tevent.remove=Filament.MixinEvents.removeEvent.bind(this,eventname,entry);\r\n\t\t\tif(entry.context instanceof PIXI.DisplayObject){\r\n\t\t\t\tconst scene = entry.context.scene;\r\n\t\t\t\tif(!scene){\r\n\t\t\t\t\tevent.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}else if(scene !== Filament.scene){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(typeof entry.callback === 'function'){ entry.callback.call(entry.context,event); }\r\n\t\t}\r\n\t},\r\n\taddEvent(eventname,callback,context){\r\n\t\tconst entry = {callback:callback,context:context}\r\n\t\tFilament.arrayAdd(this.getEventList(eventname,true),entry);\r\n\t\treturn entry;\r\n\t},\r\n\tremoveEvent(eventname,entry){\r\n\t\tconst eventlist = this.getEventList(eventname,false);\r\n\t\tif(!eventlist){ return false; }\r\n\t\treturn Filament.arrayRemove(eventlist,entry);\r\n\t}\r\n}\r\n\r\nFilament.MixinEventHandler={\r\n\teventHandler(eventname,event){\r\n\t\tif(typeof this.fireEvent==='function'){\r\n\t\t\tthis.fireEvent(eventname,event);\r\n\t\t}\r\n\t},\r\n\taddEventHandler(eventname,listener=Filament.parent){\r\n\t\tconst handler = `${eventname}Handler`;\r\n\t\tthis[handler]=this.eventHandler.bind(this,eventname);\r\n\t\tif(listener instanceof Object && 'addEventListener' in listener){\r\n\t\t\tlistener.addEventListener(eventname,this[handler]);\r\n\t\t}\r\n\t},\r\n}\r\n\r\nFilament.events={};\r\nFilament.mixin_object(Filament.events,Filament.MixinEvents);","Filament.MixinUtil={\r\n\tmount(parent){\r\n\t\tparent.addChild(this);\r\n\t\treturn this;\r\n    },\r\n    assign(key,value){\r\n        if(typeof arguments[0]===\"object\"){\r\n            Object.assign(this,arguments[0]);\r\n        }else{\r\n            this[key]=value;\r\n        }\r\n        return this;\r\n    }\r\n}\r\nFilament.mixin(PIXI.DisplayObject, Filament.MixinUtil);","Filament.keyboard={\r\n\tkeys:{},\r\n\teventHandler(eventname,event){\r\n\t\tconst key = this.getKey(event.code,false);\r\n\t\tif(!key){ return; }\r\n\t\tif(typeof key[eventname] === 'function')key[eventname]();\r\n\t\tfor (const keygroup of key.keygroups){\r\n\t\t\tkeygroup.fireEvent(eventname,event);\r\n\t\t}\r\n\t},\r\n\tgetKey(keyname,create){\r\n\t\tif(!(keyname in this.keys) && create){\r\n\t\t\tthis.keys[keyname]=new Filament.Key(keyname);\r\n\t\t}\r\n\t\treturn this.keys[keyname];\r\n\t}\r\n};\r\nFilament.mixin_object(Filament.keyboard,Filament.MixinEventHandler);\r\nFilament.keyboard.addEventHandler('keydown');\r\nFilament.keyboard.addEventHandler('keyup');\r\n\r\nFilament.Key = class{\r\n\tconstructor(name){\r\n\t\tthis.name=name;\r\n\t\tthis.isDown=false;\r\n\t\tthis.keygroups=[];\r\n\t}\r\n\tkeydown(){\r\n\t\tthis.isDown=true;\r\n\t}\r\n\tkeyup(){\r\n\t\tthis.isDown=false;\r\n\t}\r\n}\r\n\r\nFilament.keys={};\r\nFilament.KeyGroup = class{\r\n\tconstructor(name,keynames=[]){\r\n\t\tthis.name=name;\r\n\t\tFilament.keys[name]=this;\r\n\t\tthis.keys=[];\r\n\t\tfor (const keyname of keynames){\r\n\t\t\tthis.addKey(keyname);\r\n\t\t}\r\n\t\t//Filament.mixin(this,Filament.EventMixin);\r\n\t\tthis.implement(this,Filament.KeyGroup);\r\n\t}\r\n\taddKey(keyname){\r\n\t\tconst key = Filament.keyboard.getKey(keyname,true);\r\n\t\tFilament.arrayAdd(key.keygroups,this);\r\n\t\tFilament.arrayAdd(this.keys,key);\r\n\t}\r\n\tremoveKey(keyname){\r\n\t\tconst key = Filament.keyboard.getKey(keyname,false);\r\n\t\tif(!key){ return; }\r\n\t\tFilament.arrayRemove(key.keygroups,this);\r\n\t\tFilament.arrayRemove(this.keys,key);\r\n\t}\r\n\tget isDown(){\r\n\t\tfor (const key in this.keys){\r\n\t\t\tif(key.isDown){ return true; }\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nFilament.mixin(Filament.KeyGroup, Filament.MixinEvents);\r\n\r\nnew Filament.KeyGroup('CONFIRM',['Enter','Space']);\r\nnew Filament.KeyGroup('CANCEL',['Escape']);\r\nnew Filament.KeyGroup('UP',['ArrowUp','KeyW']);\r\nnew Filament.KeyGroup('LEFT',['ArrowLeft','KeyA']);\r\nnew Filament.KeyGroup('DOWN',['ArrowDown','KeyS']);\r\nnew Filament.KeyGroup('RIGHT',['ArrowRight','KeyD']);","Filament.mouse={\r\n\teventHandler(eventname,event){\r\n\t\tconst canvasBounds = Filament.pixiCanvas.getBoundingClientRect();\r\n\t\tevent.canvasX=(event.clientX-canvasBounds.x)/Filament.scaleX;\r\n\t\tevent.canvasY=(event.clientY-canvasBounds.y)/Filament.scaleY;\r\n\t\tevent.worldX=event.canvasX;\r\n\t\tevent.worldY=event.canvasY;\r\n\t\tthis.fireEvent(eventname,event);\r\n\t},\r\n}\r\nFilament.mixin_object(Filament.mouse,Filament.MixinEvents);\r\nFilament.mixin_object(Filament.mouse,Filament.MixinEventHandler);\r\n\r\nFilament.mouse.addEventHandler('click');\r\nFilament.mouse.addEventHandler('dblclick');\r\nFilament.mouse.addEventHandler('mousedown');\r\nFilament.mouse.addEventHandler('mouseup',window);\r\nFilament.mouse.addEventHandler('mousemove');\r\n\r\nFilament.mouse.addEvent('mousedown',event=>{\r\n\tFilament.mouse.isDown=true;\r\n});\r\n\r\nFilament.mouse.addEvent('mouseup',event=>{\r\n\tFilament.mouse.isDown=false;\r\n})","Filament.Cache=class{\r\n\tconstructor(){\r\n\t\tthis._cache={};\r\n\t}\r\n\r\n\tasync requestImage(key,path='assets/images'){\r\n\t\treturn await this.gameAsset(key,path,(resource)=>{\r\n\t\t\tresource.texture.baseTexture.scaleMode=Filament.pixiScaleMode;\r\n\t\t\treturn resource.texture;\r\n\t\t});\r\n\t}\r\n\tasync requestAudio(key){\r\n\t\t\r\n\t}\r\n\tasync requestJSON(key,path='data'){\r\n\t\treturn await this.gameAsset(key,path,(resource)=>{\r\n\t\t\treturn resource.data;\r\n\t\t})\r\n\t}\r\n\tasync requestTileset(id){\r\n\t\tconst data = await this.requestJSON(`tilesets/${id}.json`);\r\n\t\tconst image = await this.requestImage(data.image,'assets/tilesets');\r\n\t\treturn new Filament.TileSet(image,data);\r\n\t}\r\n\tasync gameAsset(key,path,callback){\r\n\t\tpath=Filament.path(path,key);\r\n\t\treturn await this.requestAsset(path,Filament.gameFile(path),callback);\r\n\t}\r\n\trequestAsset(key,url,callback){\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\tif(!this._cache[key]){\r\n\t\t\t\tthis._cache[key]=new Filament.AssetLoader(key,url,this);\r\n\t\t\t}\r\n\t\t\tif(this._cache[key] instanceof Filament.AssetLoader){\r\n\t\t\t\tthis._cache[key].addRequest(resolve,reject,callback);\r\n\t\t\t}else{\r\n\t\t\t\tresolve(callback(this._cache[key]));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nFilament.cache=new Filament.Cache();\r\n\r\nFilament.AssetLoader=class extends PIXI.loaders.Loader{\r\n\tconstructor(key,url,cache){\r\n\t\tsuper();\r\n\t\tthis.add(key,url);\r\n\t\tthis._requests=[];\r\n\t\tthis.load((loader,resources)=>{\r\n\t\t\tconst resource=resources[key];\r\n\t\t\tfor (const request of this._requests){\r\n\t\t\t\tif(resource.error){\r\n\t\t\t\t\trequest.reject(resource.error);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trequest.resolve(request.callback(resource));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(resource.error){\r\n\t\t\t\tdelete cache._cache[key];\r\n\t\t\t}else{\r\n\t\t\t\tcache._cache[key]=resource;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\taddRequest(resolve,reject,callback){\r\n\t\tthis._requests.push(new Filament.AssetRequest(resolve,reject,callback));\r\n\t}\r\n}\r\n\r\nFilament.AssetRequest=class{\r\n\tconstructor(resolve,reject,callback){\r\n\t\tthis.resolve=resolve;\r\n\t\tthis.reject=reject;\r\n\t\tthis.callback=callback;\r\n\t}\r\n}","Filament.UI = class extends PIXI.Container{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.ui = document.createElement('div');\r\n\t\tthis.anchor = new PIXI.ObservablePoint(this._onAnchorUpdate, this);\r\n\t\tthis.setAccessor('id');\r\n\t\tthis.setAccessor('className');\r\n\t\tthis.classList=this.ui.classList;\r\n\t\tthis.style=this.ui.style;\r\n\t\tthis.style.position=\"absolute\";\r\n\t}\r\n\tmount(parent){\r\n\t\tparent.addChild(this);\r\n\t\treturn this;\r\n\t}\r\n\tmountUI(parent){\r\n\t\t(parent instanceof Filament.UI ? parent.ui : parent).append(this.ui);\r\n\t\treturn this;\r\n\t}\r\n\tsetAccessor(v1,v2=v1){\r\n\t\tObject.defineProperty(this,v1,{\r\n\t\t\tget(){return this.ui[v2];},\r\n\t\t\tset(v){this.ui[v2]=v;}\r\n\t\t});\r\n\t}\r\n\tenable(){\r\n\t\tsuper.enable();\r\n\t\tthis.setAttribute('data-enabled',true);\r\n\t}\r\n\tdisable(){\r\n\t\tsuper.disable();\r\n\t\tthis.setAttribute('data-enabled',false);\r\n\t}\r\n\tdestroy(){\r\n\t\tsuper.destroy();\r\n\t\tthis.ui.parentNode.removeChild(this.ui);\r\n\t}\r\n\tsetAttribute(name,value){\r\n\t\tvalue=String(value);\r\n\t\tif(this.ui.getAttribute(name)!==value){\r\n\t\t\tthis.ui.setAttribute(name,value);\r\n\t\t}\r\n\t}\r\n\tsetProperty(name,value){\r\n\t\tvalue=String(value);\r\n\t\tif(this.ui.style.getPropertyValue(name)!==value){\r\n\t\t\tthis.ui.style.setProperty(name,value);\r\n\t\t}\r\n\t}\r\n\tsetAttributes(attributes){\r\n\t\tfor (const key in attributes){ this.setAttribute(key,attributes[key]); }\r\n\t}\r\n\tsetProperties(properties){\r\n\t\tfor (const key in properties){ this.setProperty(key,properties[key]); }\r\n\t}\r\n\tupdateUI(delta){\r\n\t\tthis.setAttribute(\"data-visible\",this.worldVisible);\r\n\t\tif(!this.ui.parentNode && this.scene && this.scene!==this){ this.mountUI(this.scene); }\r\n\t}\r\n\t_onAnchorUpdate(){\r\n\t\t//this.ui.style.transform = \"translate(\"+-this.anchor.x*100+\"%,\"+-this.anchor.y*100+\"%)\";\r\n\t}\r\n}","/* NOTES\r\nLethality (attack power)\r\nResilience (hp and def)\r\nHaste (SP)\r\nSpirit (MP)\r\n\r\nhidden stats:\r\nLuck\r\n\r\n\r\nEquipment types:\r\nWeapon\r\nArmor\r\nAccessory\r\n*/\r\n\r\nFilament.Battler = class{\r\n\tconstructor(){\r\n\t\tthis.stats={\r\n\t\t\tlethality:0,\r\n\t\t\tresilience:0,\r\n\t\t\thaste:0,\r\n\t\t\tspirit:0,\r\n\t\t\tluck:0,\r\n\t\t};\r\n\t}\r\n};","Filament.Sprite = class extends PIXI.Sprite{\r\n\tconstructor(key){\r\n\t\tsuper(PIXI.Texture.EMPTY);\r\n\t\tthis.loadTexture(key);\r\n\t}\r\n\tasync loadTexture(key){\r\n\t\tthis.texture=await Filament.cache.requestImage(key);\r\n\t}\r\n}","Filament.scenes={};\r\nFilament.activeScene=\"home\";\r\nObject.defineProperty(Filament,\"scene\",{\r\n\tget:()=>Filament.scenes[Filament.activeScene]||Filament.scenes.home,\r\n\tset(value){\r\n\t\tconst oldScene=Filament.activeScene;\r\n\t\tif(value in Filament.scenes){\r\n\t\t\tFilament.activeScene=value;\r\n\t\t}else{\r\n\t\t\tfor (const key in Filament.scenes){\r\n\t\t\t\tif(value===Filament.scenes[key]){\r\n\t\t\t\t\tFilament.activeScene=key;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(Filament.activeScene===oldScene){ return; }\r\n\t\tfor (const key in Filament.scenes){\r\n\t\t\tconst scene = Filament.scenes[key];\r\n\t\t\tif(Filament.activeScene===scene.name){\r\n\t\t\t\tscene.enable();\r\n\t\t\t\tscene.enter();\r\n\t\t\t}else if (scene.enabled){\r\n\t\t\t\tscene.disable();\r\n\t\t\t\tscene.leave();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n\r\nFilament.ui_container = document.getElementById(\"ui-container\");\r\n\r\nFilament.Scene = class extends Filament.UI{\r\n\tconstructor(name){\r\n\t\tsuper();\r\n\t\tthis.mountUI(Filament.ui_container);\r\n\t\tthis.mount(Filament.pixi.stage);\r\n\t\tFilament.scenes[name] = this;\r\n\t\tthis.id=\"scene-\"+name;\r\n\t\tthis.classList.add(\"scene\");\r\n\t\tthis.name=name;\r\n\t\tthis.windows=[];\r\n\t\tthis.setAttribute('data-visible',false);\r\n\t}\r\n\tenable(){\r\n\t\tsuper.enable();\r\n\t\tthis.setAttribute('data-visible',true);\r\n\t}\r\n\tdisable(){\r\n\t\tsuper.disable();\r\n\t\tthis.setAttribute('data-visible',false);\r\n\t}\r\n\tupdateUI(delta){\r\n\t\tsuper.updateUI(delta);\r\n\t\tfor (let i=this.windows.length-1; i>=0; --i){\r\n\t\t\tthis.windows[i].updateUI(delta);\r\n\t\t}\r\n\t}\r\n\tstart(){}\r\n\tenter(){}\r\n\tleave(){}\r\n}","Filament.Window = class extends Filament.UI{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.classList.add('window');\r\n\t\tthis.ui_width=20;\r\n\t\tthis.ui_height=20;\r\n\t\tthis.minwidth=20;\r\n\t\tthis.minheight=20;\r\n\t\tthis.maxwidth=Filament.settings.width;\r\n\t\tthis.maxheight=Filament.settings.height;\r\n\t\tthis._hasFrame=false;\r\n\t\tthis._interactive=false;\r\n\t\tthis.movable=false;\r\n\t\tthis.resizable=false;\r\n\t\tthis.closable=false;\r\n\t\tthis.edgeSnap=true;\r\n\t\tthis.content=Filament.createElement('div.content').mount(this.ui);\r\n\t\tthis.handle=Filament.createElement('div.handle').mount(this.ui);\r\n\t\tthis.closeButton=Filament.createElement('div.closeButton','×').mount(this.ui);\r\n\t\tthis.closeButton.addEventListener('click',event=>{\r\n\t\t\tthis.destroy();\r\n\t\t});\r\n\t\tthis.teletype=0;\r\n\t\tthis.handle.addEventListener('mousedown',event=>{\r\n\t\t\tFilament.arrayRemove(this.scene.windows,this);\r\n\t\t\tFilament.arrayAdd(this.scene.windows,this);\r\n\t\t\tthis.dragging=true;\r\n\t\t});\r\n\t\tthis.handle.addEventListener('mouseup',event=>{\r\n\t\t\tthis.dragging=false;\r\n\t\t\tthis.finishDrag(event);\r\n\t\t});\r\n\t\tthis.contentObserver=new MutationObserver(()=>{\r\n\t\t\tif(this.resizable){\r\n\t\t\t\tif(this.content.style.width||this.content.style.height){\r\n\t\t\t\t\tthis.content.style.width='';\r\n\t\t\t\t\tthis.content.style.height='';\r\n\t\t\t\t\tthis.resizing=true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.contentObserver.observe(this.content,{attributes:true,attributeFilter:['style']});\r\n\t}\r\n\tmount(parent){\r\n\t\tsuper.mount(parent);\r\n\t\tif(parent.scene)this.mountUI(this.scene);\r\n\t\treturn this;\r\n\t}\r\n\tmountUI(scene){\r\n\t\tif(this.scene) Filament.arrayRemove(this.scene.windows,this);\r\n\t\tsuper.mountUI(scene);\r\n\t\tFilament.arrayAdd(scene.windows,this);\r\n\t\treturn this;\r\n\t}\r\n\tdestroy(){\r\n\t\tif(this.scene) Filament.arrayRemove(this.scene.windows,this);\r\n\t\tsuper.destroy(...arguments);\r\n\t}\r\n\tget width(){return this.ui_width;}\r\n\tset width(v){this.ui_width=v;}\r\n\tget height(){return this.ui_height;}\r\n\tset height(v){this.ui_height=v;}\r\n\tget interactive(){return this._interactive||this.movable||this.resizable||this.closable;}\r\n\tset interactive(v){this._interactive=v;}\r\n\tget hasFrame(){return this._hasFrame||this.movable||this.resizable||this.closable;}\r\n\tset hasFrame(v){this._hasFrame=v;}\r\n\tgetBoundsUI(){\r\n\t\tlet bounds = {};\r\n\t\tbounds.width = Filament.round(this.width,2);\r\n\t\tbounds.height = Filament.round(this.height,2);\r\n\t\tbounds.left=Filament.round(this.worldTransform.tx-this.anchor.x*bounds.width,2);\r\n\t\tbounds.top=Filament.round(this.worldTransform.ty-this.anchor.y*bounds.height,2);\r\n\t\tif(this.edgeSnap){\r\n\t\t\tbounds.left=Filament.minmax(0,Filament.settings.width-bounds.width,bounds.left);\r\n\t\t\tbounds.top=Filament.minmax(0,Filament.settings.height-bounds.height,bounds.top);\r\n\t\t}\r\n\t\treturn bounds;\r\n\t}\r\n\tupdateUI(delta){\r\n\t\tsuper.updateUI(delta);\r\n\t\tif(this.resizable){\r\n\t\t\tthis.width=Filament.minmax(this.minwidth,this.maxwidth,this.width);\r\n\t\t\tthis.height=Filament.minmax(this.minheight,this.maxheight,this.height);\r\n\t\t}\r\n\t\tlet bounds = this.getBoundsUI(true);\r\n\t\tconst windex = this.scene.windows.indexOf(this);\r\n\t\tthis.setProperties({\r\n\t\t\t\"--width\"\t:\tbounds.width,\r\n\t\t\t\"--height\"\t:\tbounds.height,\r\n\t\t\t\"--x\"\t\t:\tbounds.left,\r\n\t\t\t\"--y\"\t\t:\tbounds.top,\r\n\t\t\t\"--z\"\t\t:\tthis.zIndex+windex/1000,\r\n\t\t\t\"--alpha\"\t:\tthis.worldAlpha,\r\n\t\t});\r\n\t\tthis.setAttributes({\r\n\t\t\t\"data-frame\"\t\t:\tthis.hasFrame,\r\n\t\t\t\"data-interactive\"\t:\tthis.interactive,\r\n\t\t\t\"data-movable\"\t\t:\tthis.movable,\r\n\t\t\t\"data-resizable\"\t:\tthis.resizable,\r\n\t\t\t\"data-closable\"\t\t:\tthis.closable,\r\n\t\t});\r\n\t}\r\n\tupdateDrag(event){\r\n\t\tthis.x+=event.movementX/Filament.scale;\r\n\t\tthis.y+=event.movementY/Filament.scale;\r\n\t}\r\n\tfinishDrag(event){\r\n\t\tif(this.edgeSnap){\r\n\t\t\tthis.x=Filament.minmax(0,Filament.settings.width-this.width,this.x);\r\n\t\t\tthis.y=Filament.minmax(0,Filament.settings.height-this.height,this.y);\r\n\t\t}\r\n\t}\r\n\tupdateResize(event){\r\n\t\tthis.width=Math.min(Filament.settings.width-this.x, this.width+event.movementX/Filament.scale);\r\n\t\tthis.height=Math.min(Filament.settings.height-this.y, this.height+event.movementY/Filament.scale);\r\n\t\tthis.resizing=false;\r\n\t}\r\n\r\n\tget text(){ return this.content.innerHTML; }\r\n\tset text(value){\r\n\r\n\t}\r\n}\r\n\r\nwindow.addEventListener('mousemove',event=>{\r\n\tif(!Filament.scene){ return; }\r\n\tfor (const win of Filament.scene.windows){\r\n\t\tif (win.dragging){ win.updateDrag(event); }\r\n\t\tif (win.resizing){ win.updateResize(event); }\r\n\t}\r\n});\r\nwindow.addEventListener('mouseup',event=>{\r\n\tif(!Filament.scene){ return; }\r\n\tfor (const win of Filament.scene.windows){\r\n\t\twin.dragging=false;\r\n\t\twin.finishDrag();\r\n\t}\r\n});","new Filament.Scene('home');\r\n\r\nFilament.scenes.home.start=function(){\r\n\tthis.window = new Filament.Window().mount(this);\r\n\tthis.window.width=100;\r\n\tthis.window.height=50;\r\n\tthis.window.x=50;\r\n\tthis.window.y=75;\r\n\tthis.window.resizable=true;\r\n\tthis.window.movable=true;\r\n\tthis.window.closable=true;\r\n\tthis.window.content.innerHTML=`Welcome to Filament!<br>\r\n\t<a href=\"javascript:void(Filament.scene='map');\">Map</a>`;\r\n\tnew Filament.Sprite('ebby.png').mount(this).assign({alpha:0.6});\r\n\tnew Filament.Sprite('ebby.png').mount(this).assign({x:20});\r\n}\r\n\r\nFilament.scenes.home.update=function(){\r\n\t\r\n}","new Filament.Scene('map');\r\n\r\nFilament.scenes.map.start=function(){\r\n\tFilament.map = new Filament.TileMap().mount(this);\r\n}\r\n\r\nFilament.scenes.map.update=function(){\r\n\t\r\n}","\r\n/**\r\n * The TileMap Class.\r\n * Each tilemap has multiple elevation layers.\r\n */\r\nFilament.TileMap = class extends PIXI.Container{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.baseLayer = new PIXI.Container().mount(this);\r\n\t\tthis.actorLayer = new PIXI.Container().mount(this);\r\n\t\tthis.fringeLayer = new PIXI.Container().mount(this);\r\n\t\tthis.cells = new Filament.CoordMap(2,Filament.MapCell,this);\r\n\t\t// TODO: read map settings from JSON.\r\n\t\tthis.selector = new Filament.TileSelector(this).mount(this);\r\n\t\tthis.settings={\r\n\t\t\tname:'',\r\n\t\t\tcellSize:null,\r\n\t\t};\r\n\t}\r\n\r\n\tget cellSize(){\r\n\t\treturn this.settings.cellSize?this.settings.cellSize:Filament.settings.cellSize;\r\n\t}\r\n\tmount(){\r\n\t\tsuper.mount(...arguments);\r\n\t\tthis.selector.mountUI(this.scene);\r\n\t}\r\n}\r\nFilament.createTileEraser=function(){\r\n\tFilament.tileEraser = new PIXI.Graphics();\r\n\tFilament.tileEraser.beginFill(0);\r\n\tconst ts = Filament.settings.tileSize;\r\n\tFilament.tileEraser.drawRect(0,0,ts,ts);\r\n\tFilament.tileEraser.endFill();\r\n\tFilament.tileEraser.blendMode=Filament.BLEND_MODES.ERASE;\r\n}\r\nFilament.getEraser=function(x,y){\r\n\tconst ts = Filament.settings.tileSize;\r\n\tFilament.tileEraser.position.set(x*ts,y*ts);\r\n\treturn Filament.tileEraser;\r\n}\r\nFilament.events.addEvent('start',()=>{\r\n\tFilament.addBlendMode(\"ERASE\",[0, WebGLRenderingContext.ONE_MINUS_SRC_ALPHA]);\r\n\tFilament.createTileEraser();\r\n});\r\n\r\nFilament.TileSet = class{\r\n\tconstructor(image,data){\r\n\t\tthis.image=image;\r\n\t\tthis.data=data;\r\n\t\tthis.stamp = new PIXI.Sprite(image);\r\n\t}\r\n\tgetStamp(tsX,tsY,x,y){\r\n\t\tconst ts=this.data.tileSize;\r\n\t\tthis.stamp.crop(tsX*ts,tsY*ts,ts,ts);\r\n\t\tthis.stamp.position.set(x*ts,y*ts);\r\n\t\treturn this.stamp;\r\n\t}\r\n\tgetTile(x,y){\r\n\t\tconst row = this.data.data[y];\r\n\t\tif(!row){ row=[] }\r\n\t\tlet tile = row[x];\r\n\t\tif(tile==undefined){ tile={data:0} }\r\n\t\tif( typeof tile==='number' ){\r\n\t\t\ttile={data:tile};\r\n\t\t}else if( tile.passage ){ return tile; }\r\n\t\ttile.passage = tile.data & 0b1111;\r\n\t\ttile.opaque = (tile.data>>>4) & 0b1;\r\n\t\ttile.layer = (tile.data>>>5) & 0b111;\r\n\t\ttile.terrain = tile.data>>>8;\r\n\t\trow[x]=tile;\r\n\t\treturn tile;\r\n\t}\r\n}\r\n\r\nFilament.TileSelector = class extends Filament.Window{\r\n\tconstructor(tilemap){\r\n\t\tsuper();\r\n\t\tthis.tilemap=tilemap;\r\n\t\tthis.classList.add('tileSelector');\r\n\t\tthis.minwidth=0;\r\n\t\tthis.minheight=0;\r\n\t\tthis.width=Filament.settings.tileSize;\r\n\t\tthis.height=Filament.settings.tileSize;\r\n\t\tthis.edgeSnap=true;\r\n\t\tthis.tileX=0;\r\n\t\tthis.tileY=0;\r\n\t\tthis.rightclicked=false;\r\n\t\tFilament.mouse.addEvent('mousemove',this.mousemove,this);\r\n\t\tFilament.mouse.addEvent('mousedown',this.mousedown,this);\r\n\t}\r\n\r\n\tmousemove(event){\r\n\t\tthis.tileX=Math.floor(event.worldX/Filament.settings.tileSize);\r\n\t\tthis.tileY=Math.floor(event.worldY/Filament.settings.tileSize);\r\n\t\tthis.x=this.tileX*Filament.settings.tileSize;\r\n\t\tthis.y=this.tileY*Filament.settings.tileSize;\r\n\t\tif(Filament.mouse.isDown){\r\n\t\t\tthis.placeTile(event);\r\n\t\t}\r\n\t}\r\n\tmousedown(event){\r\n\t\tthis.rightclicked=event.button>0;\r\n\t\tthis.placeTile(event);\r\n\t}\r\n\tplaceTile(event){\r\n\t\tconst cellX=Math.floor(this.tileX/this.tilemap.cellSize);\r\n\t\tconst cellY=Math.floor(this.tileY/this.tilemap.cellSize);\r\n\t\tconst cell = this.tilemap.cells.get(cellX,cellY);\r\n\t\tconst ctX=this.tileX%this.tilemap.cellSize;\r\n\t\tconst ctY=this.tileY%this.tilemap.cellSize;\r\n\t\tconst stack = cell.getTileStack(ctX,ctY);\r\n\t\tcell.clearTile(ctX,ctY);\r\n\t\tif(this.rightclicked){\r\n\t\t\tstack.length=0;\r\n\t\t}else{\r\n\t\t\tstack[0]={ts:0,x:0,y:0};\r\n\t\t\tcell.loadTileStack(ctX,ctY,stack);\r\n\t\t}\r\n\t}\r\n}\r\nFilament.PLACEMENT_MODE = new Filament.Enum(\r\n\t\"PEN\",\"ERASE\",\"FILL\",\"RECT\",\"CLONE\"\r\n);\r\n\r\n/**\r\n * An object representing an indivitual cell in the tilemap.\r\n * contains a reference to MapCellLayer objects for the base and fringe layers as well as\r\n * a list of all entities in the actorLayer associated with this cell.\r\n */\r\nFilament.MapCell = class{\r\n\tconstructor(tilemap){\r\n\t\tthis.tilemap=tilemap;\r\n\t\tthis.baseLayer=new Filament.MapCellLayer(tilemap);\r\n\t\tthis.fringeLayer=new Filament.MapCellLayer(tilemap);\r\n\t\ttilemap.baseLayer.addChild(this.baseLayer);\r\n\t\ttilemap.fringeLayer.addChild(this.fringeLayer);\r\n\t\tthis.loaded=false;\r\n\t\tthis.lastTileset=0;\r\n\t\tthis.load();\r\n\t}\r\n\tgetTileStack(x,y){\r\n\t\tconst i = x+y*this.tilemap.cellSize;\r\n\t\tif(!(this.data[i] instanceof Array)){\r\n\t\t\tthis.data[i]=[this.data[i]];\r\n\t\t}\r\n\t\treturn this.data[i];\r\n\t}\r\n\tasync load(){\r\n\t\t// load cell terrain and json\r\n\t\tthis.data=[];\r\n\t\tthis.actors=[];\r\n\r\n\t\t// loop through each tile stack in the data\r\n\t\tfor(let y=0;y<this.tilemap.cellSize;++y)\r\n\t\tfor(let x=0;x<this.tilemap.cellSize;++x){\r\n\t\t\tawait this.loadTileStack(x,y);\r\n\t\t}\r\n\t\tthis.loaded=true;\r\n\t}\r\n\tasync loadTileStack(x,y,stack=this.getTileStack(x,y)){\r\n\t\tfor(const tile of stack){\r\n\t\t\tawait this.loadTile(tile,x,y);\r\n\t\t}\r\n\t}\r\n\tasync loadTile(tileData,x,y){\r\n\t\tif(!tileData){ return; }\r\n\t\tconst tilesetId='ts' in tileData ? tileData.ts : this.lastTileset;\r\n\t\tif(tilesetId !== this.lastTileset){ this.lastTileset = tilesetId; }\r\n\t\tconst tsX=tileData.x;\r\n\t\tconst tsY=tileData.y;\r\n\t\tconst tileset=await Filament.cache.requestTileset(tilesetId);\r\n\t\t// get tile layer data so we know how to draw it.\r\n\t\t//const tsData = tileset.getTile(tsX,tsY);\r\n\t\tconst layerType = tileset.getTile(tsX,tsY).layer;\r\n\t\tswitch(layerType){\r\n\t\tcase 0://base\r\n\t\t\tthis.baseLayer.drawTile(tileset,tsX,tsY,x,y);\r\n\t\t\tbreak;\r\n\t\tcase 1://actor\r\n\t\t\tbreak;\r\n\t\tcase 2://fringe\r\n\t\t\tbreak;\r\n\t\tcase 3://overpass\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t}\r\n\t}\r\n\tclearTile(x,y){\r\n\t\tthis.baseLayer.clearTile(x,y);\r\n\t\tthis.fringeLayer.clearTile(x,y);\r\n\t}\r\n\tunload(){\r\n\t\tthis.baseLayer.destroy();\r\n\t\tthis.fringeLayer.destroy();\r\n\t}\r\n}\r\n\r\nFilament.MapCellLayer = class extends PIXI.Sprite{\r\n\tconstructor(tilemap){\r\n\t\tsuper(new Filament.MapCellTexture(tilemap));\r\n\t\tthis.tilemap=tilemap;\r\n\t}\r\n\tdestroy(){\r\n\t\tsuper.destroy(...arguments);\r\n\t\tthis.texture.destroy();\r\n\t}\r\n\tdrawTile(tileset,tx,ty,x,y){\r\n\t\tconst stamp = tileset.getStamp(tx,ty,x,y);\r\n\t\tFilament.pixi.renderer.render(stamp,this.texture,false);\r\n\t}\r\n\tclearTile(x,y){\r\n\t\tconst eraser = Filament.getEraser(x,y);\r\n\t\tFilament.pixi.renderer.render(eraser,this.texture,false);\r\n\t}\r\n}\r\n\r\nFilament.MapCellTexture = class extends PIXI.RenderTexture{\r\n\tconstructor(tilemap){\r\n\t\tsuper(new PIXI.BaseRenderTexture(\r\n\t\t\tFilament.settings.tileSize*tilemap.cellSize,\r\n\t\t\tFilament.settings.tileSize*tilemap.cellSize,\r\n\t\t\tFilament.pixiScaleMode,\r\n\t\t));\r\n\t\tthis.tilemap=tilemap;\r\n\t}\r\n};\r\n\r\n\r\n\r\n/*\r\nBetter idea for elevation.\r\nEverything is handled in one layer with tile stacks as usual.\r\n\r\nAn tile can be opaque or transparent.\r\nOpaque tiles erase underlying tiles when placed.\r\nTransparent tiles stack on top of underlying tiles.\r\n\r\nThere are four \"layering\" options for each tile.\r\nBase is rendered under player.\r\nActor is rendered same layer as player.\r\nFringe is rendered above player.\r\nOverpass is special. It's in the actor layer, but is rendered above or below the player depending on their elevation.\r\noverpass elevation is one plus the number of overpass tiles underlying in the stack.\r\nWhen player can step onto overpass tile, their elevation is set to same as the overpass they're walking on.\r\nWhen player can't step onto the overpass tile, they instead step under it.\r\n\r\n*/\r\n\r\n"]}