{"version":3,"sources":["0_pixi_mod.js","1_options.js","1_utility.js","2_main.js","a_mixin_event.js","cache.js","class_0_ui.js","class_battler.js","class_keyboard.js","class_sprite.js","class_ui_scene.js","class_window.js","scene_home.js","tilemap.js"],"names":["PIXI","DisplayObject","prototype","enabled","enable","this","visible","disable","update","delta","zIndex","Container","children","sort","a","b","child","Object","defineProperty","[object Object]","obj","Filament","Scene","parent","scene","addChild","Texture","crop","x","y","w","h","rect","arguments","length","Rectangle","baseTexture","Sprite","texture","Enum","values","value","SCALE_MODE","settings","width","height","tileSize","cellSize","scaleMode","HYBRID","maintainAspectRatio","uiRes","configure","options","assign","loadSettings","async","fetch","gameFile","json","defineProperties","pixiScaleMode","get","NORMAL","SCALE_MODES","LINEAR","NEAREST","truncateNumber","n","truncs","Math","floor","LARGE_NUMBER_ABBREVIATIONS","sleep","ms","Promise","resolve","setTimeout","minmax","min","max","val","round","places","func","factor","pow","ceil","arrayAdd","array","index","indexOf","splice","arrayRemove","mixin_object","target","mixin","implement","call","Function","_mixins","push","bind","instance","clazz","untag","s","v","Array","string","i","html","args","div","document","createElement","innerHTML","NodeList","childNodes","node","append","Element","match","element","id","reg","exec","classList","add","setAttribute","mount","mountElement","handler","construct","isConstructor","f","Boolean","Proxy","err","CoordMap","dimensions","dfault","defaultArgs","data","yz","_getValue","_getSubDimension","set","subdimension","unset","keys","has","pixiCanvas","querySelector","parentElement","ui_container","getElementById","pixi","Application","view","backgroundColor","start","pixiContext","getContext","hybridCanvas","hybridContext","appendChild","style","opacity","body","setProperty","window","addEventListener","resize","ticker","scenes","elapsedMS","updateUI","render","drawImage","roundScale","scaleX","offsetWidth","scaleY","offsetHeight","scale","ratio1","renderer","imageSmoothingEnabled","transform","left","top","MixinEvents","events","eventname","create","event","eventlist","getEventList","callback","remove","EventInterface","removeEvent","Cache","_cache","key","path","gameAsset","resource","requestJSON","image","requestImage","TileSet","requestAsset","url","reject","AssetLoader","addRequest","cache","loaders","Loader","super","_requests","load","loader","resources","request","error","AssetRequest","UI","ui","anchor","ObservablePoint","_onAnchorUpdate","setAccessor","position","v1","v2","destroy","parentNode","removeChild","name","String","getAttribute","getPropertyValue","attributes","properties","worldVisible","mountUI","Battler","stats","lethality","resilience","haste","spirit","luck","keyboard","getKey","keygroup","keygroups","fireEvent","keyname","keyEventHandler","Key","addEventHandler","keydownHandler","keyupHandler","isDown","KeyGroup","keynames","addKey","EMPTY","loadTexture","activeScene","home","oldScene","game","enter","leave","stage","windows","Window","ui_width","ui_height","minwidth","minheight","maxwidth","maxheight","_hasFrame","_interactive","movable","resizable","closable","edgeSnap","content","handle","closeButton","dragging","contentObserver","MutationObserver","resizing","observe","attributeFilter","interactive","hasFrame","bounds","worldTransform","tx","ty","getBoundsUI","windex","setProperties","--width","--height","--x","--y","--z","--alpha","worldAlpha","setAttributes","data-frame","data-interactive","data-movable","data-resizable","data-closable","movementX","movementY","win","updateDrag","updateResize","alpha","MapCellTexture","RenderTexture","tilemap","BaseRenderTexture","MapCellLayer","tileset","stamp","getStamp","MapCell","baseLayer","fringeLayer","loaded","lastTileset","actors","stack","tile","loadTile","tileData","tilesetId","ts","tileX","tileY","requestTileset","tileId","getTile","layer","drawTile","row","undefined","note","passage","opaque","terrain","TileMap","actorLayer","cells"],"mappings":"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","file":"engine.js","sourcesContent":["PIXI.DisplayObject.prototype.enabled=true;\r\nPIXI.DisplayObject.prototype.enable=function(){\r\n\tthis.enabled=true;\r\n\tthis.visible=true;\r\n};\r\nPIXI.DisplayObject.prototype.disable=function(){\r\n\tthis.enabled=false;\r\n\tthis.visible=false;\r\n};\r\nPIXI.DisplayObject.prototype.update=function(delta){};\r\n\r\nPIXI.DisplayObject.prototype.zIndex=0;\r\nPIXI.Container.prototype.update=function(delta){\r\n\tthis.children.sort((a,b)=>a.zIndex-b.zIndex);\r\n\tfor(const child of this.children){\r\n\t\tchild.update(delta);\r\n\t}\r\n};\r\n\r\nObject.defineProperty(PIXI.DisplayObject.prototype,'scene',{\r\n\tget(){\r\n\t\tlet obj=this;\r\n\t\twhile (!(obj instanceof Filament.Scene) && obj.parent){\r\n\t\t\tobj=obj.parent;\r\n\t\t}\r\n\t\treturn (obj instanceof Filament.Scene)?obj:null;\r\n\t},\r\n\tset(scene){\r\n\t\tif(this.scene===scene){ return; }\r\n\t\tscene.addChild(this);\r\n\t}\r\n});\r\n\r\nPIXI.Texture.prototype.crop=function(x,y,w,h){\r\n\tconst rect = arguments.length===1?x:new PIXI.Rectangle(x,y,w,h);\r\n\treturn new PIXI.Texture(this.baseTexture,rect);\r\n}\r\n\r\nPIXI.Sprite.prototype.crop=function(){\r\n\tthis.texture = this.texture.crop(...arguments);\r\n}","Filament.Enum = class Enum{\r\n\tconstructor(...values){\r\n\t\tfor (const value of values){\r\n\t\t\tthis[value]=value;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nFilament.SCALE_MODE = new Filament.Enum(\r\n\t\"NORMAL\",\"NEAREST\",\"HYBRID\"\r\n);\r\n\r\nFilament.settings = {\r\n\twidth: 320,\r\n\theight: 240,\r\n\ttileSize: 16,\r\n\tcellSize: 24,\r\n\tscaleMode: Filament.SCALE_MODE.HYBRID,\r\n\tmaintainAspectRatio: true,\r\n\tuiRes:1,\r\n};\r\n\r\nFilament.configure=options=>{\r\n\tObject.assign(Filament.settings,options);\r\n};\r\n\r\nFilament.loadSettings=async function(){\r\n\tconst settings = await (await fetch(Filament.gameFile('settings.json'))).json();\r\n\tFilament.configure(settings);\r\n};\r\n\r\nObject.defineProperties(Filament,{\r\n\tpixiScaleMode:{\r\n\t\tget:()=>Filament.settings.scaleMode===Filament.SCALE_MODE.NORMAL ? PIXI.SCALE_MODES.LINEAR : PIXI.SCALE_MODES.NEAREST\r\n\t}\r\n});","Filament.truncateNumber=n=>{\r\n\tif(n<=99999){ return n+''; }\r\n\tlet truncs = 0;\r\n\twhile (n>9999 && truncs<5){\r\n\t\tn/=1000;\r\n\t\t++truncs;\r\n\t}\r\n\treturn Math.floor(n)+Filament.LARGE_NUMBER_ABBREVIATIONS[truncs];\r\n};\r\nFilament.LARGE_NUMBER_ABBREVIATIONS=[\r\n\t'','K','M','B','T','Q'\r\n];\r\nFilament.sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms));\r\n\r\nFilament.minmax=(min,max,val)=>Math.max(min,Math.min(max,val));\r\n\r\nFilament.round=(value,places=0,func='round')=>{\r\n\tconst factor = Math.pow(10,places);\r\n\treturn Math[func](value*factor)/factor\r\n}\r\nFilament.floor=(value,places)=>Filament.round(value,places,'floor');\r\nFilament.ceil=(value,places)=>Filament.round(value,places,'ceil');\r\n\r\nFilament.arrayAdd=(array,obj,index=array.length)=>{\r\n\tif(array.indexOf(obj)>=0){ return true; }\r\n\tarray.splice(index,0,obj);\r\n\treturn false;\r\n}\r\n\r\nFilament.arrayRemove=(array,obj)=>{\r\n\tconst index=array.indexOf(obj);\r\n\tif(index>=0){\r\n\t\tarray.splice(index,1);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nFilament.mixin_object=(target,mixin)=>{\r\n\tObject.assign(target,mixin);\r\n\tif(typeof mixin.implement === 'function'){ mixin.implement.call(target); }\r\n}\r\n\r\nFilament.mixin=(target,mixin)=>{\r\n\tif (!(target instanceof Function)){ return Filament.mixin_object(target,mixin); }\r\n\tif(!target._mixins){ target._mixins=[] }\r\n\ttarget._mixins.push(mixin);\r\n\tObject.assign(target.prototype,mixin);\r\n\ttarget.prototype.implement=Filament.implement.bind(this);\r\n}\r\nFilament.implement=function(instance,clazz){\r\n\tif (!instance || !clazz._mixins){ return; }\r\n\tfor (const mixin of clazz._mixins){\r\n\t\tif(typeof mixin.implement === 'function'){ mixin.implement.call(instance); }\r\n\t}\r\n}\r\n\r\nFilament.untag=(s,...v)=>{\r\n\tif(!(s instanceof Array)){ return s; }\r\n\tlet string = '';\r\n\tfor (const i in s){ string+=s[i]+(v[i]||''); }\r\n\treturn string;\r\n}\r\n\r\nFilament.html=(...args)=>{\r\n\tconst string = untag(...args);\r\n\tconst div = document.createElement('div');\r\n\tdiv.innerHTML=string;\r\n\treturn new Filament.NodeList(...div.childNodes);\r\n}\r\n\r\nFilament.NodeList=class extends Array{\r\n\tmount(target){\r\n\t\tfor (const node of this){\r\n\t\t\ttarget.append(node);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\telements(){\r\n\t\tlet array = [];\r\n\t\tfor (const node of this){\r\n\t\t\tif(node instanceof Element){ array.push(node); }\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n}\r\n\r\nFilament.createElement=(string,child)=>{\r\n\tlet match = string.match(/^[^\\s.#[\\]]+/);\r\n\tif(!match){throw `Couldn't find tagname in string ${string}`;}\r\n\tconst element = document.createElement(match[0]);\r\n\tmatch=string.match(/#([^\\s.#[\\]]+)/);\r\n\tif(match){ element.id=match[1]; }\r\n\tlet reg=/\\.([^\\s.#[\\]]+)/g;\r\n\twhile(match=reg.exec(string)){\r\n\t\telement.classList.add(match[1]);\r\n\t}\r\n\treg=/\\[([^\\s.#[\\]=]+)=([^\\s.#[\\]=]+)\\]/g;\r\n\twhile(match=reg.exec(string)){\r\n\t\telement.setAttribute(match[1],match[2]);\r\n\t}\r\n\tif(child){ element.append(child); }\r\n\telement.mount=Filament.mountElement;\r\n\treturn element;\r\n}\r\n\r\nFilament.mountElement=function(target){\r\n\tif(!(this instanceof Element)){ return; }\r\n\ttarget.append(this);\r\n\treturn this;\r\n};\r\n\r\n{\r\n\tconst handler = {construct(){return handler;}};\r\n\tFilament.isConstructor=f=>{\r\n\t\ttry{\r\n\t\t\treturn Boolean(new (new Proxy(f,handler)));\r\n\t\t}catch(err){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilament.CoordMap = class{\r\n\tconstructor(dimensions=2,dfault=null,...defaultArgs){\r\n\t\tthis.dimensions=dimensions;\r\n\t\tthis.dfault=dfault;\r\n\t\tthis.defaultArgs=defaultArgs;\r\n\t\tthis.data={};\r\n\t}\r\n\tget(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\treturn this._getValue(x);\r\n\t\t}\r\n\t\treturn this._getSubDimension(x).get(...yz);\r\n\t}\r\n\t_getValue(x){\r\n\t\tif(x in this.data){\r\n\t\t\treturn this.data[x];\r\n\t\t}\r\n\t\tif(typeof this.dfault==='function'){\r\n\t\t\tif(Filament.isConstructor(this.dfault)){\r\n\t\t\t\treturn new this.dfault(...this.defaultArgs);\r\n\t\t\t}else{\r\n\t\t\t\treturn this.dfault(...this.defaultArgs);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\treturn this.dfault;\r\n\t\t}\r\n\t}\r\n\t_getSubDimension(x){\r\n\t\tif( !(this.data[x] instanceof Filament.CoordMap) ){\r\n\t\t\tthis.data[x]=new Filament.CoordMap(this.dimensions-1,this.dfault,...this.defaultArgs);\r\n\t\t}\r\n\t\treturn this.data[x];\r\n\t}\r\n\tset(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\tthis.data[x]=yz[0];\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._getSubDimension(x).set(...yz);\r\n\t}\r\n\tunset(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\tdelete this.data[x];\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst subdimension = this._getSubDimension(x);\r\n\t\tsubdimension.unset(...yz);\r\n\t\tif(Object.keys(subdimension.data).length===0){\r\n\t\t\tdelete this.data[x];\r\n\t\t}\r\n\t}\r\n\thas(x,...yz){\r\n\t\tif(this.dimensions<=1){\r\n\t\t\treturn x in this.data;\r\n\t\t}\r\n\t\tif( !(x in this.data) ){ return false;}\r\n\t\treturn this._getSubDimension(x).has(...yz);\r\n\t}\r\n}\r\n","Filament.pixiCanvas = document.querySelector(\"#screen-game canvas\");\r\nFilament.parent = Filament.pixiCanvas.parentElement;\r\nFilament.ui_container = document.getElementById(\"ui-container\");\r\nFilament.pixi = new PIXI.Application({\r\n\tview: Filament.pixiCanvas,\r\n\twidth: Filament.settings.width,\r\n\theight: Filament.settings.height,\r\n\tbackgroundColor:0x000088\r\n});\r\n\r\nFilament.start=async function(){\r\n\tawait Filament.loadSettings();\r\n\tFilament.pixiContext = Filament.pixiCanvas.getContext(\"2d\");\r\n\tif( Filament.settings.scaleMode === Filament.SCALE_MODE.HYBRID ){\r\n\t\tFilament.hybridCanvas = document.createElement('canvas');\r\n\t\tFilament.hybridContext = Filament.hybridCanvas.getContext(\"2d\");\r\n\t\tFilament.hybridCanvas.id=\"hybrid-canvas\";\r\n\t\tFilament.pixiCanvas.parentElement.appendChild(Filament.hybridCanvas);\r\n\t\tFilament.pixiCanvas.style.opacity=0;\r\n\t}\r\n\tdocument.body.style.setProperty('--uiRes',Filament.settings.uiRes);\r\n\tdocument.body.style.setProperty('--screen-width',Filament.settings.width);\r\n\tdocument.body.style.setProperty('--screen-height',Filament.settings.height);\r\n\r\n\tFilament.ui_container.style.width = Filament.settings.width*Filament.settings.uiRes+\"px\";\r\n\tFilament.ui_container.style.height = Filament.settings.height*Filament.settings.uiRes+\"px\";\r\n\r\n\twindow.addEventListener('resize',Filament.resize);\r\n\tFilament.resize();\r\n\tFilament.ticker = Filament.pixi.ticker.add(Filament.update,Filament);\r\n\r\n\tfor (const scene of Object.values(Filament.scenes)){\r\n\t\tscene.start();\r\n\t}\r\n};\r\n\r\nFilament.update=()=>{\r\n\tconst delta = Filament.ticker.elapsedMS/1000;\r\n\r\n\tif(Filament.scene){\r\n\t\tFilament.scene.update(delta);\r\n\t\tFilament.scene.updateUI(delta);\r\n\t}\r\n\r\n\tif(Filament.hybridCanvas){\r\n\t\tFilament.pixi.render();\r\n\t\tFilament.hybridContext.drawImage(\r\n\t\t\tFilament.pixiCanvas,\r\n\t\t\t0,0, Filament.settings.width, Filament.settings.height,\r\n\t\t\t0,0, Filament.hybridCanvas.width, Filament.hybridCanvas.height\r\n\t\t);\r\n\t}\r\n};\r\n\r\nFilament.roundScale=n=>Math.round(n)||1;\r\n\r\nFilament.resize=()=>{\r\n\tlet scaleX = Filament.parent.offsetWidth / Filament.settings.width;\r\n\tlet scaleY = Filament.parent.offsetHeight / Filament.settings.height;\r\n\tlet scale = Math.min(scaleX,scaleY);\r\n\tif(Filament.settings.maintainAspectRatio){\r\n\t\tscaleX = scaleY = scale;\r\n\t}else{\r\n\t\tlet ratio1 = Filament.parent.offsetWidth/Filament.parent.offsetHeight;\r\n\t\tlet ratio2 = Filament.settings.width/Filament.settings.height;\r\n\t\tif(ratio1>ratio2){//wide\r\n\t\t\tFilament.pixi.renderer.resize(\r\n\t\t\t\tFilament.settings.height*ratio1,\r\n\t\t\t\tFilament.settings.height\r\n\t\t\t);\r\n\t\t}else{ //tall\r\n\t\t\tFilament.pixi.renderer.resize(\r\n\t\t\t\tFilament.settings.width,\r\n\t\t\t\tFilament.settings.width/ratio1\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tFilament.scaleX=scaleX;\r\n\tFilament.scaleY=scaleY;\r\n\tFilament.scale=scale;\r\n\t\r\n\tFilament.pixiCanvas.style.width = Filament.settings.width*scaleX+\"px\";\r\n\tFilament.pixiCanvas.style.height = Filament.settings.height*scaleY+\"px\";\r\n\tif(Filament.hybridCanvas){\r\n\t\tFilament.hybridCanvas.width = Filament.settings.width*Filament.roundScale(scaleX);\r\n\t\tFilament.hybridCanvas.height = Filament.settings.height*Filament.roundScale(scaleY);\r\n\t\tFilament.hybridCanvas.style.width = Filament.pixiCanvas.style.width;\r\n\t\tFilament.hybridCanvas.style.height = Filament.pixiCanvas.style.height;\r\n\t\tFilament.hybridContext.imageSmoothingEnabled=false;\r\n\t}\r\n\tFilament.ui_container.style.transform=\"scale(\"+scale/Filament.settings.uiRes+\")\";\r\n\tFilament.ui_container.style.left=\r\n\t\tFilament.parent.offsetWidth/2 - Filament.ui_container.offsetWidth/2+\"px\";\r\n\tFilament.ui_container.style.top=\r\n\t\tFilament.parent.offsetHeight/2 - Filament.ui_container.offsetHeight/2+\"px\";\r\n};","Filament.MixinEvents={\r\n\timplement(){\r\n\t\tthis.events={};\r\n\t},\r\n\tgetEventList(eventname,create){\r\n\t\tif(!(eventname in this.events) && create){\r\n\t\t\tthis.events[eventname]=[];\r\n\t\t}\r\n\t\treturn this.events[eventname];\r\n\t},\r\n\tfireEvent(eventname,event={}){\r\n\t\tconst eventlist=this.getEventList(eventname,false);\r\n\t\tif(!eventlist){ return; }\r\n\t\tfor (const callback in eventlist){\r\n\t\t\tevent.remove=Filament.EventInterface.removeEvent.bind(this,eventname,callback);\r\n\t\t\tif(typeof callback === 'function'){ callback(event); }\r\n\t\t}\r\n\t},\r\n\taddEvent(eventname,callback){\r\n\t\treturn Filament.arrayAdd(this.getEventList(eventname,true),callback);\r\n\t},\r\n\tremoveEvent(eventname,callback){\r\n\t\tconst eventlist = this.getEventList(eventname,false);\r\n\t\tif(!eventlist){ return false; }\r\n\t\treturn Filament.arrayRemove(this.events[eventname],callback);\r\n\t}\r\n}","Filament.Cache=class{\r\n\tconstructor(){\r\n\t\tthis._cache={};\r\n\t}\r\n\r\n\tasync requestImage(key,path='assets/images'){\r\n\t\treturn await this.gameAsset(key,path,(resource)=>{\r\n\t\t\tresource.texture.baseTexture.scaleMode=Filament.pixiScaleMode;\r\n\t\t\treturn resource.texture;\r\n\t\t});\r\n\t}\r\n\tasync requestAudio(key){\r\n\t\t\r\n\t}\r\n\tasync requestJSON(key,path='data'){\r\n\t\treturn await this.gameAsset(key,path,(resource)=>{\r\n\t\t\treturn resource.data;\r\n\t\t})\r\n\t}\r\n\tasync requestTileset(id){\r\n\t\tconst data = await requestJSON(`tilesets/${id}.json`);\r\n\t\tconst image = await requestImage(data.image,'assets/tilesets');\r\n\t\treturn new Filament.TileSet(image,data);\r\n\t}\r\n\tasync gameAsset(key,path,callback){\r\n\t\tpath=Filament.path(path,key);\r\n\t\treturn await this.requestAsset(path,Filament.gameFile(path),callback);\r\n\t}\r\n\trequestAsset(key,url,callback){\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\tif(!this._cache[key]){\r\n\t\t\t\tthis._cache[key]=new Filament.AssetLoader(key,url,this);\r\n\t\t\t}\r\n\t\t\tif(this._cache[key] instanceof Filament.AssetLoader){\r\n\t\t\t\tthis._cache[key].addRequest(resolve,reject,callback);\r\n\t\t\t}else{\r\n\t\t\t\tresolve(callback(this._cache[key]));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nFilament.cache=new Filament.Cache();\r\n\r\nFilament.AssetLoader=class extends PIXI.loaders.Loader{\r\n\tconstructor(key,url,cache){\r\n\t\tsuper();\r\n\t\tthis.add(key,url);\r\n\t\tthis._requests=[];\r\n\t\tthis.load((loader,resources)=>{\r\n\t\t\tconst resource=resources[key];\r\n\t\t\tfor (const request of this._requests){\r\n\t\t\t\tif(resource.error){\r\n\t\t\t\t\trequest.reject(resource.error);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trequest.resolve(request.callback(resource));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(resource.error){\r\n\t\t\t\tdelete cache._cache[key];\r\n\t\t\t}else{\r\n\t\t\t\tcache._cache[key]=resource;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\taddRequest(resolve,reject,callback){\r\n\t\tthis._requests.push(new Filament.AssetRequest(resolve,reject,callback));\r\n\t}\r\n}\r\n\r\nFilament.AssetRequest=class{\r\n\tconstructor(resolve,reject,callback){\r\n\t\tthis.resolve=resolve;\r\n\t\tthis.reject=reject;\r\n\t\tthis.callback=callback;\r\n\t}\r\n}","Filament.UI = class extends PIXI.Container{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.ui = document.createElement('div');\r\n\t\tthis.anchor = new PIXI.ObservablePoint(this._onAnchorUpdate, this);\r\n\t\tthis.setAccessor('id');\r\n\t\tthis.setAccessor('className');\r\n\t\tthis.classList=this.ui.classList;\r\n\t\tthis.style=this.ui.style;\r\n\t\tthis.style.position=\"absolute\";\r\n\t}\r\n\tmount(parent){\r\n\t\tparent.addChild(this);\r\n\t\treturn this;\r\n\t}\r\n\tmountUI(parent){\r\n\t\t(parent instanceof Filament.UI ? parent.ui : parent).append(this.ui);\r\n\t\treturn this;\r\n\t}\r\n\tsetAccessor(v1,v2=v1){\r\n\t\tObject.defineProperty(this,v1,{\r\n\t\t\tget(){return this.ui[v2];},\r\n\t\t\tset(v){this.ui[v2]=v;}\r\n\t\t});\r\n\t}\r\n\tenable(){\r\n\t\tsuper.enable();\r\n\t\tthis.setAttribute('data-enabled',true);\r\n\t}\r\n\tdisable(){\r\n\t\tsuper.disable();\r\n\t\tthis.setAttribute('data-enabled',false);\r\n\t}\r\n\tdestroy(){\r\n\t\tsuper.destroy();\r\n\t\tthis.ui.parentNode.removeChild(this.ui);\r\n\t}\r\n\tsetAttribute(name,value){\r\n\t\tvalue=String(value);\r\n\t\tif(this.ui.getAttribute(name)!==value){\r\n\t\t\tthis.ui.setAttribute(name,value);\r\n\t\t}\r\n\t}\r\n\tsetProperty(name,value){\r\n\t\tvalue=String(value);\r\n\t\tif(this.ui.style.getPropertyValue(name)!==value){\r\n\t\t\tthis.ui.style.setProperty(name,value);\r\n\t\t}\r\n\t}\r\n\tsetAttributes(attributes){\r\n\t\tfor (const key in attributes){ this.setAttribute(key,attributes[key]); }\r\n\t}\r\n\tsetProperties(properties){\r\n\t\tfor (const key in properties){ this.setProperty(key,properties[key]); }\r\n\t}\r\n\tupdateUI(delta){\r\n\t\tthis.setAttribute(\"data-visible\",this.worldVisible);\r\n\t\tif(!this.ui.parentNode && this.scene && this.scene!==this){ this.mountUI(this.scene); }\r\n\t}\r\n\t_onAnchorUpdate(){\r\n\t\t//this.ui.style.transform = \"translate(\"+-this.anchor.x*100+\"%,\"+-this.anchor.y*100+\"%)\";\r\n\t}\r\n}","/* NOTES\r\nLethality (attack power)\r\nResilience (hp and def)\r\nHaste (SP)\r\nSpirit (MP)\r\n\r\nhidden stats:\r\nLuck\r\n\r\n\r\nEquipment types:\r\nWeapon\r\nArmor\r\nAccessory\r\n*/\r\n\r\nFilament.Battler = class{\r\n\tconstructor(){\r\n\t\tthis.stats={\r\n\t\t\tlethality:0,\r\n\t\t\tresilience:0,\r\n\t\t\thaste:0,\r\n\t\t\tspirit:0,\r\n\t\t\tluck:0,\r\n\t\t};\r\n\t}\r\n};","Filament.keyboard={\r\n\tkeys:{},\r\n\tkeyEventHandler(eventname,event){\r\n\t\tconst key = this.getKey(event.key,false);\r\n\t\tif(typeof key[eventname] === 'function')key[eventname]();\r\n\t\tfor (const keygroup of key.keygroups){\r\n\t\t\tkeygroup.fireEvent(eventname,event);\r\n\t\t}\r\n\t},\r\n\taddEventHandler(keyname){\r\n\t\tthis[`${keyname}Handler`]=this.keyEventHandler.bind(this,keyname);\r\n\t},\r\n\tgetKey(keyname,create){\r\n\t\tif(!(keyname in this.keys) && create){\r\n\t\t\tthis.keys[keyname]=new Filament.Key(keyname);\r\n\t\t}\r\n\t\treturn this.keys[keyname];\r\n\t}\r\n};\r\nFilament.keyboard.addEventHandler('keydown');\r\nFilament.keyboard.addEventHandler('keyup');\r\n\r\nFilament.parent.addEventListener('keydown',Filament.keyboard.keydownHandler);\r\nFilament.parent.addEventListener('keyup',Filament.keyboard.keyupHandler);\r\n\r\nFilament.Key = class{\r\n\tconstructor(name){\r\n\t\tthis.name=name;\r\n\t\tthis.isDown=false;\r\n\t\tthis.keygroups=[];\r\n\t}\r\n\tkeydown(){\r\n\t\tthis.isDown=true;\r\n\t}\r\n\tkeyup(){\r\n\t\tthis.isDown=false;\r\n\t}\r\n}\r\n\r\nFilament.KeyGroup = class{\r\n\tconstructor(name,keynames=[]){\r\n\t\tthis.name=name;\r\n\t\tthis.keys=[];\r\n\t\tfor (const keyname of keynames){\r\n\t\t\tthis.addKey(keyname);\r\n\t\t}\r\n\t\t//Filament.mixin(this,Filament.EventMixin);\r\n\t\tthis.implement(Filament.KeyGroup);\r\n\t}\r\n\taddKey(keyname){\r\n\t\tconst key = Filament.keyboard.getKey(keyname,true);\r\n\t\tFilament.arrayAdd(key.keygroups,this);\r\n\t\tFilament.arrayAdd(this.keys,key);\r\n\t}\r\n\tremoveKey(keyname){\r\n\t\tconst key = Filament.keyboard.getKey(keyname,false);\r\n\t\tif(!key){ return; }\r\n\t\tFilament.arrayRemove(key.keygroups,this);\r\n\t\tFilament.arrayRemove(this.keys,key);\r\n\t}\r\n\tget isDown(){\r\n\t\tfor (const key in this.keys){\r\n\t\t\tif(key.isDown){ return true; }\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nFilament.mixin(Filament.KeyGroup, Filament.MixinEvents);","Filament.Sprite = class extends PIXI.Sprite{\r\n\tconstructor(key){\r\n\t\tsuper(PIXI.Texture.EMPTY);\r\n\t\tthis.loadTexture(key);\r\n\t}\r\n\tasync loadTexture(key){\r\n\t\tthis.texture=await Filament.cache.requestImage(key);\r\n\t}\r\n\tmount(parent){\r\n\t\tparent.addChild(this);\r\n\t\treturn this;\r\n\t}\r\n}","Filament.scenes={};\r\nFilament.activeScene=\"home\";\r\nObject.defineProperty(Filament,\"scene\",{\r\n\tget:()=>Filament.scenes[Filament.activeScene]||Filament.scenes.home,\r\n\tset(value){\r\n\t\tconst oldScene=Filament.activeScene;\r\n\t\tif(value in Filament.scenes){\r\n\t\t\tFilament.activeScene=value;\r\n\t\t}else{\r\n\t\t\tfor (const key in Filament.scenes){\r\n\t\t\t\tif(value===game.scenes[key]){\r\n\t\t\t\t\tFilament.activeScene=key;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(Filament.activeScene===oldScene){ return; }\r\n\t\tfor (const scene of Filament.scenes){\r\n\t\t\tif(Filament.activeScene===scene.name){\r\n\t\t\t\tscene.enable();\r\n\t\t\t\tscene.enter();\r\n\t\t\t}else if (scene.enabled){\r\n\t\t\t\tscene.disable();\r\n\t\t\t\tscene.leave();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n\r\nFilament.ui_container = document.getElementById(\"ui-container\");\r\n\r\nFilament.Scene = class extends Filament.UI{\r\n\tconstructor(name){\r\n\t\tsuper();\r\n\t\tthis.mountUI(Filament.ui_container);\r\n\t\tthis.mount(Filament.pixi.stage);\r\n\t\tFilament.scenes[name] = this;\r\n\t\tthis.id=\"scene-\"+name;\r\n\t\tthis.classList.add(\"scene\");\r\n\t\tthis.name=name;\r\n\t\tthis.windows=[];\r\n\t}\r\n\tupdateUI(delta){\r\n\t\tsuper.updateUI(delta);\r\n\t\tfor (let i=this.windows.length-1; i>=0; --i){\r\n\t\t\tthis.windows[i].updateUI(delta);\r\n\t\t}\r\n\t}\r\n\tstart(){}\r\n\tenter(){}\r\n\tleave(){}\r\n}","Filament.Window = class extends Filament.UI{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.classList.add('window');\r\n\t\tthis.ui_width=20;\r\n\t\tthis.ui_height=20;\r\n\t\tthis.minwidth=20;\r\n\t\tthis.minheight=20;\r\n\t\tthis.maxwidth=Filament.settings.width;\r\n\t\tthis.maxheight=Filament.settings.height;\r\n\t\tthis._hasFrame=false;\r\n\t\tthis._interactive=false;\r\n\t\tthis.movable=false;\r\n\t\tthis.resizable=false;\r\n\t\tthis.closable=false;\r\n\t\tthis.edgeSnap=true;\r\n\t\tthis.content=Filament.createElement('div.content').mount(this.ui);\r\n\t\tthis.handle=Filament.createElement('div.handle').mount(this.ui);\r\n\t\tthis.closeButton=Filament.createElement('div.closeButton','×').mount(this.ui);\r\n\t\tthis.closeButton.addEventListener('click',event=>{\r\n\t\t\tthis.destroy();\r\n\t\t});\r\n\t\tthis.handle.addEventListener('mousedown',event=>{\r\n\t\t\tFilament.arrayRemove(this.scene.windows,this);\r\n\t\t\tFilament.arrayAdd(this.scene.windows,this);\r\n\t\t\tthis.dragging=true;\r\n\t\t});\r\n\t\tthis.handle.addEventListener('mouseup',event=>{\r\n\t\t\tthis.dragging=false;\r\n\t\t});\r\n\t\tthis.contentObserver=new MutationObserver(()=>{\r\n\t\t\tif(this.resizable){\r\n\t\t\t\tif(this.content.style.width||this.content.style.height){\r\n\t\t\t\t\tthis.content.style.width='';\r\n\t\t\t\t\tthis.content.style.height='';\r\n\t\t\t\t\tthis.resizing=true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.contentObserver.observe(this.content,{attributes:true,attributeFilter:['style']});\r\n\t}\r\n\tmount(parent){\r\n\t\tsuper.mount(parent);\r\n\t\tif(parent.scene)this.mountUI(this.scene);\r\n\t\treturn this;\r\n\t}\r\n\tmountUI(scene){\r\n\t\tif(this.scene) Filament.arrayRemove(this.scene.windows,this);\r\n\t\tsuper.mountUI(scene);\r\n\t\tFilament.arrayAdd(scene.windows,this);\r\n\t\treturn this;\r\n\t}\r\n\tdestroy(){\r\n\t\tif(this.scene) Filament.arrayRemove(this.scene.windows,this);\r\n\t\tsuper.destroy(...arguments);\r\n\t}\r\n\tget width(){return this.ui_width;}\r\n\tset width(v){this.ui_width=v;}\r\n\tget height(){return this.ui_height;}\r\n\tset height(v){this.ui_height=v;}\r\n\tget interactive(){return this._interactive||this.movable||this.resizable||this.closable;}\r\n\tset interactive(v){this._interactive=v;}\r\n\tget hasFrame(){return this._hasFrame||this.movable||this.resizable||this.closable;}\r\n\tset hasFrame(v){this._hasFrame=v;}\r\n\tgetBoundsUI(){\r\n\t\tlet bounds = {};\r\n\t\tbounds.width = Filament.round(this.width,2);\r\n\t\tbounds.height = Filament.round(this.height,2);\r\n\t\tbounds.left=Filament.round(this.worldTransform.tx-this.anchor.x*bounds.width,2);\r\n\t\tbounds.top=Filament.round(this.worldTransform.ty-this.anchor.y*bounds.height,2);\r\n\t\treturn bounds;\r\n\t}\r\n\tupdateUI(delta){\r\n\t\tsuper.updateUI(delta);\r\n\t\tif(this.edgeSnap){\r\n\t\t\tthis.x=Filament.minmax(0,Filament.settings.width-this.width,this.x);\r\n\t\t\tthis.y=Filament.minmax(0,Filament.settings.height-this.height,this.y);\r\n\t\t}\r\n\t\tif(this.resizable){\r\n\t\t\tthis.width=Filament.minmax(this.minwidth,this.maxwidth,this.width);\r\n\t\t\tthis.height=Filament.minmax(this.minheight,this.maxheight,this.height);\r\n\t\t}\r\n\t\tlet bounds = this.getBoundsUI(true);\r\n\t\tconst windex = this.scene.windows.indexOf(this);\r\n\t\tthis.setProperties({\r\n\t\t\t\"--width\"\t:\tbounds.width,\r\n\t\t\t\"--height\"\t:\tbounds.height,\r\n\t\t\t\"--x\"\t\t:\tbounds.left,\r\n\t\t\t\"--y\"\t\t:\tbounds.top,\r\n\t\t\t\"--z\"\t\t:\tthis.zIndex+windex/1000,\r\n\t\t\t\"--alpha\"\t:\tthis.worldAlpha,\r\n\t\t});\r\n\t\tthis.setAttributes({\r\n\t\t\t\"data-frame\"\t\t:\tthis.hasFrame,\r\n\t\t\t\"data-interactive\"\t:\tthis.interactive,\r\n\t\t\t\"data-movable\"\t\t:\tthis.movable,\r\n\t\t\t\"data-resizable\"\t:\tthis.resizable,\r\n\t\t\t\"data-closable\"\t\t:\tthis.closable,\r\n\t\t});\r\n\t}\r\n\tupdateDrag(event){\r\n\t\tthis.x+=event.movementX/Filament.scale;\r\n\t\tthis.y+=event.movementY/Filament.scale;\r\n\t}\r\n\tupdateResize(event){\r\n\t\tthis.width=Math.min(Filament.settings.width-this.x, this.width+event.movementX/Filament.scale);\r\n\t\tthis.height=Math.min(Filament.settings.height-this.y, this.height+event.movementY/Filament.scale);\r\n\t\tthis.resizing=false;\r\n\t}\r\n}\r\n\r\nwindow.addEventListener('mousemove',event=>{\r\n\tif(!Filament.scene){ return; }\r\n\tfor (const win of Filament.scene.windows){\r\n\t\tif (win.dragging){ win.updateDrag(event); }\r\n\t\tif (win.resizing){ win.updateResize(event); }\r\n\t}\r\n});\r\nwindow.addEventListener('mouseup',event=>{\r\n\tif(!Filament.scene){ return; }\r\n\tfor (const win of Filament.scene.windows){\r\n\t\twin.dragging=false;\r\n\t}\r\n});","new Filament.Scene('home');\r\n\r\nFilament.scenes.home.start=function(){\r\n\tthis.window = new Filament.Window().mount(this);\r\n\tthis.window.width=100;\r\n\tthis.window.height=50;\r\n\tthis.window.x=50;\r\n\tthis.window.y=25;\r\n\tthis.window.resizable=true;\r\n\tthis.window.movable=true;\r\n\tthis.window.closable=true;\r\n\tthis.window.content.append(\"Hello World\");\r\n\tnew Filament.Sprite('ebby.png').mount(this).alpha=0.6;\r\n\tnew Filament.Sprite('ebby.png').mount(this).x=20;\r\n}\r\n\r\nFilament.scenes.home.update=function(){\r\n\t\r\n}","\r\nFilament.MapCellTexture = class extends PIXI.RenderTexture{\r\n\tconstructor(tilemap){\r\n\t\tsuper(new PIXI.BaseRenderTexture({\r\n\t\t\twidth: Filament.settings.tileSize*tilemap.cellSize,\r\n\t\t\theight: Filament.settings.tileSize*tilemap.cellSize,\r\n\t\t\tscaleMode: Filament.pixiScaleMode,\r\n\t\t}));\r\n\t\tthis.tilemap=tilemap;\r\n\t}\r\n};\r\n\r\nFilament.MapCellLayer = class extends PIXI.Sprite{\r\n\tconstructor(tilemap){\r\n\t\tsuper(new Filament.MapCellTexture(tilemap));\r\n\t}\r\n\tdestroy(){\r\n\t\tsuper.destroy(...arguments);\r\n\t\tthis.texture.destroy();\r\n\t}\r\n\tdrawTile(tileset,tx,ty,x,y){\r\n\t\tconst stamp = tileset.getStamp(tx,ty);\r\n\t\tstamp.position.set(x,y);\r\n\t\tFilament.pixi.renderer.render(stamp,this.texture);\r\n\t}\r\n}\r\n\r\n/**\r\n * An object representing an indivitual cell in the tilemap.\r\n * contains a reference to MapCellLayer objects for the base and fringe layers as well as\r\n * a list of all entities in the actorLayer associated with this cell.\r\n */\r\nFilament.MapCell = class{\r\n\tconstructor(tilemap){\r\n\t\tthis.tilemap=tilemap;\r\n\t\tthis.baseLayer=new Filament.MapCellLayer();\r\n\t\tthis.fringeLayer=new Filament.MapCellLayer();\r\n\t\ttilemap.baseLayer.addChild(this.baseLayer);\r\n\t\ttilemap.fringeLayer.addChild(this.fringeLayer);\r\n\t\tthis.loaded=false;\r\n\t\tthis.lastTileset=0;\r\n\t\tthis.texture = new MapCellTexture(this.tilemap);\r\n\t}\r\n\tasync load(){\r\n\t\t// load cell terrain and json\r\n\t\tthis.data=[];\r\n\t\tthis.actors=[];\r\n\r\n\t\t// loop through each tile stack in the data\r\n\t\tfor(let i=0;i<data.length;++i){\r\n\t\t\tconst stack = data[i];\r\n\t\t\tconst x=i%this.tilemap.cellSize;\r\n\t\t\tconst y=Math.floor(i/Math.tilemap.cellSize);\r\n\t\t\tif(stack instanceof Array){\r\n\t\t\t\tfor(const tile of stack){ await this.loadTile(tile,x,y); }\r\n\t\t\t}else{\r\n\t\t\t\tawait this.loadTile(stack,x,y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.loaded=true;\r\n\t}\r\n\tasync loadTile(tileData,x,y){\r\n\t\tconst tilesetId='ts' in tileData ? tileData.ts : this.lastTileset;\r\n\t\tif(tilesetId !== this.lastTileset){ this.lastTileset = tilesetId; }\r\n\t\tconst tileX=tileData.x;\r\n\t\tconst tileY=tileData.y;\r\n\t\tconst tileset=Filament.cache.requestTileset(tileId);\r\n\t\t// get tile layer data so we know how to draw it.\r\n\t\tconst layerType = tileset.getTile(tileX,tileY).layer;\r\n\t\tswitch(layerType){\r\n\t\tcase 0://base\r\n\t\t\tthis.baseLayer.drawTile(tileset,tileX,tileY,x,y);\r\n\t\t\tbreak;\r\n\t\tcase 1://actor\r\n\t\t\tbreak;\r\n\t\tcase 2://fringe\r\n\t\t\tbreak;\r\n\t\tcase 3://overpass\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t}\r\n\t}\r\n\tunload(){\r\n\t\tthis.baseLayer.destroy();\r\n\t\tthis.fringeLayer.destroy();\r\n\t}\r\n}\r\n\r\nFilament.TileSet = class{\r\n\tconstructor(image,data){\r\n\t\tthis.image=image;\r\n\t\tthis.data=data;\r\n\t\tthis.stamp = new PIXI.Sprite(image);\r\n\t}\r\n\tgetStamp(x,y){\r\n\t\tconst ts=this.data.tileSize;\r\n\t\tthis.stamp.crop(x*ts,y*ts,ts,ts);\r\n\t\treturn this.stamp;\r\n\t}\r\n\tgetTile(x,y){\r\n\t\tconst row = this.data.data[y];\r\n\t\tif(!row){ return null; }\r\n\t\tlet tile = row[x];\r\n\t\tif(tile==undefined){ return null; }\r\n\t\tif( typeof tile==='number' ){\r\n\t\t\ttile={data:tile,note:''};\r\n\t\t}else if( tile.passage ){ return tile; }\r\n\t\ttile.passage = tile.data & 0b1111;\r\n\t\ttile.opaque = (tile.data>>>4) & 0b1;\r\n\t\ttile.layer = (tile.data>>>5) & 0b111;\r\n\t\ttile.terrain = tile.data>>>8;\r\n\t\trow[x]=tile;\r\n\t}\r\n}\r\n\r\n/**\r\n * The TileMap Class.\r\n * Each tilemap has multiple elevation layers.\r\n */\r\nFilament.TileMap = class extends PIXI.Container{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.baseLayer = new PIXI.Container();\r\n\t\tthis.actorLayer = new PIXI.Container();\r\n\t\tthis.fringeLayer = new PIXI.Container();\r\n\t\tthis.cells = new Filament.CoordMap(2);\r\n\t\t// TODO: read map settings from JSON.\r\n\t\tthis.settings={\r\n\t\t\tname:'',\r\n\t\t\tcellSize:null,\r\n\t\t};\r\n\t}\r\n\tget cellSize(){\r\n\t\treturn this.settings.cellSize?this.settings.cellSize:Filament.settings.cellSize;\r\n\t}\r\n}\r\n\r\n/*\r\nBetter idea for elevation.\r\nEverything is handled in one layer with tile stacks as usual.\r\n\r\nAn tile can be opaque or transparent.\r\nOpaque tiles erase underlying tiles when placed.\r\nTransparent tiles stack on top of underlying tiles.\r\n\r\nThere are four \"layering\" options for each tile.\r\nBase is rendered under player.\r\nActor is rendered same layer as player.\r\nFringe is rendered above player.\r\nOverpass is special. It's in the actor layer, but is rendered above or below the player depending on their elevation.\r\noverpass elevation is one plus the number of overpass tiles underlying in the stack.\r\nWhen player can step onto overpass tile, their elevation is set to same as the overpass they're walking on.\r\nWhen player can't step onto the overpass tile, they instead step under it.\r\n\r\n*/"]}